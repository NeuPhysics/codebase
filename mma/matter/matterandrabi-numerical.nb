(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    361364,       6820]
NotebookOptionsPosition[    358323,       6716]
NotebookOutlinePosition[    358705,       6733]
CellTagsIndexPosition[    358662,       6730]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "I use ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "_"], "=", 
    RowBox[{"omega", " ", "x"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as variable x here. In other words, the x I am going to use is in fact \
omega x."
}], "Text",
 CellChangeTimes->{{3.651701088241207*^9, 3.6517011067697983`*^9}, {
  3.651701182288087*^9, 3.65170120020623*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgsize", "=", "Large"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgpadding", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"70", ",", " ", "20"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"50", ",", " ", "10"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.651875138579206*^9, 3.6518751407564363`*^9}, {
  3.6518753675623217`*^9, 3.6518753751842117`*^9}, {3.651875419719901*^9, 
  3.651875419886692*^9}, {3.65187547980511*^9, 3.651875480365263*^9}, {
  3.6518755676386747`*^9, 3.65187556805132*^9}, {3.6518779441294727`*^9, 
  3.651877960901767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"beta", "=", "0.1"}], "\n", 
 RowBox[{"alpha", "=", "0.1"}], "\n", 
 RowBox[{"sin2thetav", "=", "0.917"}], "\n", 
 RowBox[{"cos2thetav", "=", "0.4"}]}], "Input",
 CellChangeTimes->{{3.6517010391001043`*^9, 3.651701061585635*^9}, {
   3.651701175826766*^9, 3.651701176546379*^9}, {3.651702065565913*^9, 
   3.6517020675787354`*^9}, {3.651702371966825*^9, 3.651702378496026*^9}, {
   3.651702487092162*^9, 3.651702499077189*^9}, {3.651704025185781*^9, 
   3.651704025456212*^9}, {3.6517040574232473`*^9, 3.651704066141254*^9}, 
   3.651704111589773*^9, {3.6517041458694773`*^9, 3.65170414838805*^9}, {
   3.6518693504352207`*^9, 3.651869367011339*^9}, {3.651872407173976*^9, 
   3.651872408110817*^9}, {3.6518736431427393`*^9, 3.651873644122657*^9}, {
   3.651874080593396*^9, 3.651874080902589*^9}, {3.6518756820164127`*^9, 
   3.651875735400353*^9}, {3.6518757882364187`*^9, 3.651875808987604*^9}, 
   3.651875896576954*^9, 3.651875949126729*^9, {3.651877408744494*^9, 
   3.651877408917667*^9}, {3.651878090958637*^9, 3.651878091499765*^9}, {
   3.651878130702036*^9, 3.651878164236258*^9}, {3.6518790624319468`*^9, 
   3.651879062645639*^9}}],

Cell[BoxData["0.1`"], "Output",
 CellChangeTimes->{
  3.65170254051259*^9, 3.651702687009797*^9, 3.651703786676063*^9, {
   3.651704025982901*^9, 3.651704066623074*^9}, 3.651704112539016*^9, 
   3.651704148787171*^9, 3.651869372291177*^9, 3.651872410105484*^9, 
   3.6518736460164967`*^9, 3.6518740824178333`*^9, {3.65187568631888*^9, 
   3.6518757382329817`*^9}, {3.6518757941437683`*^9, 3.6518758298472*^9}, 
   3.651875860855275*^9, 3.651875899280648*^9, 3.6518759507780657`*^9, {
   3.651877409518498*^9, 3.6518774110223103`*^9}, {3.651877453363883*^9, 
   3.6518774724744577`*^9}, 3.651877556427269*^9, 3.651877643916594*^9, 
   3.6518780931946583`*^9, {3.651878131772794*^9, 3.651878133269847*^9}, 
   3.651878165956009*^9, 3.6518790646161757`*^9, 3.6518791118160048`*^9, 
   3.651879630653739*^9, 3.6518797608581963`*^9, 3.65187979586231*^9, 
   3.651943836209074*^9, 3.6519520317687407`*^9}],

Cell[BoxData["0.1`"], "Output",
 CellChangeTimes->{
  3.65170254051259*^9, 3.651702687009797*^9, 3.651703786676063*^9, {
   3.651704025982901*^9, 3.651704066623074*^9}, 3.651704112539016*^9, 
   3.651704148787171*^9, 3.651869372291177*^9, 3.651872410105484*^9, 
   3.6518736460164967`*^9, 3.6518740824178333`*^9, {3.65187568631888*^9, 
   3.6518757382329817`*^9}, {3.6518757941437683`*^9, 3.6518758298472*^9}, 
   3.651875860855275*^9, 3.651875899280648*^9, 3.6518759507780657`*^9, {
   3.651877409518498*^9, 3.6518774110223103`*^9}, {3.651877453363883*^9, 
   3.6518774724744577`*^9}, 3.651877556427269*^9, 3.651877643916594*^9, 
   3.6518780931946583`*^9, {3.651878131772794*^9, 3.651878133269847*^9}, 
   3.651878165956009*^9, 3.6518790646161757`*^9, 3.6518791118160048`*^9, 
   3.651879630653739*^9, 3.6518797608581963`*^9, 3.65187979586231*^9, 
   3.651943836209074*^9, 3.651952031773239*^9}],

Cell[BoxData["0.917`"], "Output",
 CellChangeTimes->{
  3.65170254051259*^9, 3.651702687009797*^9, 3.651703786676063*^9, {
   3.651704025982901*^9, 3.651704066623074*^9}, 3.651704112539016*^9, 
   3.651704148787171*^9, 3.651869372291177*^9, 3.651872410105484*^9, 
   3.6518736460164967`*^9, 3.6518740824178333`*^9, {3.65187568631888*^9, 
   3.6518757382329817`*^9}, {3.6518757941437683`*^9, 3.6518758298472*^9}, 
   3.651875860855275*^9, 3.651875899280648*^9, 3.6518759507780657`*^9, {
   3.651877409518498*^9, 3.6518774110223103`*^9}, {3.651877453363883*^9, 
   3.6518774724744577`*^9}, 3.651877556427269*^9, 3.651877643916594*^9, 
   3.6518780931946583`*^9, {3.651878131772794*^9, 3.651878133269847*^9}, 
   3.651878165956009*^9, 3.6518790646161757`*^9, 3.6518791118160048`*^9, 
   3.651879630653739*^9, 3.6518797608581963`*^9, 3.65187979586231*^9, 
   3.651943836209074*^9, 3.6519520317766247`*^9}],

Cell[BoxData["0.4`"], "Output",
 CellChangeTimes->{
  3.65170254051259*^9, 3.651702687009797*^9, 3.651703786676063*^9, {
   3.651704025982901*^9, 3.651704066623074*^9}, 3.651704112539016*^9, 
   3.651704148787171*^9, 3.651869372291177*^9, 3.651872410105484*^9, 
   3.6518736460164967`*^9, 3.6518740824178333`*^9, {3.65187568631888*^9, 
   3.6518757382329817`*^9}, {3.6518757941437683`*^9, 3.6518758298472*^9}, 
   3.651875860855275*^9, 3.651875899280648*^9, 3.6518759507780657`*^9, {
   3.651877409518498*^9, 3.6518774110223103`*^9}, {3.651877453363883*^9, 
   3.6518774724744577`*^9}, 3.651877556427269*^9, 3.651877643916594*^9, 
   3.6518780931946583`*^9, {3.651878131772794*^9, 3.651878133269847*^9}, 
   3.651878165956009*^9, 3.6518790646161757`*^9, 3.6518791118160048`*^9, 
   3.651879630653739*^9, 3.6518797608581963`*^9, 3.65187979586231*^9, 
   3.651943836209074*^9, 3.651952031780429*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnc2", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"c2", "''"}], "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "I"}], " ", "alpha", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"beta", " ", "x"}], "]"}], " ", "cos2thetav"}], "+", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "beta"}], " ", 
          RowBox[{"Tan", "[", 
           RowBox[{"beta", " ", "x"}], "]"}]}], " ", "+", " ", "I"}], " ", 
        ")"}]}], ")"}], 
     RowBox[{
      RowBox[{"c2", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["I", "2"], "alpha", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"beta", " ", "x"}], "]"}], " ", "cos2thetav", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "beta"}], " ", 
           RowBox[{"Tan", "[", 
            RowBox[{"beta", " ", "x"}], "]"}]}], "+", "I"}], ")"}]}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", "alpha", ")"}], "^", "2"}], "4"], 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"beta", " ", "x"}], "]"}], "^", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"cos2thetav", "^", "2"}], "-", 
          RowBox[{"sin2thetav", "^", "2"}]}], ")"}]}]}], ")"}], 
     RowBox[{"c2", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.651697682240844*^9, 3.651697683258768*^9}, {
   3.6516977317658367`*^9, 3.651697761203959*^9}, 3.65169831568956*^9, {
   3.6516985377985563`*^9, 3.6516985928197813`*^9}, {3.6517004149035273`*^9, 
   3.651700495425906*^9}, {3.651700556579406*^9, 3.6517005761496*^9}, 
   3.65170103711668*^9, {3.6517010721095867`*^9, 3.651701083859085*^9}, {
   3.6517011341537933`*^9, 3.651701168320418*^9}, {3.65170121140842*^9, 
   3.6517012839571333`*^9}, {3.6517025089307404`*^9, 3.651702550157547*^9}, {
   3.6518694078393993`*^9, 3.651869520110353*^9}, {3.6518775469170113`*^9, 
   3.6518775472199917`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"c2", "[", "x", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.0017022225000000006`"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"0.1`", " ", "x"}], "]"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.020000000000000004`", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"0.1`", " ", "x"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", "-", 
         RowBox[{"0.1`", " ", 
          RowBox[{"Tan", "[", 
           RowBox[{"0.1`", " ", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.04000000000000001`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"0.1`", " ", "x"}], "]"}]}], "-", 
      RowBox[{"0.1`", " ", 
       RowBox[{"Tan", "[", 
        RowBox[{"0.1`", " ", "x"}], "]"}]}]}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["c2", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "-", 
   RowBox[{
    SuperscriptBox["c2", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",\

 CellChangeTimes->{
  3.6517004986181393`*^9, 3.651700579099596*^9, 3.65170128475031*^9, 
   3.651701365989749*^9, 3.651701685671187*^9, 3.651702551823393*^9, 
   3.651702687170761*^9, 3.651704028699114*^9, 3.6517040708039513`*^9, {
   3.6517041210754013`*^9, 3.6517041504681873`*^9}, 3.65186952516605*^9, 
   3.6518724103631897`*^9, 3.651873646289076*^9, 3.651874082718601*^9, {
   3.651875686407476*^9, 3.651875738286602*^9}, {3.651875794200485*^9, 
   3.651875829919408*^9}, 3.651875860911674*^9, 3.6518758993398933`*^9, 
   3.651875950838894*^9, 3.651877411076644*^9, {3.651877453425907*^9, 
   3.651877472531958*^9}, 3.651877556494706*^9, 3.6518776439698*^9, 
   3.651878093254807*^9, 3.651878133324802*^9, 3.6518781660189543`*^9, 
   3.6518790646713676`*^9, 3.651879111903243*^9, 3.6518796307077217`*^9, 
   3.65187976089686*^9, 3.651879795917542*^9, 3.651943836271659*^9, 
   3.651952031836463*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"endpoint", "=", "800"}]], "Input",
 CellChangeTimes->{{3.6518695760317574`*^9, 3.6518695788747177`*^9}, {
  3.651875827171212*^9, 3.651875858324161*^9}, {3.651877451291027*^9, 
  3.651877470475954*^9}, {3.651877639847381*^9, 3.651877641767376*^9}, {
  3.651879794024835*^9, 3.6518797942544737`*^9}, {3.651943843683173*^9, 
  3.651943867341344*^9}}],

Cell[BoxData["800"], "Output",
 CellChangeTimes->{
  3.651869579713935*^9, 3.651872410398405*^9, 3.651873646308717*^9, 
   3.651874082746769*^9, 3.651874680234725*^9, {3.65187568645341*^9, 
   3.651875738318201*^9}, {3.65187579422289*^9, 3.6518758609544277`*^9}, 
   3.6518758993828287`*^9, 3.651875950876503*^9, 3.6518774110963383`*^9, {
   3.651877453458487*^9, 3.6518774725756807`*^9}, 3.651877556541849*^9, 
   3.651877644012405*^9, 3.6518780932878733`*^9, 3.651878133355959*^9, 
   3.651878166054595*^9, 3.651879064704039*^9, 3.6518791119301577`*^9, 
   3.651879630732174*^9, 3.651879760946612*^9, 3.6518797959402*^9, 
   3.651943836290016*^9, 3.651952031852618*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solc2", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqnc2", ",", 
      RowBox[{
       RowBox[{"c2", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"c2", "'"}], "[", "0", "]"}], "==", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "I"}], "2"], "alpha", " ", "sin2thetav"}]}]}], "}"}], 
    ",", "c2", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.651701669875955*^9, 3.651701761872656*^9}, {
   3.651702600870099*^9, 3.6517026258842783`*^9}, 3.651702662241055*^9, 
   3.6517027002840767`*^9, {3.651702730723078*^9, 3.651702731831419*^9}, {
   3.651869538040636*^9, 3.6518695739712343`*^9}, {3.651869691448113*^9, 
   3.6518696941906357`*^9}, {3.651874559998556*^9, 3.651874560188902*^9}, {
   3.651877554292036*^9, 3.651877554715434*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndsz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"At \[NoBreak]\\!\\(x\\)\[NoBreak] == \
\[NoBreak]\\!\\(78.5398163397396`\\)\[NoBreak], step size is effectively \
zero; singularity or stiff system suspected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/ndsz\\\", ButtonNote -> \
\\\"NDSolve::ndsz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.651952032744779*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c2", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "78.5398163397396`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "78.5398163397396`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{0., 78.5398}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.65170263028594*^9, {3.651702663334077*^9, 3.651702701696961*^9}, {
   3.651702732325796*^9, 3.651702753510108*^9}, 3.6517040307715178`*^9, 
   3.651704071518235*^9, 3.65170412488864*^9, {3.651869528624008*^9, 
   3.651869580574628*^9}, 3.651869695623107*^9, 3.651872410512622*^9, 
   3.651873646360627*^9, 3.651874082863398*^9, 3.6518745656753883`*^9, 
   3.6518746818823357`*^9, {3.651875686515353*^9, 3.6518757383479853`*^9}, {
   3.651875794274317*^9, 3.651875830046245*^9}, 3.651875861090208*^9, 
   3.651875899466221*^9, 3.6518759510118437`*^9, 3.651877411672914*^9, {
   3.651877453569786*^9, 3.6518774726593924`*^9}, 3.651877556638283*^9, 
   3.6518776440735083`*^9, 3.651878093377468*^9, 3.651878133434751*^9, 
   3.651878166156494*^9, 3.6518790647733*^9, 3.651879111996625*^9, 
   3.651879630788824*^9, 3.651879761009163*^9, 3.651879795998477*^9, 
   3.6519438364796257`*^9, 3.651952033310501*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2Fun", "=", 
  RowBox[{"First", "[", 
   RowBox[{"c2", "/.", "solc2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6518745235383463`*^9, 3.651874563156568*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "78.5398163397396`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "78.5398163397396`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0., 78.5398}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.651874539169526*^9, 3.651874567564707*^9}, 
   3.6518746828545227`*^9, 3.651874951915275*^9, {3.651875686554903*^9, 
   3.65187573838456*^9}, {3.651875794314642*^9, 3.651875830097127*^9}, 
   3.651875861140029*^9, 3.6518758995029087`*^9, 3.651875951044609*^9, 
   3.651877411710281*^9, {3.65187745361237*^9, 3.651877472693272*^9}, 
   3.651877556671228*^9, 3.651877644114944*^9, 3.651878093413458*^9, 
   3.651878133465145*^9, 3.651878166194397*^9, 3.6518790648122807`*^9, 
   3.651879112057189*^9, 3.651879630819965*^9, 3.651879761062358*^9, 
   3.651879796042055*^9, 3.6519438365224323`*^9, 3.651952033427497*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eqnc1", "=", 
  RowBox[{
   RowBox[{"I", " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"c1", "[", "x", "]"}], ",", "x"}], "]"}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"alpha", " ", "cos2thetav", " ", 
     RowBox[{"c1", "[", "x", "]"}], 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"beta", " ", "x"}], "]"}], "/", "2"}]}], "+", 
    RowBox[{"alpha", " ", "sin2thetav", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"beta", " ", "x"}], "]"}], 
     RowBox[{"c2Fun", "[", "x", "]"}], 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "alpha", " ", "x"}], "]"}], "/", 
      "2"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"solc1", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqnc1", ",", 
      RowBox[{
       RowBox[{"c1", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", "c1", 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.65187455407309*^9, 3.651874672695148*^9}, {
  3.651874713578895*^9, 3.651874732697112*^9}, {3.651874789896447*^9, 
  3.651874812548943*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox["c1", "\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"0.020000000000000004`", " ", 
    RowBox[{"c1", "[", "x", "]"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
   RowBox[{"0.04585`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.1`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "x"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"0.1`", " ", "x"}], "]"}], " ", 
    RowBox[{
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "78.5398163397396`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "78.5398163397396`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 78.5398}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "[", "x", "]"}]}]}]}]], "Output",
 CellChangeTimes->{
  3.651874676962138*^9, {3.651874714748561*^9, 3.65187473378752*^9}, {
   3.651874792130228*^9, 3.6518748132298594`*^9}, 3.651874953024456*^9, {
   3.651875686602487*^9, 3.651875738430442*^9}, {3.6518757943532753`*^9, 
   3.651875830146429*^9}, 3.6518758611838493`*^9, 3.651875899547361*^9, 
   3.65187595108325*^9, 3.651877411750084*^9, {3.651877453650972*^9, 
   3.65187747273974*^9}, 3.651877556722322*^9, 3.651877644156848*^9, 
   3.6518780934641857`*^9, 3.65187813350167*^9, 3.651878166238266*^9, 
   3.65187906485979*^9, 3.651879112108721*^9, 3.6518796308731117`*^9, 
   3.651879761127857*^9, 3.65187979609529*^9, 3.6519438365593567`*^9, 
   3.651952033463504*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({78.70778500375316`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.651952033613817*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({78.70778500375316`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.651952033635532*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\({78.70778500375316`}\\)\
\[NoBreak] lies outside the range of data in the interpolating function. \
Extrapolation will be used. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.651952033669186*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(InterpolatingFunction :: dmval\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6519520337500763`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c1", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "800.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "800.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 800.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.651874676962138*^9, {3.651874714748561*^9, 3.65187473378752*^9}, {
   3.651874792130228*^9, 3.6518748132298594`*^9}, 3.651874953024456*^9, {
   3.651875686602487*^9, 3.651875738430442*^9}, {3.6518757943532753`*^9, 
   3.651875830146429*^9}, 3.6518758611838493`*^9, 3.651875899547361*^9, 
   3.65187595108325*^9, 3.651877411750084*^9, {3.651877453650972*^9, 
   3.65187747273974*^9}, 3.651877556722322*^9, 3.651877644156848*^9, 
   3.6518780934641857`*^9, 3.65187813350167*^9, 3.651878166238266*^9, 
   3.65187906485979*^9, 3.651879112108721*^9, 3.6518796308731117`*^9, 
   3.651879761127857*^9, 3.65187979609529*^9, 3.6519438365593567`*^9, 
   3.651952033820734*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rwaNorm", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
       RowBox[{"Abs", "[", 
        RowBox[{"c2Fun", "[", "x", "]"}], "]"}]}], "/.", 
      RowBox[{"solc1", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.65187481743604*^9, 3.651874887380866*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
ade5sm99O4Cl8g/MfndiwcT1Q7xIwB43S58NX3VmQcraply6iT025eIL0HMn
+jda1R50wx7PkKwH9nkS++dymk/jkz2+N3nyiJ83Cw5l/KdWxeOA13dzokx/
Ftz5vbe2eY8Dnrn7n/l/oSzQshBtmGp2wKbnztz4E86C3++YDyp+O2BmpAzn
2HHC/j6s+JTEQSxusr2+PZqI35bUr+l1EBu+j7ItTCS479HzSTZHTJr66YzO
soCL3L86fgzhunZytfV5Yn4VuVnCVxHmqeCVNbvAAn+L3e4vmhDOStr0Tf0S
0Z/hkqcZ2hhXC/v6r2azYFZZrbB6AeMV/Z7jd4tYsEvp+v6VdCdsKXWs4/pD
FoR0uB7irXfCZ/4ubM14xIIp+n/XPy46YbnXEouUMhaM7AllxrgfxmaHDlJw
DQsWRRWph5Wc8cnt/d9snrGAz+6P0oiDM26WC7cwryPiPwuWakpyxp4jZ7g2
vyb2JYYs4N7rjKmxjSn/3rGAXsxZT0p2wY1uhydmP7Cgy73a1b/EBQvDiN2P
FhaUcxrusfvsgm/wcIl87CDuS6wW2+RGV/xjIj2y6SMLdrCLxqfvc8X6bUqd
z7tZ4DFHVRQKc8Uvs8wz7/WyYJmsshBd4or5KM2LuV9ZMHCq4+6hNlfs6OPu
eukbC5Ifmk3M/XLFQ5vj5ahDLKjU1/L21nDDWkJ8SdHDLFjI62pVs3TDUTNX
+oNGWaA4MJeW6+6GuWqe3Dr0kwWCj79l3z7jhlXt8myiJ1nQcqFz/69bbtiy
7/SvjF8sSL18Zf2jKjfsF37iUtlvYh/3JP/98cENM9jcTTpnWBARlj11q98N
37xgNTAzR7w/xzkX+n674ZfKW06JLbJAvTnobR77ETz4eIO2wTILnFc39PwW
OoI59nB2OK6wwD7woPIX2SNYuWuCFLnKAiGx7tFj6kfwrsAu+XS2kyBqMll/
R/8I9ll8/rqE4ySkZe3XuGZyBNNO3w1q4zoJS5U8l5x3/6+hMg+nqu3COBk6
SBGZKklkTGSKvCySpExZUhySchxDhnCIiiP23kojoUIqosIXyquS5DUkRUmS
ZKxIhkQUnfr2n7/rep713Ote696bibkKqRKTwgSYyU3/HdvGxJrbRyokRAig
bn0eC3RkYp8Zi6krRoBe0aOYQRcm8rU4LnASJ6AcJgpYbkxU2mtSGLKEAAv/
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6518748947476797`*^9, {3.65187494299632*^9, 3.651874954295637*^9}, {
   3.651875686701466*^9, 3.651875738518586*^9}, {3.651875794458473*^9, 
   3.651875830261917*^9}, 3.6518758613425426`*^9, 3.651875899678465*^9, 
   3.651875951263278*^9, {3.6518774302349977`*^9, 3.651877473022575*^9}, 
   3.651877556977426*^9, 3.651877644269465*^9, 3.651878093755621*^9, 
   3.65187813375266*^9, 3.651878176099519*^9, 3.651879065016255*^9, 
   3.651879112267756*^9, 3.651879630992545*^9, 3.651879761249596*^9, 
   3.651879796213106*^9, 3.651943836654961*^9, 3.651952034843979*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rwaP", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"c2Fun", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
          RowBox[{"Abs", "[", 
           RowBox[{"c2Fun", "[", "x", "]"}], "]"}]}], "/.", 
         RowBox[{"solc1", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
      RowBox[{"solc1", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.651877392965817*^9, 3.651877393720688*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
kyzPzhKOiM5MVi1b/OhPku3lzCVJRwwkZsxs0cFL13TG9iKZuPSg7YO7LTi/
nZz3scwnni1GNl0RtjAOcfh781kB6el5MlqZZIvnB5zny0oLie4Ps5TTp2yR
h+y1R+2FpG7thcCBEltY6CudNeUqJKKC1te9G2xhzmmXuXgtn2Sr9O8x7rLF
k717bTILL5JVY/tPyq9s4fa09pMoey6J9HmzT2DYFgNt/WObpc+uzyNn9rVZ
W1S8adl+hjeHWJ75UPad3g7f7HNDlLkyyZ0qd+0efjsYDTuKtXukk63dn17d
2GIH3REmT86mJFI04B12ScMO+9uusXhQ9hOO2a80R0zssFGaaea7LIUksQXk
h7vaQa/4nNnl5iAyIfVD1T7MDkdekjHxPF/iqRPyROuQHWREft/dvdOb9Dj8
9pY8aYfcDF/GWgkvohsZscBSZIcu4U6bP7pepC7jz6npOjucKuUeCqt9pyda
HL3lw1073O/8XvHc7rhe9s2ZO5196/9ndfhPyddbb7V3n2PlkB3evM9Om/+g
rxc5Oj+eM22HUB2BqCVdJb1PVAlH4mntsflm8e0nGkJ6lhv/CXtvsEe14LOb
hfVsendUk5qNpO0Rf3TU/dJRKr2tplTmyur2+Ig/4vT+syjyTf3Gb2QP+Yx/
5qczfuHi/NHaj472YGKv7BHc9xVns07GlQXao/Ydt8nj5A/IFj+rF7Z/fb/c
Js+B469wrOUiq1qGPXSKvxiciX6BVLOi/xbO22O+dDTRsvQhEr9cKb571R7T
t1LjV5o6Eb+vMiTjhj1GzrtZ/xHqQAzL9W0WD+wxS7t3mq64BeHFzSu8/9kj
7lHnhEhkI4K233r0Ydge/A4Plf9zq4Pvk7unL8/aw9jUf64OlXD3fOAWTOeA
m0KBnXNqV+E481RaeYMD9NQjytumLsPmWN+fOUkHuEz+ipQtLIK5yJu2jm0O
oGSssBiZ5WNP40BamoED5uTFavU7cgGjIQtTOwcEdM8Mijw6C63B7wLcfg44
eXw+7YLFaahHjw29jXHASNTnSiVKNlQYpquLUh3gHth+nns0E/IF8/sCzjhg
XJb3wrGRo5BWWSGKpQ7Ydfn0+1LrIxB7QMMy07COF9+d1BJMwyZXptdtnQ7w
DXu0/F7hMDb8YS9KeemA01kDOTlUyeBM5w02GnJAcR330B++Q2DZuFGNY8oB
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
k6PR4s+kuqMh3/kxIpF5ntQpXEv0fhSN3zRTN+db/pI3I1tVCp9FQ1BcNPpZ
8F8i46p9nvd19Lr+MfMzfj9HLDd0G1m9i0a1ckrI6wtzZH+PyVLmYDS0m3SM
U1znSNGxvpqHX9bz+9WPSkd8jjzUd/KiGVnPb/r3F/O/Z8nEv4/cuj+jYXvQ
ovXSrVnCf9P//oHx9f3fPmuLnJwlutG/99+YisY237LwQL9ZEqAQIzc1F40G
bT6GMJ1ZkjWyMKC4FI3usoUSEaFZ0lycnB28Go3MP2ZHw//NkEEXBr0ymhjk
sC4F7BmaIXQbTs58ZohBh3JHdOGTGaLYw1suxBqDzKArXr43Zoj9sXxnJ871
dX2KV3bZDDmkL856ljcGfx0tvgpcmCFl/ypu9wjEYCF3Wnkqa4Y8b9lKYRGO
ga30YCVbxgyZpdyQ2CMWg537ec56pc4QYQXt/w5LrdtPyC0PHZ4hBiNdR2/L
xqDFsLA2O32GhBabaC4qrtt7L73xyZwhZ1z6xrarxkCP+XymzdkZcovXqZiy
IwZ7T5lI2RXPkK8vPtrU7IrBm7LndzzrZgjLMX+6UZ0YzLy3EIq6N0PU9H+3
SOrHwChmQ9bh/2aI67/oEK89Mbh+ZLzg3PgMSW1ZECowjUHjoM7jYqZZUkVJ
7nljGYNxTUrhRZlZ0i/PcPh/FF13PNXvFyeUjIxQSSQZIYqSUp2jkKQSDSSy
S/a817xDJUqSpllK5dsie2Vk72tnZO9NQuT3+f15Xue5z/M+77Pen78uv4Er
ss3oFXuemgfx2M2D9666Ik3V6Uflo3mwV1Wz9jNzRZnNb66aZ8xDWr1Fv7Ol
KybSacU2PfOgw5rce+WWK47vUHZ6eOQ3RES3mZ9xciV0cce9SLvf8EuFuee4
mysGxq7NDEf9Bveber8kfVwxPe37523sC5C3jmS6LcAVudSLfFpxATZGxXZy
0V3xyqGYs+E+CxBTM9k+F+yKF0mefU8WFqBM+UFrwUtXDOLEpcq1P8BfnXIl
NcYVT2xKXlDXJPahTUfz+9euqJrARnpN7LvZ53JNDxNdcUiD/d9V4SUQ+Vde
fy3LFZd73LIOHl4Gm2czehfyXJH+hvfb+4BlSNq3rU6j0BVDIr4WsBYvg5bl
jRq5ClfsP8I8te/MXwhbeXhWrMYVRR7Hil8J+Qs/n6RX8TNc8Y7J/vWC5X/B
qWx95VKbK7LyHRP+Q/R7lrmCzkSnK67N/3W76bwCrH8vlXf3uKKP3zpZvlcr
cC7CT7txwBWPeZr4RFevwPO9b0tLR1xxYPLc24LfK9BbUqWVPeGKdTk3G5W3
rcLe6/PFn2dc0foPT+unQ6tAWtqu+fq3K1pdD26Y0FuFwvCTP54suaLmrVD+
dKtV4JK/dfLeqiuaohZbu+sqXCkOL/RldsPzdxQsD/uswmvTLHVnNjcsukXL
y/BbhfE/PfmWG93Q4UxtqJb3Kqg82ohXuN0ww59h0uK8ClTZ/d91+NxwUSqy
wcZ8FaqKDI8fF3TDLWsLRStnVkHoGiV3/zY3XHdj85b0fatwfeHdUckdbmiU
IGCTw7MK/z2szd4q7obXGbRU1ZEVWJD5c4RL0g2jt58eNsldASwUzVqTcUOT
god7TO+vQPBVrcNz8m74oryH7Hl5BZrmHTIG97mhrI1C7/T2FbCTzk2rVnVD
TmEFWYuXfyElv/9gwVE3ZPlpfZPl4l9YM+JKTUE3nLg0sGzE8Rci7l/9Fqnt
hu29MVecHQm9OrP05aahG7IpbDCTEF2CtP7m9CQTN4ycn/j66PsifG359n3p
uhs69fZMH7q+CK9zHWrv3XTDlMIO/bdxfyDoXs/kB283THxaPJgotQBU37yF
GX834ruj4fu3it/g7RT57zDdDes/VLkoOP8Gh0uXNlWEuOHDG09zJPPnQV+8
fO9olBtSlGeUHnjNga5AwkGlV26oEXkktFV2DjQ30I95v3VDl+RtVa7ds6A6
cfQsx2c3vGDcPJGlPwv7u7dd0k92Q+kLV6K9eGZBtmHB5GWaG3Zc/RAdWzMD
OzK/2st+d8PRw3fsDl2cAaGPD9xdi9xQ3I2k9k54Bnhj7XyzSonf+13YSe+b
hnW3d9/XqSO+vGdvPXXynYYVL+aI8EY3fLR2Zo+H7jT8tuuK/NnqhnePx35r
EJ2GYb3n/9n1uGH3BqF/gk+moPekx7fkATecvtxxJPnUFLSr6Gcvj7jh6i1T
lfp/k9C4R7HoxKQbmtnQoq2yJqFGhKsyeNYNRz4e3W7uPQmlPCMMxoIbngx+
dDzv+CTkryv5KfzXDeWrxJM9NkxC1u/XvRZrBD4542/kxgn4Nhwwmsjijvdz
nMiZbyfgY7vJ7OwGdxxKOHZFxmcCEmoOLx/hcsdk5/DXuRcnILZAaB2d1x1L
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
qL8ewofMB7u7BgYIXzePcE/V4cP/AP7jFgA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.65187740159571*^9, 3.6518774731633883`*^9}, 
   3.6518775571206913`*^9, 3.6518776443723497`*^9, 3.651878093995969*^9, 
   3.6518781338954773`*^9, 3.65187817634792*^9, 3.6518790651322117`*^9, 
   3.651879112372238*^9, 3.651879631101261*^9, 3.6518797613538427`*^9, 
   3.65187979631526*^9, 3.651943836740478*^9, 3.6519520355472918`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"c2Fun", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
           RowBox[{"Abs", "[", 
            RowBox[{"c2Fun", "[", "x", "]"}], "]"}]}], "/.", 
          RowBox[{"solc1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
       RowBox[{"solc1", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"end", ",", "10", ",", "endpoint"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.651702739248687*^9, 3.651702766798761*^9}, {
  3.651702821198991*^9, 3.651702832949019*^9}, {3.651869566410227*^9, 
  3.651869569483645*^9}, {3.6518724344820547`*^9, 3.6518724363446493`*^9}, {
  3.651873139305637*^9, 3.651873139408257*^9}, {3.65187321129524*^9, 
  3.651873217909874*^9}, {3.65187325205184*^9, 3.651873252453226*^9}, {
  3.65187333278516*^9, 3.651873337869626*^9}, {3.651874890934033*^9, 
  3.651874937723721*^9}, {3.6518749726677237`*^9, 3.651874988057897*^9}, {
  3.651875038196115*^9, 3.651875039072668*^9}, {3.651875086174958*^9, 
  3.651875126608345*^9}, {3.6518773964886417`*^9, 3.651877397198079*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`end$$ = 10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`end$$], 10, 800}}, Typeset`size$$ = {
    576., {175., 180.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`end$1307$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`end$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`end$$, $CellContext`end$1307$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Evaluate[
         ReplaceAll[Abs[
             $CellContext`c2Fun[$CellContext`x]]^2/ReplaceAll[Abs[
              $CellContext`c1[$CellContext`x]]^2 + Abs[
             $CellContext`c2Fun[$CellContext`x]], 
           Part[$CellContext`solc1, 1]], 
          Part[$CellContext`solc1, 1]]], {$CellContext`x, 
         0, $CellContext`end$$}, PlotRange -> All, 
        ImageSize -> $CellContext`imgsize, Frame -> True], 
      "Specifications" :> {{$CellContext`end$$, 10, 800}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{621., {219., 224.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.651872436922068*^9, 3.651873139954661*^9, {3.651873212045541*^9, 
   3.65187321867515*^9}, 3.6518732528997793`*^9, 3.651873338626985*^9, 
   3.65187364641772*^9, 3.651874082942054*^9, {3.651874892137229*^9, 
   3.651874955873765*^9}, {3.651875028749198*^9, 3.651875039802292*^9}, {
   3.651875120445629*^9, 3.651875127321227*^9}, {3.6518756868055897`*^9, 
   3.651875738615409*^9}, {3.6518757945589647`*^9, 3.651875830372652*^9}, 
   3.6518758614523277`*^9, 3.651875899792644*^9, 3.651875951381056*^9, 
   3.651877341525351*^9, 3.6518773987294703`*^9, {3.6518774306028633`*^9, 
   3.651877473201518*^9}, 3.651877557172062*^9, 3.6518776444230633`*^9, 
   3.6518780941588373`*^9, 3.651878133936737*^9, 3.651878176456047*^9, 
   3.651879065183885*^9, 3.651879112424493*^9, 3.6518796311576223`*^9, 
   3.651879761432231*^9, 3.651879796362084*^9, 3.65194383979583*^9, 
   3.651952039203764*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equation Set", "Subsection",
 CellChangeTimes->{{3.6517035906758633`*^9, 3.6517035927465982`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnset", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"I", " ", 
     RowBox[{
      RowBox[{"c1", "'"}], "[", "x", "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"alpha", " ", "cos2thetav", " ", 
      RowBox[{"c1", "[", "x", "]"}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"beta", " ", "x"}], "]"}], "/", "2"}]}], "+", 
     RowBox[{"alpha", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"beta", " ", "x"}], "]"}], " ", "sin2thetav", " ", 
      RowBox[{"c2", "[", "x", "]"}], 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], " ", "x"}], "]"}], "/", "2"}]}]}]}], "&&", 
   RowBox[{
    RowBox[{"I", " ", 
     RowBox[{
      RowBox[{"c2", "'"}], "[", "x", "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"alpha", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"beta", " ", "x"}], "]"}], " ", "cos2thetav", " ", 
      RowBox[{
       RowBox[{"c2", "[", "x", "]"}], "/", "2"}]}], "+", 
     RowBox[{"alpha", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"beta", " ", "x"}], "]"}], " ", "sin2thetav", " ", 
      RowBox[{"c1", "[", "x", "]"}], " ", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"I", " ", "x"}], "]"}], "/", "2"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.65170363315174*^9, 3.651703765992786*^9}, {
  3.651873035258184*^9, 3.651873120609249*^9}, {3.651879105790434*^9, 
  3.651879109733287*^9}, {3.6518796217451563`*^9, 3.6518796253382483`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{
     SuperscriptBox["c1", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"0.020000000000000004`", " ", 
     RowBox[{"c1", "[", "x", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
    RowBox[{"0.04585`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], " ", 
     RowBox[{"c2", "[", "x", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"0.1`", " ", "x"}], "]"}]}]}]}], "&&", 
  RowBox[{
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{
     SuperscriptBox["c2", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"0.04585`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
     RowBox[{"c1", "[", "x", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
    RowBox[{"0.020000000000000004`", " ", 
     RowBox[{"c2", "[", "x", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"0.1`", " ", "x"}], "]"}]}]}]}]}]], "Output",
 CellChangeTimes->{{3.651703768151081*^9, 3.6517037909267607`*^9}, 
   3.651704037688219*^9, 3.651704078403369*^9, 3.65170413036025*^9, 
   3.651872410642411*^9, 3.651873122751027*^9, 3.651873646453508*^9, 
   3.65187408296667*^9, {3.6518756869472*^9, 3.6518757386637087`*^9}, {
   3.651875794607869*^9, 3.651875830424108*^9}, 3.65187586151195*^9, 
   3.651875899848645*^9, 3.65187595144556*^9, {3.651877430705411*^9, 
   3.651877473585339*^9}, 3.651877557536839*^9, 3.651877644524107*^9, 
   3.651878094196519*^9, 3.651878134336648*^9, 3.651878176488163*^9, 
   3.651879065299932*^9, 3.651879112844717*^9, {3.651879628508103*^9, 
   3.6518796312662163`*^9}, 3.6518797615456123`*^9, 3.651879796463687*^9, 
   3.65194384000736*^9, 3.651952039375558*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solset", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqnset", ",", 
      RowBox[{
       RowBox[{"c1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"c2", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c1", ",", "c2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "30"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.651703629593935*^9, 3.65170363166296*^9}, {
  3.651703796254949*^9, 3.651703819061659*^9}, {3.65170387601972*^9, 
  3.6517038887308483`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 30.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"c2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 30.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6517038206240063`*^9, {3.651703877374525*^9, 3.651703910198105*^9}, 
   3.651704038852901*^9, 3.6517040799510612`*^9, 3.65170413232728*^9, 
   3.651872410927121*^9, 3.651873123940754*^9, 3.651873646485496*^9, 
   3.6518740830055428`*^9, {3.651875686985478*^9, 3.6518757387004423`*^9}, {
   3.6518757946447144`*^9, 3.651875830461692*^9}, 3.651875861557068*^9, 
   3.651875899898264*^9, 3.651875951506109*^9, {3.651877430743676*^9, 
   3.651877473624024*^9}, 3.6518775575882587`*^9, 3.651877644561743*^9, 
   3.651878094244623*^9, 3.651878134382894*^9, 3.651878176529031*^9, 
   3.651879065355063*^9, 3.651879112919438*^9, 3.651879631315322*^9, 
   3.651879761927948*^9, 3.6518797965105743`*^9, 3.651943840046788*^9, 
   3.651952039413774*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], ")"}]}], "/.", 
     "solset"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"c2", "[", "x", "]"}], "]"}], 
      RowBox[{
       RowBox[{"c2", "[", "x", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], ")"}]}]}], "/.",
      "solset"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.651703894650567*^9, 3.651703931609708*^9}, {
  3.651873159088519*^9, 3.651873169941535*^9}, {3.6518732058012037`*^9, 
  3.651873290718913*^9}, {3.6518733725058603`*^9, 3.651873391469708*^9}, {
  3.651873429936116*^9, 3.651873454636804*^9}, {3.6518736559480886`*^9, 
  3.651873674359665*^9}, {3.651873763106662*^9, 3.651873799623887*^9}, {
  3.651952325491251*^9, 3.6519523766707487`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
7IrKkMXNzXT49WW4Phb7f1eeBfk=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.651703918311019*^9, 3.651703932053656*^9}, 
   3.6517040396627007`*^9, 3.651704081161512*^9, 3.6517041335854807`*^9, 
   3.651872411358364*^9, 3.651873125869475*^9, {3.651873163832232*^9, 
   3.651873170330842*^9}, {3.6518732068255997`*^9, 3.6518732910820837`*^9}, {
   3.651873373077692*^9, 3.651873392214916*^9}, {3.651873430921401*^9, 
   3.651873455421863*^9}, {3.6518736465389757`*^9, 3.6518736622854023`*^9}, {
   3.651873769983837*^9, 3.651873800183313*^9}, 3.6518740831189613`*^9, {
   3.6518756871284723`*^9, 3.651875738830983*^9}, {3.651875794790938*^9, 
   3.651875830717083*^9}, 3.651875862036388*^9, 3.651875900085121*^9, 
   3.651875952103133*^9, {3.651877430868178*^9, 3.651877473776907*^9}, 
   3.651877557949098*^9, 3.6518776447054567`*^9, 3.6518780943836317`*^9, 
   3.651878134519122*^9, 3.651878176664443*^9, 3.6518790659290524`*^9, 
   3.651879113379498*^9, 3.651879631451777*^9, 3.651879762112755*^9, 
   3.651879796671688*^9, 3.65194384020564*^9, 3.6519520395135527`*^9, 
   3.651952334100614*^9, {3.651952370791698*^9, 3.651952378877421*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
A6hUJxc=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.651703918311019*^9, 3.651703932053656*^9}, 
   3.6517040396627007`*^9, 3.651704081161512*^9, 3.6517041335854807`*^9, 
   3.651872411358364*^9, 3.651873125869475*^9, {3.651873163832232*^9, 
   3.651873170330842*^9}, {3.6518732068255997`*^9, 3.6518732910820837`*^9}, {
   3.651873373077692*^9, 3.651873392214916*^9}, {3.651873430921401*^9, 
   3.651873455421863*^9}, {3.6518736465389757`*^9, 3.6518736622854023`*^9}, {
   3.651873769983837*^9, 3.651873800183313*^9}, 3.6518740831189613`*^9, {
   3.6518756871284723`*^9, 3.651875738830983*^9}, {3.651875794790938*^9, 
   3.651875830717083*^9}, 3.651875862036388*^9, 3.651875900085121*^9, 
   3.651875952103133*^9, {3.651877430868178*^9, 3.651877473776907*^9}, 
   3.651877557949098*^9, 3.6518776447054567`*^9, 3.6518780943836317`*^9, 
   3.651878134519122*^9, 3.651878176664443*^9, 3.6518790659290524`*^9, 
   3.651879113379498*^9, 3.651879631451777*^9, 3.651879762112755*^9, 
   3.651879796671688*^9, 3.65194384020564*^9, 3.6519520395135527`*^9, 
   3.651952334100614*^9, {3.651952370791698*^9, 3.651952379013307*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], ")"}]}], "/.",
        "solset"}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Conjugate", "[", 
         RowBox[{"c2", "[", "x", "]"}], "]"}], 
        RowBox[{
         RowBox[{"c2", "[", "x", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], ")"}]}]}], "/.",
        "solset"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Transition Probabilities for \!\(\*SubscriptBox[\(\[Lambda]\), \
\(0\)]\)/\[Omega]=\!\(\*SubscriptBox[\(\[Omega]\), \
\(\[Lambda]\)]\)/\[Omega]=0.1\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Omega] x\>\"", ",", 
      "\"\<Transition Probabilities |\!\(\*SubscriptBox[\(C\), \
\(1\)]\)\!\(\*SuperscriptBox[\(|\), \(2\)]\) and |\!\(\*SubscriptBox[\(C\), \
\(2\)]\)\!\(\*SuperscriptBox[\(|\), \(2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)\>\"", ",", 
        "\"\<|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.651952385858366*^9, 3.651952462194359*^9}, {
  3.6519525405008707`*^9, 3.651952603196455*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
7IrKkMXNzXT49WW4Phb7f1eeBfk=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
A6hUJxc=
       "]]}}, InsetBox[
     TemplateBox[{
      "\"|\\!\\(\\*SubscriptBox[\\(C\\), \
\\(1\\)]\\)\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\"",
       "\"|\\!\\(\\*SubscriptBox[\\(C\\), \\(2\\)]\\)\\!\\(\\*SuperscriptBox[\
\\(|\\), \\(2\\)]\\)\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
      "\"Transition Probabilities |\\!\\(\\*SubscriptBox[\\(C\\), \\(1\\)]\\)\
\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\) and \
|\\!\\(\\*SubscriptBox[\\(C\\), \\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\(|\\), \
\\(2\\)]\\)\"", TraditionalForm], None}, {
      FormBox["\"\[Omega] x\"", TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{70, 20}, {50, 10}},
   ImageSize->{1143.53515625, Automatic},
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox[
    "\"Transition Probabilities for \\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \
\\(0\\)]\\)/\[Omega]=\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \
\\(\[Lambda]\\)]\\)/\[Omega]=0.1\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
7IrKkMXNzXT49WW4Phb7f1eeBfk=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwd1nc8Vf8fB3Aku+xRJHtl7/152zKy97WTXVaIsgtfGamozERlhEKhUmY7
MiMZJaG49sr4nfP76z6ej3Mf9/M6n3s+79fh9Thn6UVGQkLyhJSEBP/ky9y9
V8i9pHlU7YeB7jNPDYPgB9SBPt2I4o0fR1scD7KYFM8U8RlHN99nTUlpAton
bzc5lPEbSbrX5dV9sEC2t4kWFD5EtP24t6ktygUNsmVU7hevoD6Tjmt3as8g
MncByZ30DVTCz22V+/Yskqhsrt2M+ofY8o6ZnkwIRfZr5nJr3vto36qFgSM4
ArUVrYxEVpDCtUcX+CaWo9BQhybXRvEBADXTjZWeS+jvbKrz+dyDsGqvy6Y/
HovI6AcKV9IpoVmv2T4lNg5xyPNMBCdRA/UM86xeVhySdPDnXYyiheLZ1LVx
3jikG/PU42zwIcgS/XvKKzIGOdwjLf3rTQ+ShvRpyaPRSOn0/RCFGgbQ71Uq
CL0TidrWja+HVTDCc06m4te/wpBp6lJdXRkTXORjiSBuBKGvnLn9y8XM0P6u
pNzgiB/yrFZfk8lnAQl7t92y5x5oAX6wBueywt0hBcvMOHsU2ZesWJvNBhaJ
wRTfdo3RgTMSdsR0dhDqznWoG1FBGZu9EZKpHMD8UmJzsIMXcaRF3gpMOgKS
37zLE2dY0b1j3E1VsUfh5m7olo+jJJKsbR/+E8UJWkMPry8QtFGTtu+2WDgX
xFhKsCjSWiDdgcOcfsHHoCBNKnCj1RF1e9erlQdww07swODOJw/kuO1AmPE+
DkxUOsx7/j4opCu25boMD/AYrcPNb4GoMbP3lFwND1Tfvu5j7xGMdu0Fx3vF
eUGiUbx+PzAUafNFngup4AWmlokrJSthKOXP+31GET6olLGik5w4jz7VH8t6
XMYHB+naxwgnwhFTTBCPBT8/lAZQ7dQPnUf2Bu21i8X8wHTL2u/dUhgqZGDT
yuIWAJ8F2bj+jFD0c9jni1S+AHzj/mDz9n0wErn33L37iCAYnNe2Jr96Dp0N
OLx8NlcQ9oe1mvP1/FG9gnvCYVYhoL7L8vzrQW+0tVfHVJ0tBMcSNCTiaTyR
5luKe6YMwpBAN6V5nt4VJV1zkJtPFwYxT9PlQ0YO6L1jVftVWhGYOuHr9G7d
GtEL7FuJp4pA1NBhBV1RS2Q9bzH1gUIUytlyGN8MmaM7T0vD/JNE4Z+m4L/L
Y+ZoPHaDnJZMDBq12yMayS2RwEmjmxWxYhAyM5p6+IA18mMqEDTaFQNp2pzH
f/6zRTXfiA2zUSdgp/7lRKepA1ot1dZP3TwBhmm9s3TkBKR69uagSLg4tDQ9
46ILdUGxSjNn3q6IQxsvW+pDZTfUQaK24R0sAVWaOqdLVt0Qzfv0ZEqiBJy1
bBeZDnBHZtcn2B8ESELeXGF+ZIU7ukGQe6g/JwljvG0MLi3uaETwivK0txRY
Vk1rnHzljnYFksbZFqWgU3vlXvxbd8TApNXOry4NvkVZbue23NFdxtds6nHS
ENbSeIEv0APJMiI/6w5p6Ht+Qa5GwRN1MLS8DKCSgVsxNJe4HU4jGwYNxssm
MmA2zjb7uNsLTdO/OF2QJQO+NMHNTxK9USS9WmNDvwz0dadeG7X0RTT0zbSf
OWRBtyD3hDGjP8o7rOI6TZCF6E/rqDI9AIkfbnyyVywL+at+10xyAlHLISUK
9l+yEDV/i+TOXiAyP/TUQUpUDri0hK3OlgaiSTqFRwaBcjDzKHm7OSwAhdDV
k7g9loPxSqtu0nN+iJxOzjpyTQ4e+z4rVX3gjXJonzzIUpEHoZDl0XG900iY
Vubfw0vycNziyxjFFTfUSFN7qrVVHiZPrZdLeDogIxqpkuGDCvCt//7PZiVL
NEpdvbZ0UgFk1XW/lPsbokBqiZM0GQowZtaktkACaI+qKp+vVwHmXJ2TX/2n
jLKoTiyqsilCI83wZTYqdcRHVaFj5agI8qSNkbn39VAdpWiufyFm4Wa0n42d
Z8qHc4k/FMGmz619n9QJDVIIa+YLKcHEL79jWVaeyIfi/rV6PyW4cWmnuXfO
F20dFPz1sVoJRmi4FNjPBqH/DpYq/1pWgohLLvn8X0MR10H+q7uKykByf2/x
71o4qiYvGWeNVgY4OX+77OoFhMh55SRfKUP7fyzqLL7RqOdA8RX9Ayogt8rm
NuN5EXkcOD7iYqACJTWBWnpeF9EqWaFERJoKtHwet5D1jkaXyY7FZ3argMPa
6e8N4RcQG1l+/wNmVcgai8+OrAtHD0k5RV7bqcKn6zMBC6ahSJX0TvTXPFWI
T/3qDVTn0AeSI92L46pQH7DxNk/VGxFIbvFRC6hBvVI7y0K2K1rYZwvn9VGD
6ajYTLksSxS7f/OdSpUatGxJW+3/BcSwz3LMclENMg/VEhfneFDJ3vUgP3l1
2BkeuHGYelhTbo+pIyESsxTtxO5ZQdSxe40974U6gMc04cZ1HWS7y+BfR6IB
ddJky4LkNuj3TmbLB10NqHDXaxfrdUeRO4eZplI0IKCnh0THzg/R7KR77XzU
gDY1hVOhL4NR3j+6JhZGTRhLu9HlbxKOxP+l0UnYaEIv3b2fOzFRqGWbxk3v
tiZkdnkQZOYvIfPt1Drn75oQe4XZKOFIHJrcoqIM50Vwkdr0p3VaHArZSnbM
8EJweu89Cb9bHCLfoqi+X45ASfnJo4ekcShn8zLpq3kEhvtvJ50IcYjlYkLF
Hw6A30INwz5MiWj0n1b/hiqAMW+vnu+j/1BZNOneAWeAgudkt0Ndb6KE1TdX
P18EKCu7OqPqcBe5BWZw3s4HuKEq1Vs1VYk0p60rPF8ARHBJXlitaEBcrpwq
kqMAN6sbr8dxvkbbQ5NvNv9h27d3+8fWcBcaMn9o286pBTl2P6tYlz6j+ndn
f6WracFq/WylAlU/ytZWCLN30gLemL0bTye/oqDn/8j4o7XgU3RXkGvHd2Qq
33Zt/o4WLB3+mfRBdRKJPUrhaWzWApFsnsFPp38iKiGzmoQRLaDMNIs3tfqF
pgtZNU23tSBm6F11Aulv1ME++pH9qDY8cb7cVBM0g0qySpx+qGiDs1zU2b6y
WRRL7TtX5aANzcHlYy0P5hAhQepCxAVtGPkVwfr60h+k+m+NUvu2NkiI3vQa
kPyLOMJe5NA1aYNI+3t+/da/aP1vguDQV20wacnbu6g6j/q9Ttbf3dSG7IZw
RqqiefR4jF4ngEMHKI2o5yqX51GG3eAXRWUdmPz8jzFGeQEF9OS7kdrrwHrN
+S6S0AVkdNKT+CFCB6byeBrVSxeQcJtoTE6uDrzWOp869GkBkast0rk/04FI
7uhWoaUF9KPuad6JIR1IfEXijeiJ6LX4JbH1dR0Iff60ikyUiArLdJpes+lC
8zMuARFERBe5aQzTFHVhaPPtbz1LInLI7Rm0sdUFahN1niEPIlJkyPXiCdcF
YaVZRa1gImJJdV6du6kLH6i4doYuEdEyqUBiQ4MuCF2S35hIIaKeqDnGuAFd
UKmJOJSTTUTVK7XFRmu6EK95p0Q4j4jSAiKkWFn1gJyj41RLCRH5/NJoGZfX
g/lrS+hiORHpu5CbVljrwfXKZbuYGiISGHr/LSxMDzwI91i+1xMRqfk1P3RD
D+ReHDV91EREY2/ttqjr9YBy0OwjSQsRvdDiTunv0wNYJXZPtxLRneYptqIV
PRjlfh0U0ElEkXKVZb7M+qBz5NNm/lsisq0KlpeX04f1wS9iCR+ISE5QuX3P
Uh84JTMvCXwmIobCPYt3IfpwO1LfNK2HiBbYOieuZ+tDKgXXwZe9RPQxM+2c
yxN94K7q1nrVT0QVVJZ7Ir36EJmzupAzSEQp8RzpK0v6MK9+x9XwKxF5bY9x
tjAagMvQCc+hYSLi+euvYmVhAJWsCop5o0S0d1r27bFgA6DmIykb+E5E375v
2s5kGUBhH9rdHCOiRttXv57UGgAJq7Ad5QQR5XRfDrvUYwDly0nXyCaJKMzQ
5IDhogEYPe20/4vZspUpm4nBEDb8SSS6fhDRobqimgdmhnD/3LCG2RQRhbNt
3eo9awh28N13F/PYBcuE3XRDCBRcfVL8i4gMvlf6izwyhGxD6SWVaSKqhYM2
Vh8NIYyyceYdZo5SF82YP4bgkfrD2OI3EcVTNgqX05wEGmaWlz2YLT/7be8Z
noSvvNSHmmeI6LlMx09Rn5PgwfVkQWAW+39vHvtknXwS/DvvTKdiXnPqKaro
PAn/JrZrdOaIyOWVaOrA1Emw8TmtfBtzF19iCAm5EaQ5ROrPYb41q6Bnq20E
6/ys7HF/iIjENFMy3t0IMgbDnTsx+9bOsFfFGYGogLQs5V8iUo3ImyN9ZQTZ
x+yc4jHfG1ntEx8zAstXlxiaMdNpnnppt2sEjFeZ2RYxfycnzXqkZgxN7ta1
1vPY8+njeOGrozFslx5JT8Rc/aHO40CUMbDPLBnVYo7LPqPg0GgMVLKPJg4s
ENHM2ivupCFjmPE7QhTDbOFwhKpm3RjkHDeMzTHz8XwcIVcwgYr/XhjnYE5L
FOyQsjaBZ9/PcTzDvDod88gx1ATUdTySBzF3PpKJq31sAjH53NmMRCKSZEzz
/dZjAu98rU9JYM4Jm7KkWDSB20+65g0w+6jlChIkTYEyRPxQFOaewsXDyaam
cGT/6v1rmFXIjDYfB5iCoNVx24eYad7tvKesNIWvo8f5+zA/svUIqhM+BfH3
NBOPLxIRW/NzhzH9U1DlVjopjTnmGKsO9ZlTUHD3W6EWZvOpN6yupacg2y7G
wh1zowHvfmr7KUj6+MsqCDNvZdRM/Y9T4F/F2x2DeTlY4jkNrxkUjtzUv4PZ
aeBKqQKYwWawk+kDzB3KE+lurmbAo83xow7zzf1st6cFZvAgdujNB8z5+jtk
MofMYW2Bd2sdM51rzB0ObnOgqL3VRLqEzbcIElkSKXNgj7Y6QoeZ8JDcvdvc
HOSygrqOY/74+srmU3dzaA3Q4xTFrD5MlVUYYg7/UZzklsXMRXPoVeAN7PtT
39V0MF/ly7S1KTOHW/wZBGPMO6qMC+pPzUHXqUbJCvOoP+sxuq/mcFyeVMQD
c/6nY9EVnBYgP+yjcAkz3XQRU7a4BURsc55LxPPt8VZc0LCAkIre86l4Pimh
YUNXC2Blf7l0A89n8DBIOsgCyqfC/e7g+dzEqDjiLcDUX/tZEZ7vmqTS7xIL
0BYy6yvH85XXfv5cZwHF41fKqvF8rbJnnnZYQPdmi0Udnm9Z8eblaQtwLAjX
eIG5wBqt8ItZglzEwaSPmA8Htv5Hq2YJ+2xVhj2YYy7r8K0YWwIpS+5iH2aX
pwYWbYGWoO5JtTCCmZvDvMbtsSWYFf579htzhnSvvmGbJXgM1tbMYd4ztB6T
6rOEhsenr80v4fPF/tD+qiVwt2ezrmAu/ObmX6BsBbadYnK7+PqrP8gun7QC
3SXR9H18fTqvOwGOVlA1f2yQdBlbX8P3ndpFK6ib3VCkwMxdFCw88soKbibt
ah3GnPFspaW1xwr04sx5GTDvdZ+3LZ+0gowTp1YYMY+RRF2OPGANUeojQayY
Cz0SfrIZWMNHteBRTsy3NpIffbe1hnZSBe1jmK9fTY8oPWMNne3vCrkxpzy9
RSt7xRo4Ml01eDGH0NTImXZaw/p6GZsQ5oCi+l3mAWtYu+mrIozZW775zciU
NYgXtFmLYCa4dDr5kNsAt9XmeTHM+k++JSbq2MDyWrS3JGYwmDQ1srIBL/l9
KynMaqPT7IyeNvCjPFpVGrM0xXJlYYINJDVsr8lgPupI1d/UagNS1YdPKGBm
IR4qjPtiA6Gq7n9w0ycx+xhM2sDZI2/uK2Imr+be6SexhbHvBvTKmBdIFQQW
kS3IpJtUqGKeyVFdeGpmC4L05/TVMP88AY2XXG2x/boyhvurjbEJbawtTJiv
kWlgbit3DxNqsQUJU6/jCPMLTW/N+U+2UEHSWoD7WV8AVf13Wwgs6OIAzFW7
Eflau7agaXj8oBbmHIuMDoK6HXiRcTRpY86avp7Bb2IHGZFfuXUwp0Xftp9z
soO/KQPxuOPKSv9GRNvBO6UupIvZb6uZ5XqzHQwWSRfoYT6d8XrM4b0dbLQl
L+B25e96yDNiB51/sjX0MVubflGv3rKDyzLb/bg17v4+/U7ZHihmA+YMMK/m
t1n8OGkP4sPM0oaYK24VaP5ztIduzouhuNmyrDgkLtlDcMWbFdwf0yQP6mfY
Q0Bep/RJzAnJ1MsuRfbAItnsj3sh5tWHrFZ7SOlu/Ia7NOpOY3mvPTCPjzAY
YXYMP1/W9hO7nsOvi/tN4InY1YMOQFNvU4a7mJAra2/kAIG8Z6yMMdvahxwP
dnKAfLLZKNx01qZ0/wU4wLvdqWLckcYHpp9nOAD/64AZ3JIGY739RQ7gr0hD
Y4J5Srvp1XytA7CL6IrhtlA9d/t4nwOIJVWfwU2laHRFecoBeJcWEnC3yAiG
Wqw5gO3knwLcYqLfTBLZHeGekkoP7gmBpyr5Io7gx3PrN+4cnmtCDSqOoHmj
Zxc3GYcByW8nR/gBs0KmmBuZ+eb3AxyBunRQBfdZ+t1hjhhH4Jp9ZoxbgPZr
l0ymI+RoXyfg/kZRV2dU7AjGL88G4M4myyj2fOwIYVrm0bgN93zSL7Y5wq3r
Gqm469e4vaunHIGC0rIEt9/SltWbNUeQpUx6hJtnvh8mKJzg842hZ7gHZ2ok
ttidwLPbohX31an/jjKJOsH6s413uLUnvChPqDrBgMznL7g3v8GqjrETOB4Y
+Yq7eohzkkBwgsrB4+O4vfrWP50PdAIX1dIp3FzdX5ozYpxAv8R/Fnfv+6oH
DzKd4JBP1DzulK7kG6+LnWD6Q/8ibs02j/jhx04gsBazgruiicOJtt8JGl70
ruNme/xZXmMdy3/85gbuhIdJh89xEGCbfWoNN7FIdaZYlQBthqNLuO/nsQ40
GROAMYiEiJuQu9jaSyCAAcPtP7iZrn+o/hNIgInT5b9xv824n0ceS4DVHPmf
uDv23zd8yiSALoPtGO7XQcTunGICpB3a/f/9v5hknnN9TAASJ/E+3M8slclF
2whg3TD9EfeTdgL3ci8BaN9Ldv1/v+TjlZ//JEC/EuWr/+djex9getAZPCxC
a3CXJC9cYWNzhvgV2ge4CzaZ7o4LOQPLqGYh7hsjTgPBhs4gNXIxDXdi4bxG
TpoziGrccscdQ89k75rvDF/5tW1xR8Uphog8cobyzlwj3CEesfebPzuDytFT
srjdhBjpxxldgDjMuYc/r5rV8hPCt1zgh0NbCm7V4w7biw9dwKFgPxK3YtYl
luYmF1BsOeCLWyKky9Dkmwt8VDhjiJtL0f5xELcrTNQ1kePeehmd0FTqCvEG
T8Lw8zhyxj27zN4NAl77qeDnu8C5ofGCmxvcMhcWwu1mTT1u6uMGiaLdTLin
tR6fWI9wg4PMP//g82OZi7RTP9cNJhtOFOCm7Sve+D3gBjVHn+3g80gdTRDE
rNzh4O+lJ/g8K2J3Fa4x9QDb/gf0+DwcKaJm3w04DbaB49H4fPZs4reT8TkD
mqpDHfj8L4gOAH8HH2jV+VKD94Upq0fSbJgf+MFqryxmY3jDcSogABrTPWrw
fnqlPUy5kX4WnszeeyqO51un6+m1DIKEv92ieL+Js3rpFpgEA4/3XXq8/3iL
mKdTnUKgnY6WGu/Ll0tbNb72ofDGntlBAO+vWsUH/n5h4CVKaODD3N5GExoU
cR583mno4H17tJDN2yckHA5HGtLw4L//KzIlISECqr5mD+D9/GuVqTczLhK4
/lz8jPf3ur3uYtGFC0D903iSC+8rkY9qvclREN4fs4r3vUJrWs1GYjSECxSK
4PbsvGuObl6EsSJlwlHMc8fMulLvXoJ1n8slRzBzIPnTb/JisPd5I1LcpB/P
SQlXxsJeoawLB35+soIZNazjwFyM2M2On49f4WvePXEwoLRugjsjSHiR3y4e
1J7FvmHDXDe+EjPcHw97yactcT9N8hfgcU6AJoe+Efz95NDhfWe30QS4nZcS
jDtLa4yUzyERxI3f0uNerPB5ETaRCANhZypZ8H7ZPEzb6pIE95jzLXErXHQL
KvydBOK6FhvMmFfKd9Fu4GX4ddy0BDf5i6f3bP5chjnPHtv/Xz/AyY1Cr0AK
+QAVbgXpPHG+5SvgS/RtZ8J8j8K77MrZZKj0tUzATWQak7+4lgxm0p80cWce
CLb3D00Br7LLZLg3SXx3uyNSYHUlnAS3255bifzFFHhO4buHv4/Jbpn/3U1K
Ae0Is23cgwvScVk5KWAeKbiMm3tk8UFDUwrU5a9N4k4emjE52pIC7jvL47gX
+yeWYtpSIP/I0nfcbd09aoYfUoAzjTiM+0xnbffIaApMaa59wa38uvhI6a8U
6Ija+YSb5nmWZ+BCCjgXUrzHPdoQ90hxIwUS7zN34a6uDdrY308Bhiz+Ntz/
A6hUJxc=
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
        "Transition Probabilities |\!\(\*SubscriptBox[\(C\), \
\(1\)]\)\!\(\*SuperscriptBox[\(|\), \(2\)]\) and |\!\(\*SubscriptBox[\(C\), \
\(2\)]\)\!\(\*SuperscriptBox[\(|\), \(2\)]\)", None}, {"\[Omega] x", None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> {{70, 20}, {50, 10}}, ImageSize -> 
      Large, Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> 
      "Transition Probabilities for \!\(\*SubscriptBox[\(\[Lambda]\), \
\(0\)]\)/\[Omega]=\!\(\*SubscriptBox[\(\[Omega]\), \
\(\[Lambda]\)]\)/\[Omega]=0.1", PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
       "|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\), \(2\)]\
\)", "|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> 
       "Column"]], {Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.651952392905361*^9, 3.651952463273885*^9}, 
   3.65195255100841*^9, 3.651952605229216*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], ")"}]}], 
            "/.", "solset"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(C\), \(1\)]\)\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Conjugate", "[", 
              RowBox[{"c2", "[", "x", "]"}], "]"}], 
             RowBox[{
              RowBox[{"c2", "[", "x", "]"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], 
               ")"}]}]}], "/.", "solset"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(C\), \(2\)]\)\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}]}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], ")"}], "/.",
             "solset"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Normalization\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)+|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}], ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], 
                ")"}]}], "/.", "solset"}], "]"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Conjugate", "[", 
                RowBox[{"c2", "[", "x", "]"}], "]"}], 
               RowBox[{
                RowBox[{"c2", "[", "x", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], 
                 ")"}]}]}], "/.", "solset"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Merged\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\) and |\!\(\*SubscriptBox[\(C\), \
\(2\)]\)\!\(\*SuperscriptBox[\(|\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}]}], 
       "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"end", ",", "endpoint", ",", "\"\<Range\>\""}], "}"}], ",", 
     "10", ",", "endpoint", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.651873677667712*^9, 3.6518737101083527`*^9}, {
  3.651873816597395*^9, 3.651873925158081*^9}, {3.651873968091967*^9, 
  3.651874056802374*^9}, {3.65187411143363*^9, 3.651874173690435*^9}, {
  3.6518750042536287`*^9, 3.651875009765687*^9}, {3.651875100426676*^9, 
  3.651875101669065*^9}, {3.651875169774579*^9, 3.6518754042555723`*^9}, {
  3.6518754393727417`*^9, 3.651875462206348*^9}, {3.651875497467214*^9, 
  3.651875514630959*^9}, {3.651875595526626*^9, 3.6518755956835527`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`end$$ = 800, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`end$$], 800, "Range"}, 10, 800, 1}}, 
    Typeset`size$$ = {1161., {375.634033203125, 381.365966796875}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`end$1452$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`end$$ = 800}, 
      "ControllerVariables" :> {
        Hold[$CellContext`end$$, $CellContext`end$1452$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          Plot[
           Evaluate[
            ReplaceAll[Abs[
                $CellContext`c1[$CellContext`x]]^2/(Abs[
                $CellContext`c1[$CellContext`x]]^2 + Abs[
                $CellContext`c2[$CellContext`x]]^2), $CellContext`solset]], \
{$CellContext`x, 0, $CellContext`end$$}, PlotRange -> All, 
           ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "\!\(\*SubscriptBox[\(C\), \(1\)]\)", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding], 
          Plot[
           Evaluate[
            ReplaceAll[Conjugate[
               $CellContext`c2[$CellContext`x]] \
($CellContext`c2[$CellContext`x]/(Abs[
                 $CellContext`c1[$CellContext`x]]^2 + Abs[
                 $CellContext`c2[$CellContext`x]]^2)), $CellContext`solset]], \
{$CellContext`x, 0, $CellContext`end$$}, PlotRange -> All, 
           ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "\!\(\*SubscriptBox[\(C\), \(2\)]\)", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding]}, {
          Plot[
           Evaluate[
            ReplaceAll[Abs[
                $CellContext`c1[$CellContext`x]]^2 + Abs[
                $CellContext`c2[$CellContext`x]]^2, $CellContext`solset]], \
{$CellContext`x, 0, $CellContext`end$$}, PlotRange -> All, 
           ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "Normalization", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)+|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding], 
          Plot[{
            Evaluate[
             ReplaceAll[Abs[
                 $CellContext`c1[$CellContext`x]]^2/(Abs[
                 $CellContext`c1[$CellContext`x]]^2 + Abs[
                 $CellContext`c2[$CellContext`x]]^2), $CellContext`solset]], 
            Evaluate[
             ReplaceAll[Conjugate[
                $CellContext`c2[$CellContext`x]] \
($CellContext`c2[$CellContext`x]/(Abs[
                  $CellContext`c1[$CellContext`x]]^2 + Abs[
                  $CellContext`c2[$CellContext`x]]^2)), \
$CellContext`solset]]}, {$CellContext`x, 0, $CellContext`end$$}, PlotRange -> 
           All, ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "Merged", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\) and |\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding]}}], 
      "Specifications" :> {{{$CellContext`end$$, 800, "Range"}, 10, 800, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1206., {421., 426.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6518737136281977`*^9, {3.6518738305331297`*^9, 3.6518739258027153`*^9}, 
   3.65187399497318*^9, {3.6518740279941883`*^9, 3.651874137226309*^9}, 
   3.651874174480114*^9, 3.651875010374404*^9, 3.651875153197109*^9, {
   3.6518751847054043`*^9, 3.651875424620829*^9}, {3.651875462795136*^9, 
   3.6518754857914543`*^9}, 3.6518755162695293`*^9, {3.651875573040164*^9, 
   3.651875597275037*^9}, {3.651875687767758*^9, 3.65187573956141*^9}, {
   3.651875795357263*^9, 3.651875831515781*^9}, 3.65187586241646*^9, 
   3.651875900639752*^9, 3.651875952548401*^9, {3.651877431469512*^9, 
   3.651877474378131*^9}, 3.651877558381744*^9, 3.65187764560769*^9, 
   3.65187809479113*^9, 3.651878134998427*^9, 3.651878177264032*^9, 
   3.651879066395855*^9, 3.6518791136941233`*^9, 3.651879632150537*^9, 
   3.6518797625771637`*^9, 3.651879797423769*^9, 3.651943840707432*^9, 
   3.651952040191557*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.651874138516499*^9, 3.651874139828368*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["RWA + SLOW Matter Frequency", "Subsection",
 CellChangeTimes->{{3.6518782172676277`*^9, 3.651878235834234*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"omegaHatR", "[", 
    RowBox[{"alp_", ",", "bet_", ",", "x_"}], "]"}], "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "bet", "-", 
        RowBox[{"alp", " ", "cos2thetav", " ", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"bet", " ", "x"}], "]"}], "/", "2"}]}]}], ")"}], "^", 
      "2"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"alp", " ", 
        RowBox[{"sin2thetav", " ", "/", "2"}]}], ")"}], "^", "2"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probability", "[", 
   RowBox[{"alp_", ",", "bet_", ",", "x_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"alp", "^", "2"}], " ", "sin2thetav", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"omegaHatR", "[", 
        RowBox[{"alp", ",", "bet", ",", "x"}], "]"}], " ", 
       RowBox[{"x", "/", "2"}]}], "]"}], "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", 
      RowBox[{
       RowBox[{"omegaHatR", "[", 
        RowBox[{"alp", ",", "bet", ",", "x"}], "]"}], "^", "2"}]}], 
     ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.65187824102882*^9, 3.651878264130218*^9}, {
  3.651878448178254*^9, 3.651878589061674*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.4585`", " ", 
   SuperscriptBox["alp", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "x", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"0.21022225000000003`", " ", 
         SuperscriptBox["alp", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "bet", "-", 
           RowBox[{"0.2`", " ", "alp", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"bet", " ", "x"}], "]"}]}]}], ")"}], "2"]}]]}], "]"}], 
    "2"]}], 
  RowBox[{
   RowBox[{"0.21022225000000003`", " ", 
    SuperscriptBox["alp", "2"]}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "bet", "-", 
      RowBox[{"0.2`", " ", "alp", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"bet", " ", "x"}], "]"}]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.651878591467201*^9, 3.651879067183251*^9, 
  3.651879113991103*^9, 3.651879632467017*^9, 3.651879763293108*^9, 
  3.6518797978119926`*^9, 3.651943841111562*^9, 3.651952040831005*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"probability", "[", 
    RowBox[{"alpha", ",", "beta", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.651878595813496*^9, 3.651878612516221*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
4bC4X09yRASkeXz0Xy0ThSs3SsIddx2DHTJuxZ93R2FJeXrbusdeUDHR/7l1
XxT+zMxsviJkD/q3LXbfVoxCAZV29dWv9KGX3Bx4QTUKucKf3zP2lQGfQ1BK
U49C+YlVL9/tLtKd+1c77qoVha/E1F//MpWAhGdKexCi8PpXn6s/3ACEzlwP
kjGIwrtpO49tk7KBAuudZTyHo1BTXrLvZZMbqIrmTE6ZReHzEK20C11+0DQs
vK/HMgoFuYr4SvRDwP5qSki1bRS+8zZy2psdCZ8CuG7+5xCFBMvYNgtBEpDl
Y6eYLlGoca5orc97MnDOLcr7eEShyWDnqrEJ9v1RGxFm7BOFH3L6t5dJU0GG
OX5rbwA7/5abyz0XKFCt7z3DHxyFCeFxCecsyWDM83r/fBj7+UdT41YSEQY6
bCMGCVH4+J/NbXm5SAi40Ha7nhKFhaulg78ohcCik+H3/KgoBC5pMYe3/nCQ
Trz/ihmF6qs47u7X8QLyxSsJggns94PPp0upO8Ddms4jZklRuFrwwxIX3xGY
f7kikng6Culf5H1Fj2iByo+9b+vPRuFMlZWw7/BOIIo4lyyks/mdoKRuP/dV
t0L1ZKTCxSicLlu69GDtou5322rNgJwopH58brArQwYUiR9X5+dHoZAszYmY
egjCzwu2DxZGoURhTblApAncugOZAqVsPvvSXxn/sIWprjAP05tRuIGfKhfN
dIF933J2J9yJwpZt4W4Lh7whmL/1e93dKByKLXsRYuQPE+a7EuUfsvGsO+fh
+TMU5ELtzf2fRqHK6DdWqmokHDuTsOnysyh0V2jXWFNPgJKyO28HXkRhwLHz
K2/Wk+Dzi7clGzujUKfOu7NkJxlkJzYQTHqjcORLTbjVXzL48Wgdih+Iwjnq
8+Fn+RQo3B20pu51FI51G41mr6PCqPHF9rm3Uehj/TolDdj+K+BZ5r6PUbiR
dPO6nTEVvE7Me/h9icKOVaKKoux6X7kmJZf3NQpVz3ZutBumwLtGq9mX36Iw
gqoumE6mgMRHZh3/QhQuOj8laS6QwWP1zcTDS1H4z+FYRbAnGfKkXpuzVqKQ
NKh5aKKOBCPII3qfIxqXjZ6OrmPns81L7d0sZzQaTr0qvG5HBJc4v9K966LR
6vWQ5d5sAgw9fHIoVzAafVtWXfslGQlb3sysebkpGjeSm3cmdIWD04p4B59Y
NPb72hQMHAuDgUNRnnE7o9FGon63X0MwbHIpkbu3KxqZBfsmJk4EgX3Uy9nv
e6ORkyrcu+h8DC5kr6nfoxiNn7YmETdAIPTWKh/3UY3GP7pFPI4HA0Bw0NMi
Rz0a2x4QSh9o+4P1Yqpov1Y0HikQK5y094OuA5OlRobRGHv4Co1Z7QP89luI
sSbR2Fd6dy5+xRssScZatebR6BmvdiLPxhtS08mc362jsb3R+OBslRe0VxR0
yB2NxryTjM6MnV6wvqc7y9s5Gv+ChshBTU8w+/7X85J7NAZmpjZL63tAy37X
ufUB0bjry3/Ppc+4wVrLU/WGwdGo3CRwkf7cFYzDao8zw6ORdJkeoCXoCs9u
CG/+RmXzub5Rt++ZM3C26b3fzYhGHNyoLqngDIaTEde94qIxIDPx5fNLTtAg
167VezIaw04f/kJLcASZ3Tk9DWeiMcXl8TOf1Y6QJBscWHUuGm/8tXCCBAcw
3clzIeNiNFZsVWkejjkKZTsG5U7kROM57zubdH7YwwbJ4keU/GikBHioDRyz
h+5thpMOJdHYfC/1UqqOHaiICbMO34hGjijVU625tpCxZXSTxm02X4oB2onz
NuC0iaW3tZbNv3mhy7Pj1lAnbDW4rj4am5T9vt6MsQJxIYmw5UfRqOdpnLfy
2gLe8T/IHm6Oxl9rp0fdnc0A+c7sb2+NRge34nUt0Sb///unpged0fjj/ZE1
B08bQwDP0re8gWhcNRRg1R2jDy3cz0+cfR2NaaqXVT4GIOzlytoW95atz8WK
bWP/acPMqgOHvT5H4/rpSwllRw6ANceaN9aT0TgVnOEpY60ElX97iHoz0Vgi
vJB1aNMeEPlzhUdljq1X7w/fCnfuBMrviMs7F9n6R8mdYz82w8Av3QPCy9F4
T+yEaanLetBY4mtd85cdb81EI3fhT91LiyOeC6sYOME8FXlfsE93ZeHGj09c
DGwN2HZi68FLuh7z0WdermPg4dlq0TbeSd0ns6ZSzXwMlLAfdPPI4oad37fU
1ggy0OFKz/uu91sgceaLeckmBm5fHeGxfHQXfJqqGb24lYEpN+w6T/Yrg/HX
E/Tk7QzceKsp7bor+7KasOePkmJgroCWPomgD7zj0teCZBn4sGKUpthoAqGf
5zRd9jDwq5S8i7uoNXR+etplpsDAuS5+bz5ne1D6mOavpczAmZZbjJ1yznD+
g+fvfQcZ2Bl2RWyA6QFz7/afF9dkYHTqfa+7u33A/u2fXXw6DDz1cXj2kLE/
bBnOsZ0xZKD1YNapufkQiB4KHn9rwsA24m01ik8EjAxqxnaZM7D2snhLkQ8B
dAd4RJ5YM9Ck+Zby/CoS5PcPXr9jz0CRwRThE/Fk4OgrhqtODBwyY1Q19lLA
p4fy8rwbA8eTgyvzPlOhqcswJMGLgQGeSo0K5TTY1Sm8iuTHwGN1p7KOb6ND
cvtolu8xBo612+ak76TDZGuFvH0oA/u8yl321NHA/AWrwTCSgZCX/WHtGyqU
P7dyOkhmYBSVsuXDaQoINEvMyNLZ+U6tSTB+QQJi03SiaAwDG5rjd3pcI0B/
w4Ota1kMLFhJ7jjnEQ4Hn565/TORgVYHHi/L8wSB8VaBTu1kdv4aQrm1Ar7g
QMiYik9h4OYZ6VUrqS4Q+GLL+udpDPwyQPpZJmcNdKm8PRsyGcjd3HhFXxwg
OUrKxOY/Bq43cBaeiJKC/3qKArLyGLi8v9gwgFCqW7Zn74nhqwy8ZZDHIVwh
BnXx5YU7ihnY7CxG0ubTgbYhlQb/MgbuTNfpeJBiDSPKte/LyhloualPQvqz
G0yd0vr3rZKBJJNfPsdL/OHPh8fbD9ayfy+dmTugFQb8hwy1o+sZqPRThEg+
SASJ9BaXx4/Z8W87b5k7SAHFSfMozia2fk8ExZXo0QD1ey6atjBQ68t41s2N
dLC5dLTmbDsDExerFMNoNPCZG+rv62ag5IpJ2lAUBYhmHvNbXjJwtxpZVMKY
CIkFo4IeQww0u3KG9iAyFDKWA5QK3zBw0HASNQp94ZrtV8vxD+x8fAQXHxQ6
QHVZRJjCZwbmEdUMa+r0oXn1whniJLt/0j6XWsltgUEXelntDAMPRDbx9r5a
0R2vXGlZmWPz77xBk8Je7pZ447/o/WTgf+LS61Zp28E6Xy7uk78Z2L1+l/Gs
sQ+I1Z+Saf/HQPUcgsTOmRDYK8xvIMgZg++X1BR4YomgFZLu7cATgx2ir7Kn
Zihg3ijKytkQg3c2bmzfUEID9205l98LxOCaGe33gkdoEE6SfCi7KQYf2Jzc
Mj9Chti2wuHgrTFokJeT9ehpJJyTllu+vT0Gi8J9/z45FghXGDe3/JCKwdnW
75ET2S5wp09J/dAu9vnTjHsX0g3h6b7qo3F7Y/DbS66J0F4h6E3UJDftj0FB
17PfiGnC8HH4Yfo61Rh8t55Cw11GsKCqX2GpHoP9effW91NcgTOlueuCVgxG
WcvmCOscg02fzGZeARvvt7UOWtZsv6bdtUHCkB0vMvTgcwcKqGXY7fM1icGY
iLs5GtY0ODw1aFpqHoPaH2UfCrZQwcnQ7di0dQwWKCr9SewnQVDu+ySVozHY
JFLC2bo3HKIX/IpozjH4n2+HXvxuXzhtPtH4wD0G7zOFuMSlbCHnWtjoKp8Y
nKz6oFxmoww3V2Y5DgfE4BepvB43xxbdB/ZUyZTgGDzTsfb9xA5N6Li5rNMT
HoMHHy9cHCo4Cm8549xESTH4o/PXb09Lf5hxW8NwpbHzOdd55ffWSPh39+R/
VxgxuO0db+ADFhkE+DbcG4uLQSuP3NsnXlFhh3/awN7jMZhx/FzbmmwqKD8U
+RGRHIOkDdwH5LtIoL/pP+HqlBj068nGGaNwsA3brrKcFoNfS/W2XTb3Bd9n
V60hMwYV/gTxfQywheZoenTkfzGYcprmYd6sAnJKVteu5sWgeN7dVO2BC7qn
x2Q7e6/GIKvN4SLPhoMwdWnl55riGPwulbRWTsMOLK37pA6WxWC6seUvC19f
uMNVdiSgPAaT/z4UyBoMA6F6FuViZQzeezFiw/Jk+4NIx/yWmhgsodY6X5ek
woDs/he/6mIw4NLUk4J8KmgMc87vfRyDD3Md3XI6yHApbVjcrTEGy67aDQgL
EWDFqNI49XkM7m0zUv8Tcgw8fidHPmqLwelvzCnpITd4csfz0reuGFzLn6d7
km4COwPUmnb0x+DcBaMF20NScHwb34zNqxg8X9Braxa8pPu5++PmxJEYZPo1
CcaqaYNJUp3e3ffserZd7JeutYcyrfMhY59isDbXryfB0Rc2zAZmik7E4Knj
Rn+PdYRCeLHu48PTMdjc6m/KSiJCt+umCfpsDOpVfoj+40gBFcEpobIfMXhr
/uHsdBAVMpsbtId/xeCNW1Ix/LkUWGL8F7Dhbwy6ccOLFQkSuChHpumsZuLG
fUenfreHw4PPxnXh3EysSU9s6pIOAInc7Z/yeZlYa+EdeV/XFVg2C3w9/EwM
F1B+ocVrBqPcbeqrhZm4Idhl+SdDHgwfXPVW3czE181KMz7XynWLCfQzftuY
2LN7X8DXtbLAs9uqOlOSiVd3OKRvzzSC4BHZd83STGyOmHjnoeII7edXeJZ2
M9FGmG/bJK8v7D/cp7JHnonLRbaDnU+DIW3lupuLEhPvvxr2a/gSCXMVrKQz
B5j4KYlbVLCGBPaBjnceaDAxTUdS6ftxCtSK7389rc3E4Z7asnRFKoj1cnJK
6jGR2pnVmlZFgZiTwwrWRkzMHKu8oq5AhrfalY7xpkx8usds+Fs3AXAuOb7S
gomrTGc1fj4Lg4ISzxsfbZjYNyy0fNw9EDjd1V6KODCxfUqnP+iPFwQI8f0z
cmGiYn7gXnkHB2h5/lGO5sHE6U3r9W+YmcJeZp1tqQ/7/CyDuus8apCicj5m
KICJ205ocBBABGa+BBbzhjBReF/n8KHiy7rWebrdWhFMrJ5f7ff4+laotN20
HEpi86UttvzhtxqI8ExJX6Yx0QlK+ob/HAbqwwaLLgYTc07u4fcdsIMh4n80
DhYTbzcd0bC77wbacpFXlY8z8QhpwUlioy9cfmPc5pPMxGv7R9NUGwOB48L2
HxdSmGi7/Np/Qi8UfEwWJJ6lMZGXM+25umIkNP1pNVnMYKKh6KaP9N/seVh1
lbj7PybW+9YFG0aTIPkYPdcpj4keFwdU9IrIMLndqvnUVSYuBvns+S+aAhGV
zQ+IRUwcFfe/unGRAgvGulWu15nYWeAnfEWeCvTh6uuGt5h49wJJfpbt3/5E
KFxRqGCi0lnyz8FRCiRwFmWJVjPxQ2T0+7eRFOD+Tzz13z0mQt+sx5uXZDij
kJE4/oCdX43+k6tb2fOsYX10zxMmmuY07b9lQIJMh8TIuiZ2fSRCN6xyJYLY
1+WAwhYmtuUpcK/4E0BaZNKO0s3Ei9Oqe+KHwqG01NvMo5+JcxUju2Q+hoK8
zhAefsXE9IQSdb2lYFALaFHY+p6J/C7rvP2cA6F+GWRWf2LrzfPa5tKb/oDn
asW+fmFiR1J4pJyYHzRJKwr2f2Wibu91512FPmB6r3jtw2/s98trOJVNvKHT
XOJv0TwTLVUezxuv8wLbD5kLZ3+y62GlfXi8zR0GKXxfab/Z/XN9dGaozhXc
eE988PrHxIN+polH3jjD+8srg6ZrYvFtw9O3HUpO4K9K7lRZG4siMl9n6ysd
YPL516Zt62Mxj7mU4+B1FMLdfOs5N8Zi/0wtx7CaPcx/f10xLRSLvXOUbxdU
7YB+wrZ0QDQWw14kzH62s4WVra2XH4vF4vpL2hnumTYQX66XWSoRizRJacaN
H9bAbXD/zPmdsdgUY/2ggmgNpweVEqJ3xeKJz+v/xvFaw8bQUrrv3lgcEf4T
V0K1ggyOHRHm+2ORu0nWXX6tFWzJvOh/UCUWyWtsSioaLSFvz0Y3CbVYHKq8
+rrguiXsfJRku/ZQLN7OvG9XVmMJxbZ/Tb7rxGJBmQVHybgl7PtCgSG9WFzJ
sCu5qmMFdxjTBxuMYjGO/lesocoKDgj4y98wjcXkVbctCmSs4f61kZ0ZFrHo
viDbpx5rDbqa9luZNrGY+pf/wLMxa2joaNsYcDQWPxRzrwS52MBhHwNuK+dY
DL2e/VRn2AbaF+tW1N1j0bf9whPzQFuwOaMyv8M7FiWOL6zO/GMLA5JlE+v8
2XyXhEhw5tnBO5P/BoZDY7F4zbWEijl7mLtEuxMXE4vEm9zH4vsdgab4rfgY
KxYnrqmrNp9zgpXGgDyb47GosjBe+svEGbimj56WTonFc3VLSs7lLnA6voO1
IY3N166k1lWOrsAvakT7cSEW7Y2+FWYtusKFsgdhby/GYs/2pmhjtt/eAgf8
nufEYqnkzxUdYXcwV/D+yHklFvco144oZ7lD3LazPvrXYnGql0iv4/KAynX1
H+JKYzFoz8XNZz094PPPL14Pb8aiWNniurCrHiD2WeT98p1YTNRbqyz7wgMs
+/U8NapjUe1n9mhmvwckNIS/pdyPRbcbBM+7Tz2g+k6Oe9XDWJy82yp7/qwH
jF9uGfn+NBblqr6TPTQ9QDz1h+v+5liUT6/ypT9xB2vGzuGQ1lgM5DFaDN/p
DseDrFyud7L5OHWvVMjDDe45xgx97mXrZ4Q8nkh0ha9G151kBmPRqEjmp5Gn
C0gcGBj0HmbrUcHkxlEZZ7DducYx/10s3vA/TDJscIQkAaWBkY+xeG/n7jHH
Qw5w/6/bUbHxWDwbVP/71ll72DFcY5f5PRYRwtd0DFmD/YuPvb0Lsehg0Goi
UW0BybUCtgK/YpE57XqVvenDtwvB1mdWxeG58fGDReZ6sDPhYlcLVxxaOGwM
Scw7BA6RTZbcvHHYYh2TIiOrCqc9ZjsM+ONQg8/z1/UpOXhkLmERLxSHGUxq
9AnWNpg7dKT9kWgc/jZNbaZ1coHsHvqRFbE4/BPmYRDk+0rXaXNRq6ZkHMbF
vGz3UenQTeHqNaVJx2HYeKVTkykXPJn/23J3dxzS7326nC61A+Y/7DOZ2xeH
F6/y9FxsV4Jd3U7PFZXY8aZkW0v26oDLoxPGYQfi0G7b2NvNlcZw9mblszKN
OCylS/k6+bP74dI7w3FtNp50hfFdYQ6wmLyhSVYvDvNbv/p4+rjDHpqmga8R
O7//Qt3OZ/iAm39AwxVTdvz/Xm5a2xYAaXYX9N5axOEtk9TZVLUQaNJ78mSb
bRw2MYX+Vt+JgCXFaXB2iEN7TTvH81xEkJcQe5zlEocVp/7EB/CQwXPDYd1+
jzhMmVYH4SYKpC+THgr6xmEia9+xzdto0Dx+RdsqMA4rFc+u15mlwfJAR31K
SBxeMj6xyLmfDvufLR9qjYjD6rXHR90es/1X1e66teQ49Df0JIfmsvelq/aa
RvQ4vC00u6DSQoaWc/H3EmLiMGvq6sRlOyKsMMvVn7DicOB7eTvjYTgohQ7X
/Dkeh1yJhSsGysfAz4VHTetUHJ5S4hy1YHhDtsnBanpqHD5w4QiLtnKANjWf
AzXn2fXmYIW/kT8Mf2XOVc1nsvGtOt+kbaYIKsIPVJQvxSHwj285cXlKN2DV
REX45TjkDP01dSRZCC5926R8syAOz79evenbDS3ofKN/Z6KYrQfRjGccijaw
qj1CcfeNOPxXaK9ULuwJTv/pMMRvx+EeF9B9yxsI5QHrnwtWxWHrkUSPtc/D
gfPAkNDa2jjkdXf9171ABJdVJR4rdXG4gGCf20mBO53kstlHcTiqwHeS6wIN
uHP1Fz83xCElQuRT0l8auAUJ6I80x6HNtXhmxzwVKtXepva0xuEyX8i6d4lk
4OG8OdTcycarU3K68nskePREyT7ojUOZ84cqhmyC4O7lw4SKgTjcLtV39Qbd
C9aHbnpY/DoOv1Ye/Lp6tw34aH7kyX0bh3fHV3dvT1KDe9wV9udH4zCk6Uxo
jss3Xf7+2CtJn9nfFwj07DuwA/yumk8xJuPw0Csj+7gRI6gLF9MgzMThlsaE
zupGZxDQHk8MmIvDswMKgtUyARCwrqbLdZFd3+TuJcOGCHg4kLjNZjkO08sk
pYX5yCByzSbQ+G8cRvQ09x1m+6Hqe+eGtq9i4bOm+ZLGOhp45VPjtqxhYX5+
7JVfsVRYn+QuK8zFwsNLZiWL1iSoCTVs41vLQmpsgEYdLQx87PYReNaxUKew
wE14jy/wHRLavGY9C7/j35LN1nZwb8evB382sHD104Sf9fFq4Lv2vc8SPwvF
5l79sa1q0eWfaeaZF2ChyuLyL3r2frjff6t8WoiFJ3S5P1Y7WINffYb9uAgL
JZRffE3J8IaNBYzlUVEWTrQ16U3qhEJdss+VN1tY+PA4WSt4iQj+EabGr8RY
eMXo8NU+SyoIOChN9Yqz8LimlZZvIA3qtTend0iwUE6N+/yhfxQIkP6r3rKD
hXSH6DhvdyII8Y69adjJjsdHLjyUGgwPv7clPpRh4V5rE/t2W084Nli5594u
9vnFu3vvtJqCyKP/uirlWFh2OCDbOkkCHl9jUW7tZeExxYz/1obzQvCZwG2l
8ix0fsbRf+6lAWwiWj4t2M/CGy33XOL3uMITp4OBeUosPFfiwbzpdAxCQJwv
W4WFYZKuBJlgAojuWlOVfoCNJ6Mh4IM9BZ5umHRKVWNhw1L4jYO8NAid7/57
UoOFHDO5Ib92U2Hz69prCYdYuCZgd7nDKBEanlw2Y2qzkGRjz7wxEwJhJSe+
03RZ+Gov6DRxecOWs6FZRGQhbzjpv6ZpC2gi22mH6bNQWrZMSrF7F0S4HhoN
NGTnN6R6O5/xQ1dMXyrZx5iFjfc7LMgnAJrlePa7m7Cwu+T2+7e1jkDY+K3P
0YyF+zmsLpxi61F88WWUrTkLZT6cqh3Rj4TnIw8kLSxZuCI1z8PvRQZiY+Gz
w9Ys5FHlL1Q7Q4XtZadD9G1Z2P703/cReyq0pBEEdexZGNqg2LG1hwTixase
KjiwsNIkZeO4ZQRE1p8/JuHEwvO2phtPH/WHpm4pkY0uLHRhJkbb+TrC5s8V
j/+5sjBZleye9Qch+LdeyHd3FiZNe48p/10LjwR6RT94srBqb9Tbl96bQWiX
T0OPNwuftpv9Us4zhACtubAGXxbu1qDqT9Ococ46YWuVPws3X9vXGMQVAPwB
Qs8KA1n4xEizbdoqAnwYBZEZQSw0GoSVyzHsfklTET8RwsLZcytiRSMU4C1u
eE4JY+ER+agfY8FU8Ki3JQVEsHCSY5t7uTgFKrtHJRwJLLw3khpioUYErs/E
1sMkFvZ3/65ypoSC0+/VVA0KC9+/+7N6rtAXbgpckNpDY+G1rYzu3goH4Ngl
3bE1ioVxXmZhPAcNwF6ris7LYKGe1dHXEQ3iUGptIPM7hoW636smLWUmdFf8
+7q+xrL7jTvult8uVfZ+4ssYYbH7W8173PKYBVxLm9/VkcDCFI3KuRvBbrBU
lNj78Dj7WfLYEQGOADCvF44tT2Jh6+0HFSPVYXClu3BPfjJbryIYdkqVCPNj
qi/PnWahuPMGU4cyMhj/bmSxUliIX+9sOLqKCpcE7OUJZ1l4n/vh3UVJKszI
fhr0TmOh0sS5EV4hCuhrkRNt01nIfdTqc+pqEmRZcyoaZLCQK2ClNFs1Eib9
M16rZrFQ+02hSvlEEOgyZJJkstnxjzVyVav6wvm0u8qbLrGQcFWdmPLMGT4V
Gb7hymXh1a8pOZ7zFqBR35+8mMfCeXHZ4nI1LUjp9jvwJZ+F5SbbXBOWtsH7
sYV3g1dZyM9hVNjGHaV74PfxMy2FLKxXPi/bUboZkgU2qd8vYiGn0ZmXSSR1
GJEtGr1ewsJBuWrVGVtTUNI6ePbSdRYeIPK/P250FI5bP9M8c4OFvqWcn37w
eMIr/6NjjFsslOydCJMr9gN5xlha6G0WMo888ROoC4K4NIq2ewULnV5xG9bE
hENvEde4RRULLf1+Cba6sv1qfeYF3WoWmvhe6fn//wOP7pYFxVoWCk3tDbwe
T4bOsepJyfts/Xnfz52nUmDnb6MsgXp2fX+76PdxUIEqMKC36iELbRlby5bZ
/rRVNmB69hELT0Zf050fp4CE1mL26BMWegXWj3G4UoBonWTY18DW+34lrs0n
ydDsL/q9sYmFxrx35KfYflmMUZxzt5nNl9h9kQOGRAhLUztc1MJC04+xUmvY
9+WToua5zFZ2f1gxRGtEIkCk3uFyUjt7Hgn3EOq1QuHBGPVHYDdbDycffzEs
DoAvJd5jCb0sdNg3NrPU7gtCweYv8/pZuPxx2vKitDfoyqs/uzfA/p7HMHGz
rzsEzUhV971i13f71SXhRSfIuLOhaOY1+77gyp3cu+YoPCH+zFj3hoXvHh2X
FjxlA18PjB6Xeff/+eFuasNtAaI/28nwgYV2QdXzXf2HQe9+rZ/LR/b8lND5
bhJqAKGMAnvKGHse6WU+/UEEyNZJNUz7wsIz13eeL7DWhMZ/tAM3Jth69cmL
PGl6AGae+sg0f2X3xyahwVXqSiB23ELkwzRbH38jt1RO7AEjYw3OlW8sfDx7
tHqoUQYieaQXROdYGKjHsdHs6Q7IaeX7pLzA7rchZ9V7btugOWWpz3yRPe+7
7p/UeCQKc5YfGwOXWKhQl/stwkMYtgt2ViUss/Cr+ciBmDWCYNJ3rzBvhYVd
TfH9v1dvBHJm4YV7f1nIUDx8yZ7EB/mOZxP7OOKRVzp9G0OFD1q3RpFmVsej
aPK2rNtK/LA47Ou7jisef3ybHGjTEACpy5Z2MmvjcXD+WdgnTiEw99I0gHXx
eGZX5dDOsyJA3ymj6rI+Hl/vLP229HUzFH7il6bwxePpD26DcYfEobP4l1Da
xnj8YNWYkNW+A5aPfVp9QzAea6d/pDWKyIDsvq65Z8LxuIbPKH2GWw6sp++P
vt8UjyMtLx1W3ZWHmNvXen9vjscgQoMTl6gylBDONYiKxeO/XKXFPt0D0Ksa
XakszsZLudJa/1od/v7wKzCXiEdB96MH22e0YM89q/TAHfHY2PC0xwLYS2H0
oYSEnfH4ew9XzfpmfWBpyxLzZOLxY+Hv6fIzRnDj70afe7visfVkW7PNORMY
eLJs0ycXj1ll7RFCXUdAwahbeZ1CPDLstTh0GDbgtLZeSkYxHs+Dx3hjsB0c
f1EkCMrx/6voyuOpepu4SClkyVYkW0io7FRmtCL7ErIk+87l3ktI7n5t5ScV
IkqLSiURCUlSUURKSYSKsqRCRXjP++f9nOecZ2a+y8z8AyqNL2xtj3SGHuuE
H2R9GtoaRfF73iD2X9GAgROGNLzYPx75X587bOm067hmTEPhkyKr26S8gHNA
9fbHHTRUln3t92XPYSiXETs/BzSUn0nYKentA309c5lSO4l8LHZuIVN8Qe9Q
R5TVXhpW2JzqaEnxh0OKtd6B5jR0UhkxXmQGQOrQZTu6JQ0NhWQPfI4JhLuX
/sMCKyLe+3tmh5yCYCAwcUu1DQ3/epQF0FSDQUgjUOGVHQ1zVDr8fYaDwWjM
XnTCgahv83Fx89Mh4HtzO88KZwJfkl6wkE4oHI9Sm1R2oeHm+8yOgnuhYHnB
p3mtGw3Lrh3jLKqEwfKugnwxdxravNf0VTgaBk3876IFPGlIWnaxw+hhGCQb
SlgsetHQx/1n77HJMNgebLt+xpuGrm8CQW1lOPzNS50e86Hh1Q3mvK7C4XD3
+ePWIT8iP+OB75v/hkH0As+FngAaDq9crt7wPAy0t2yP6wgi8qMEExN/GIwe
jrV5GkLU89avZ6JqYVByslzlQRgNv8393Vx/PRT8Ho/PVkbQcJ1lXZOARCgo
/lbvKI2i4a73NfwTXiHQp+53pTiahtHDM3P0tGDIO1h4NI9Mw/APCjf4c4PA
Jb3H8T8qDYuM277/ZAcS86GkBjeOhv/MbH8pOAfAy+92PMfiaShReeZqH58/
WDo+KQ1LoqGC/w7eY8t9YBmLl+GbTMMNn634q7294dHdHW4H6cTvQuGo1fs8
YfvaCn5zNg3Ly7cfvP/bGf7s//7elEv8Ntb8TEcHqDyqUa6fSkMGJ39q61Zr
iL7lz9VMJ/hg+9Li+ea9oD1Q5KV8nIbuJ3lemgcBfBPv1VubScN7iWkKen91
4cpuaUGxLBou5Fhx8gw2gB/VYWB5Ng1ZLY8HpZaKgEJJRtXCKRq+yQk3VG/s
Nu199zRj+gwNpzLS1v3y+myaK7jUbyyXhvq7dg82GEnCgR1gMnSWhsf+bRhd
dVQLxCPjRXsKaGhXPGVLctgB7UWVX14W0rDxw9H+fXnmkN45WfvkPPE9vvmO
8lMOYL5U82R9McGnb23DsWsOAr9BYHDlJRo+/Pi8pMPlMDQGXoDSKzTkcdDd
WCsUAEm5HySLr9LwMYsW08wTCttaZcZyr9Nw5Exqm/0CsY//c2zMvEFD49jN
VEXfaKjQPpHDuUXD8ZqH//ankIHk3RKRdJuG+zXOXJa3poJ2Fv8eyh0aRvxx
4RNOi4Vvj1A2rJKoR1G5VrZyHFyeTvjhU0XD2vIF4yJif/RVq3rido+o9w+H
FctEYkHB7WeB3X0aPrFqN6l0pkBvqhZ5Xx0Nl9XP7dH9FA05tUGWpg8I/Exa
M9ruR4LzRLGC/kMavhUj3WN+DwJxhf6ZTY8If+sJu/Bi9DC02a99ofSYhh0+
61+H5R+AVIZz8ZonNOwa1lcqn9wL+yozj4g+I/wsJfnzBgUtWDrcaru8lYZf
gz74UYr6TRtklqsuPKfhiczQUN4WGThqufPfVBsN/yw2FESsQTBJPNo5+pKo
Z5nEt2+bHGHmRnXJYCcNf9qQqs+Oe8Od/l9J77oIf5T9ef8vBIN5fUru7Bsa
vrhkYKgvS4Le/PUVsu9oeOe096mTg2SISqhs2/6ehqLdb0QGHGJh6cH9Xz0/
0DC+QMtMcSoWcowG+I710/CzX52/aTYVNKVj5YsGCP8ryjwQ5BoDDdNCxg+H
CL9U92a8ORYOTl0XHAc/E+dtr0vc1/CFkXKjCL4RGkr3Zz23N3aExP/auCrf
CD3WDOjN9uqDaJRf8Z4xGjoK8gjLW981vWgzWxcwQUN1zrM+ZdOtYKSV+ZYz
ScPz5S9sShvt4bmg6q+SnzTcV3q2/+GAD3h/uy/cMkVD03rqH37hCJh6aq8+
OkP4xz3GXMvPGOBeGd4p9JeGWLVhqlo4FuTYRz215mhoIhGm1n88Fsr8VsfZ
zBPxSyU94dlDgd27rmZFLhL+umnnBJRGwVtFuJG5hI6Ue6NFynf8IYzn9ZPb
fHS8X2r/aPSnE/D0hwx28tNxVlt5D/ugHmTX8cz/Wk7Hoq8J1/srW0zV809L
S66ko16WmlNi0A6ojdfUMRCio6vO8cSiHW5g59Zo5bKKjgfj9FNWsIPgk6Fr
YJwoHatiUqzdpKIhTmqClitOR6ZNcuWwJhWEphn5NRJ0TF5zXHbeIxaKXq2p
ei9Fx2w313lBcwrold/q+CdDRwOSiVBNQhSxn+0ZWydLRxVJpxTOOT/wiHy/
DNbRMY3nq0iMuANMWpMUvdfTMWz83MWgb+rA1Fy+naZIRxmm8Q15n+UgI1hw
4IIyHW1/yv0+bbUPSr/qkB5toONPUxH5j27egE+fpn1So+O9cLskt94w6Lrs
dZlfg45WW+Z/B7yJgSDWVIOqJh13fLDnWXhBhX++qe/3adNxzO9Hei2FCpk7
FWaCttDRvLjyx4+RaFBRvCuaqkNHJ7cfsdNBIVC9uH/TdT06ijAX7n+X8gCr
voE9zw3oqLCi+n2Akxl8rI31Hjei47KmuguVqoOmlLPCCau2EXhE5GkjWxdW
xhef2ryDjsE2yeXDh5zhnKtxmR3QUVftrugP7wDQMWxvIZnRMas/WHhejATN
kv6fs3bR8bZulH60AwUOTs0u3tlDxyeaK0+vayb2n87Mta/30XH7rqd58yIU
oN9W1Z+xoGOvcdOSwYookMqstZW2ouO6dfumqz74w7UIhxAjGzo+vBk84r7L
GUytR5hudnSkb1BekRasD52bkgrjHegYfe/RUJr5DdOAlRI1Z53oWP04ITAg
2RhmR6521R6g43Tcs62ruAfg+BP4/sGVjnfwiPUb6QBQuvx6xeJBOl5/7nDj
OzUK7jJDVRQ86VjCN3lY9SQZejvtN6w7RMd/R3kl3/pRYYmikeraw3Rs3pOT
JjtBAdVIeTVpXzre3Wm0abdLDFjVLVWX8KfjVwOqaIZfBJAER9XFAul45qTs
YtcNPzjt1rFxVTChh38KFXYdB6D2SpWGYCgdpTbrTsWJmcHAdMEmgXA66kev
Ux62FoZlu5ma/JF0PCSr/GbxqShoZoVo8ZLoiG8GioxNzMD+o532YjQdQ1IX
xtauOgBUbcPN/8h0Qs/2OUNHfCE/cd2Wv1Q6LqFurJg3DYOHLXxbZ+LoGODQ
VSs/T4IvMt+2/oqn483LBs7wlAxCgS91JhMJfexIkxJUpYJO5V3d8SQ6mij2
CF2doYALX4Het2Q6GsUUyl5zJEOiPUN/mE7H4RebjdzYJLhQGGzwiUnoafTl
C+MfofBk3NZwgE1H+3kV6vBePxjbZmDUxyW+L5bRceq3G4inyhm/T6Wjor7j
Ty/KfjB8y2vyNp2OvOT1exMU9MBD9avJ6+NE/rSgMKYWL9DJ7ds6M+lIOvvI
YuYWD1xprNzenkXHbeVZtyZidOC5aP6O59kEX33evDvqaw4/veimz07TsYeE
J+55HADpG0HQnEPg3VLAqlt5GLbP2eCjPILP/Z88u9QCwcdC36whn44S13X1
21eEA/eM7M66c3Qc5dnOVlchwY3PS3bVFNGxmE/CaYVlDDGPj+yqukD40f7t
4md7yfCH1ra74iIdxc6HSfi1U2Ddy4o9ty/TccFg0lpQiQo75c/uvVlCx8+t
KGnZR4GgMNq+69foGGd97E+CJAUyagLNS0rpuDxbx1CmLwbKBWwsLt2k4635
VUO29tHw9oCe5YUywj/TIov/cqNA6RePVX4F8b5hIGe9NdGvzIatcu/Sce91
jTfPw/wh/MQL69PVdOzrVeI/UnMYsj7csTlZQ8cG3VXK3fkeUL0pzzazlvBH
MU3NtJgD8OFIsl1GPcEvxRwzg1X2wPs0wD61gfAbgQZh+XFzUJeyduA0EpOY
WY4+zc0MrP10HZlNhH88VnKnXTKA6PI1TrRmOpa7P65PmdWAHB4e56SndLx2
tUuzu1sW6my+OCe0EHi9W9O8sHIZDOY/PxD3nI7zWlIup04MmAqMlrtQ2ugY
kXbLq3NJuqmWca5r9EtCvyaaV6nnvpk6cI65RXbScc/nxeqKQn6Ie+1/MKyL
uD+/b7NIoCQUKFu5B7+h42BO8j99YUVoJOl4BLylo1930Vn3peogvGrR07uX
0Fu/xq68jbrEvHLcz7GPjqG1d7evOGIA15bLh+79SODDK6sdTjOGOOYNkvEg
HVtlTg78p7Ud9i7ZEaf5iY6+vxbrtMNNQSLpedL6L3S0GeyK01+LMDjrzhIf
IfD+Tb9eWYdQFjuaxv+Njv4iV8Jn5M0gaSo+688oHd+ULben7jADK9LK3NFx
Ou73z/qpvdYM1k7kFvZ9J/REe2JNrUIYCdl4ueMHHRcPVuR/lkG4O1xd2vSL
jpOpbQdS2KbA9DO/UzVN9Ls38Xcm47aDw0D3vWu/ifcrRN9/ljIBBa/AhoK/
BN8T9M9ZRBnCRM9Mc+Yc4Z/FPsVvT+tBrQv7BWOejqW52UeXndsKqV2SXdRF
Ol5MuPG3WF8LXO0v9QQvYeD6Wd0zivvUQLVNb8CDj4HpFdmPDhcqwpRl07At
PwPFakeZ9z/IQOMTx4mdyxkYE7L+gEC+CGTuHprSX8FAkXAr+XufecDrYfSc
uiDxPSllv5XRX001TXl55YQZaPl92+nrT6tMZ2v+ExARYeBJ/PLv4ccq06eG
iiK8YgycaZU7bi4xZnq6okxyWpyB3/Iv71DfsBT8tqLciATxvZPdRw7bSoDO
zXal91IM1NR4l7rRQBF4Nh3a2CbDwGHf2J8x+zSg7crE5odrGdh2+buv5x0d
yFdJMqiQY2CBzxg1fb8xhJwX3nFFnoECLNOFTjKCkXzBrjwF4r7gXe4Bj3bD
srOalhlKDNwtU+Qzm2YBXdK1dskqDFzaHa217IkNXMje7xKjysBXPdNtJ/Qd
wPR4iJ+bBgOXtV3et8/bFYQEZ0OsNBlI4bhpPLzuDj2cFBJoMzBArcL5itgh
oNJKkjboMHDFS4r/32W+cIv8JeeHMQO11Sy3iv8NhqQflMJP2xi40yuQ9vJc
KFhF8F/u3sHA8/zrYvz1w2HtaHZpCzBws0XdFv+aCBgJVLlTZ8bA8Lfb5D9J
Ev3t0517ZbsY6CIyuvn3oyhgHt7VULyHgT7ivBbtASRw6OtsPr2PgQ5PixeW
LJBAwd3nRYoFAxfbPm92SomGie4frxL3M/DSUNaKuwIxUOtE64m0ZmDnYxQw
TYyB1A7RAR9bBl7uO62q/CkGXG2Khp3tGZi63SngLpJBtXXzhLkjA9VCAgfc
s8gwte/B1DZn4rz4xQzGOzI0NtnMabswUGWk+d15KQpkmvUtUXJjIHWJ8F51
SwoYhD61AncGNned7LsWS4H32eVnPDwZmLdsOuFZHgWS6/MHjxwi+BSmb9Z2
h+jPI2ytM4cZ2G6zJrW7kQLPxUhxFb4MHHuotr79CQVI29wfdfgz8PVbVR8f
4rmU/55V3wMZKHOfr2zuNgVqj292EwphoNc5tnndKQr4VK+5uDGMgff6hVST
wiiwfJDv+94IBu5R9LJ9pkeBUsEJY78oBoZGRDl8HCODg/5bJi2awKsuvf4h
ke8fr8b2c2QG8ninntVTIUMBt3RtLZWBpBvCC+/OxcDO8tP+7+IIvg65fN/D
EwMj75PLZuIZGPbrxoDC3mg4zh86t/oowadNn184RJBAd7Pz3q3HGKj3MKjN
KJaYt13hPxsaA/m8dq9ufRABSfSNvaEMBk42eH3qtgsDldLVaiksBiZdNab7
XwyGZ6/nSZc5BB+qC6XPNgSAxMbO5QNpDGRpOtnRk72hxqHWYSGDiO/vFhL1
+EE4lHi5QDaTgSWX/9n+MXGCpZczR4yyGKh+UfBAVooVXGuP1z2QzcCHCjpi
piNmYPfXLynmNAO/GHeqTPnqwLSS7bPMHAbay+Uvd4uXgTwrY4mbeQz8+llO
WIj+yhSpyoda8xlY5Re2UkVkCXwpFL42co6Bj02CcjqkNkLas99T/OcZCOTH
Z5lCCFt+DYByMQN1O7cJ2gbZwBu556l4iYG3Tpl7LWe4QuLeu689rxD6cPD4
+qD1MChGFSkkXGVgdDPnXPBkIDTnpobmXGcg9mSV6FtHQNgj8t3KGwx8c7Xi
3k+9aBAf91ry6hYDs+fI7XP9ZKiSsrCavE3UPz1+WGqICh6oe0a4goGV6j2e
9xdjgTdk3aDGXQZuie7SEV4WByUnl2uZVzNw9nqRUPEHKljX/Yj1r2Fg4H9/
1XUzyPDzy/tGei0DLWLdrhQDCXJEm4WL6hkYafmD92tKCJialLnWNRD+1ynz
Kl7WB4Z884p7Ggl/m8rTdKI7ATeDOfG7iYEPGLe37rZG0K6KMJZ8wsDP9o58
vUli0PXRlanzjIHB7wr3mLKXwZGVu9ptWxlYrZC7rLdlB8jraa0Nf8FAxbxg
06YbTtDkKe2f2s7AldLdizn7fSGEs6TsSgcR77Wb0jVbw0Hk9uhs0ysGHlmx
+1vIphio6Hm9Z/A1AxN6qR+f06lwcGlD5mI3A+sy5tYvn4gFHu1r7+V6GOhb
sFrw+apYuOSSrWrSy0BujYN25UwMWNKSSC59BJ5Sj3sqD0XA5LWgWvJHBtbu
UUgmHfAFtd3F4+GDDPQL9ktR4TqC14cP8oGfiPzk8kiZtwwgmypj5/2Fgff7
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
vxcXCf8OrLe96/nX9H8v1qX2
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 800}, {0., 0.00590397278954943}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.651878613224297*^9, 3.651879067288804*^9, 
  3.651879114107073*^9, 3.651879632557459*^9, 3.651879763392222*^9, 
  3.651879797917636*^9, 3.6519438412234087`*^9, 3.651952041058857*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare the two", "Subsection",
 CellChangeTimes->{{3.651877895196866*^9, 3.65187789759999*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"c2Fun", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                RowBox[{"Abs", "[", 
                 RowBox[{"c2Fun", "[", "x", "]"}], "]"}]}], "/.", 
               RowBox[{"solc1", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
            RowBox[{"solc1", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<RWA \!\(\*SubscriptBox[\(C\), \(2\)]\)\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}], ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Conjugate", "[", 
              RowBox[{"c2", "[", "x", "]"}], "]"}], 
             RowBox[{
              RowBox[{"c2", "[", "x", "]"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], 
               ")"}]}]}], "/.", "solset"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<Complete \!\(\*SubscriptBox[\(C\), \(2\)]\)\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"c2Fun", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"c2Fun", "[", "x", "]"}], "]"}]}], "/.", 
                 RowBox[{"solc1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
              RowBox[{"solc1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Conjugate", "[", 
                RowBox[{"c2", "[", "x", "]"}], "]"}], 
               RowBox[{
                RowBox[{"c2", "[", "x", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], 
                 ")"}]}]}], "/.", "solset"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<RWA & Complete \!\(\*SubscriptBox[\(C\), \(2\)]\)\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}], ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"probability", "[", 
             RowBox[{"alpha", ",", "beta", ",", "x"}], "]"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Conjugate", "[", 
                RowBox[{"c2", "[", "x", "]"}], "]"}], 
               RowBox[{
                RowBox[{"c2", "[", "x", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], 
                 ")"}]}]}], "/.", "solset"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<Analytical & Complete \!\(\*SubscriptBox[\(C\), \
\(2\)]\)\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}]}], 
       "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"end", ",", "10", ",", "endpoint"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6518779020425253`*^9, 3.651877937178936*^9}, {
  3.651877978400735*^9, 3.651878054443976*^9}, {3.6518786359603853`*^9, 
  3.65187868977454*^9}, {3.6518789924199247`*^9, 3.651879031120926*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`end$$ = 10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`end$$], 10, 800}}, Typeset`size$$ = {
    1161., {375.634033203125, 381.365966796875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`end$1588$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`end$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`end$$, $CellContext`end$1588$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          Plot[
           Evaluate[
            ReplaceAll[Abs[
                $CellContext`c2Fun[$CellContext`x]]^2/ReplaceAll[Abs[
                 $CellContext`c1[$CellContext`x]]^2 + Abs[
                $CellContext`c2Fun[$CellContext`x]], 
              Part[$CellContext`solc1, 1]], 
             Part[$CellContext`solc1, 1]]], {$CellContext`x, 
            0, $CellContext`end$$}, PlotRange -> All, 
           ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "RWA \!\(\*SubscriptBox[\(C\), \(2\)]\)", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding], 
          Plot[
           Evaluate[
            ReplaceAll[Conjugate[
               $CellContext`c2[$CellContext`x]] \
($CellContext`c2[$CellContext`x]/(Abs[
                 $CellContext`c1[$CellContext`x]]^2 + Abs[
                 $CellContext`c2[$CellContext`x]]^2)), $CellContext`solset]], \
{$CellContext`x, 0, $CellContext`end$$}, PlotRange -> All, 
           ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "Complete \!\(\*SubscriptBox[\(C\), \(2\)]\)", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding]}, {
          Plot[{
            Evaluate[
             ReplaceAll[Abs[
                 $CellContext`c2Fun[$CellContext`x]]^2/ReplaceAll[Abs[
                  $CellContext`c1[$CellContext`x]]^2 + Abs[
                 $CellContext`c2Fun[$CellContext`x]], 
               Part[$CellContext`solc1, 1]], 
              Part[$CellContext`solc1, 1]]], 
            Evaluate[
             ReplaceAll[Conjugate[
                $CellContext`c2[$CellContext`x]] \
($CellContext`c2[$CellContext`x]/(Abs[
                  $CellContext`c1[$CellContext`x]]^2 + Abs[
                  $CellContext`c2[$CellContext`x]]^2)), \
$CellContext`solset]]}, {$CellContext`x, 0, $CellContext`end$$}, PlotRange -> 
           All, ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "RWA & Complete \!\(\*SubscriptBox[\(C\), \(2\)]\)", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding], 
          Plot[{
            $CellContext`probability[$CellContext`alpha, $CellContext`beta, \
$CellContext`x], 
            Evaluate[
             ReplaceAll[Conjugate[
                $CellContext`c2[$CellContext`x]] \
($CellContext`c2[$CellContext`x]/(Abs[
                  $CellContext`c1[$CellContext`x]]^2 + Abs[
                  $CellContext`c2[$CellContext`x]]^2)), \
$CellContext`solset]]}, {$CellContext`x, 0, $CellContext`end$$}, PlotRange -> 
           All, ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "Analytical & Complete \!\(\*SubscriptBox[\(C\), \(2\)]\)", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding]}}], 
      "Specifications" :> {{$CellContext`end$$, 10, 800}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1206., {421., 426.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.651877938166224*^9, 3.651877986419668*^9, 3.651878055386685*^9, 
   3.651878095682168*^9, 3.651878135599804*^9, 3.651878177606915*^9, {
   3.651878655316805*^9, 3.651878691509905*^9}, 3.65187903193211*^9, 
   3.6518790673306417`*^9, 3.651879114198864*^9, 3.651879632584525*^9, 
   3.6518797635566*^9, 3.6518797979593143`*^9, 3.651943841261518*^9, 
   3.651952041148396*^9}]
}, Open  ]]
}, Open  ]]
},
Evaluator->"draft",
WindowSize->{1280, 755},
WindowMargins->{{-1544, Automatic}, {Automatic, 112}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 401, 12, 32, "Text"],
Cell[962, 34, 646, 15, 46, "Input"],
Cell[CellGroupData[{
Cell[1633, 53, 1168, 18, 80, "Input"],
Cell[2804, 73, 899, 13, 28, "Output"],
Cell[3706, 88, 897, 13, 28, "Output"],
Cell[4606, 103, 901, 13, 28, "Output"],
Cell[5510, 118, 897, 13, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6444, 136, 2136, 56, 83, "Input"],
Cell[8583, 194, 2326, 56, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10946, 255, 372, 6, 28, "Input"],
Cell[11321, 263, 671, 10, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12029, 278, 926, 22, 47, "Input"],
Cell[12958, 302, 538, 11, 24, "Message"],
Cell[13499, 315, 10274, 201, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23810, 521, 183, 4, 28, "Input"],
Cell[23996, 527, 9512, 190, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33545, 722, 1169, 34, 46, "Input"],
Cell[34717, 758, 10683, 214, 64, "Output"],
Cell[45403, 974, 582, 12, 24, "Message"],
Cell[45988, 988, 582, 12, 24, "Message"],
Cell[46573, 1002, 582, 12, 24, "Message"],
Cell[47158, 1016, 547, 11, 24, "Message"],
Cell[47708, 1029, 9999, 197, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57744, 1231, 622, 17, 28, "Input"],
Cell[58369, 1250, 50702, 841, 218, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109108, 2096, 999, 27, 46, "Input"],
Cell[110110, 2125, 53888, 894, 362, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164035, 3024, 1703, 38, 46, "Input"],
Cell[165741, 3064, 2852, 54, 460, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168630, 3123, 104, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[168759, 3128, 1463, 40, 46, "Input"],
Cell[170225, 3170, 1953, 45, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172215, 3220, 603, 16, 28, "Input"],
Cell[172821, 3238, 19467, 383, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192325, 3626, 1761, 47, 46, "Input"],
Cell[194089, 3675, 11042, 189, 236, "Output"],
Cell[205134, 3866, 10473, 180, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215644, 4051, 2471, 66, 96, "Input"],
Cell[218118, 4119, 48215, 863, 776, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266370, 4987, 6940, 165, 249, "Input"],
Cell[273313, 5154, 5405, 106, 864, "Output"]
}, Open  ]],
Cell[278733, 5263, 92, 1, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278862, 5269, 117, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[279004, 5274, 1281, 39, 46, "Input"],
Cell[280288, 5315, 1082, 30, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281407, 5350, 293, 7, 28, "Input"],
Cell[281703, 5359, 64043, 1060, 230, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[345795, 6425, 102, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[345922, 6430, 7198, 175, 266, "Input"],
Cell[353123, 6607, 5172, 105, 864, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
