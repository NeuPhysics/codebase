(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    298829,       5687]
NotebookOptionsPosition[    296087,       5591]
NotebookOutlinePosition[    296463,       5608]
CellTagsIndexPosition[    296420,       5605]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "I use ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "_"], "=", 
    RowBox[{"omega", " ", "x"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as variable x here. In other words, the x I am going to use is in fact \
omega x."
}], "Text",
 CellChangeTimes->{{3.651701088241207*^9, 3.6517011067697983`*^9}, {
  3.651701182288087*^9, 3.65170120020623*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgsize", "=", "Large"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgpadding", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"70", ",", " ", "20"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"50", ",", " ", "10"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.651875138579206*^9, 3.6518751407564363`*^9}, {
  3.6518753675623217`*^9, 3.6518753751842117`*^9}, {3.651875419719901*^9, 
  3.651875419886692*^9}, {3.65187547980511*^9, 3.651875480365263*^9}, {
  3.6518755676386747`*^9, 3.65187556805132*^9}, {3.6518779441294727`*^9, 
  3.651877960901767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"beta", "=", "0.1"}], "\n", 
 RowBox[{"alpha", "=", "0.1"}], "\n", 
 RowBox[{"sin2thetav", "=", "0.917"}], "\n", 
 RowBox[{"cos2thetav", "=", "0.4"}]}], "Input",
 CellChangeTimes->{{3.6517010391001043`*^9, 3.651701061585635*^9}, {
   3.651701175826766*^9, 3.651701176546379*^9}, {3.651702065565913*^9, 
   3.6517020675787354`*^9}, {3.651702371966825*^9, 3.651702378496026*^9}, {
   3.651702487092162*^9, 3.651702499077189*^9}, {3.651704025185781*^9, 
   3.651704025456212*^9}, {3.6517040574232473`*^9, 3.651704066141254*^9}, 
   3.651704111589773*^9, {3.6517041458694773`*^9, 3.65170414838805*^9}, {
   3.6518693504352207`*^9, 3.651869367011339*^9}, {3.651872407173976*^9, 
   3.651872408110817*^9}, {3.6518736431427393`*^9, 3.651873644122657*^9}, {
   3.651874080593396*^9, 3.651874080902589*^9}, {3.6518756820164127`*^9, 
   3.651875735400353*^9}, {3.6518757882364187`*^9, 3.651875808987604*^9}, 
   3.651875896576954*^9, 3.651875949126729*^9, {3.651877408744494*^9, 
   3.651877408917667*^9}, {3.651878090958637*^9, 3.651878091499765*^9}, {
   3.651878130702036*^9, 3.651878164236258*^9}, {3.6518790624319468`*^9, 
   3.651879062645639*^9}}],

Cell[BoxData["0.1`"], "Output",
 CellChangeTimes->{
  3.65170254051259*^9, 3.651702687009797*^9, 3.651703786676063*^9, {
   3.651704025982901*^9, 3.651704066623074*^9}, 3.651704112539016*^9, 
   3.651704148787171*^9, 3.651869372291177*^9, 3.651872410105484*^9, 
   3.6518736460164967`*^9, 3.6518740824178333`*^9, {3.65187568631888*^9, 
   3.6518757382329817`*^9}, {3.6518757941437683`*^9, 3.6518758298472*^9}, 
   3.651875860855275*^9, 3.651875899280648*^9, 3.6518759507780657`*^9, {
   3.651877409518498*^9, 3.6518774110223103`*^9}, {3.651877453363883*^9, 
   3.6518774724744577`*^9}, 3.651877556427269*^9, 3.651877643916594*^9, 
   3.6518780931946583`*^9, {3.651878131772794*^9, 3.651878133269847*^9}, 
   3.651878165956009*^9, 3.6518790646161757`*^9, 3.6518791118160048`*^9, 
   3.651879630653739*^9, 3.6518797608581963`*^9, 3.65187979586231*^9}],

Cell[BoxData["0.1`"], "Output",
 CellChangeTimes->{
  3.65170254051259*^9, 3.651702687009797*^9, 3.651703786676063*^9, {
   3.651704025982901*^9, 3.651704066623074*^9}, 3.651704112539016*^9, 
   3.651704148787171*^9, 3.651869372291177*^9, 3.651872410105484*^9, 
   3.6518736460164967`*^9, 3.6518740824178333`*^9, {3.65187568631888*^9, 
   3.6518757382329817`*^9}, {3.6518757941437683`*^9, 3.6518758298472*^9}, 
   3.651875860855275*^9, 3.651875899280648*^9, 3.6518759507780657`*^9, {
   3.651877409518498*^9, 3.6518774110223103`*^9}, {3.651877453363883*^9, 
   3.6518774724744577`*^9}, 3.651877556427269*^9, 3.651877643916594*^9, 
   3.6518780931946583`*^9, {3.651878131772794*^9, 3.651878133269847*^9}, 
   3.651878165956009*^9, 3.6518790646161757`*^9, 3.6518791118160048`*^9, 
   3.651879630653739*^9, 3.6518797608581963`*^9, 3.651879795868375*^9}],

Cell[BoxData["0.917`"], "Output",
 CellChangeTimes->{
  3.65170254051259*^9, 3.651702687009797*^9, 3.651703786676063*^9, {
   3.651704025982901*^9, 3.651704066623074*^9}, 3.651704112539016*^9, 
   3.651704148787171*^9, 3.651869372291177*^9, 3.651872410105484*^9, 
   3.6518736460164967`*^9, 3.6518740824178333`*^9, {3.65187568631888*^9, 
   3.6518757382329817`*^9}, {3.6518757941437683`*^9, 3.6518758298472*^9}, 
   3.651875860855275*^9, 3.651875899280648*^9, 3.6518759507780657`*^9, {
   3.651877409518498*^9, 3.6518774110223103`*^9}, {3.651877453363883*^9, 
   3.6518774724744577`*^9}, 3.651877556427269*^9, 3.651877643916594*^9, 
   3.6518780931946583`*^9, {3.651878131772794*^9, 3.651878133269847*^9}, 
   3.651878165956009*^9, 3.6518790646161757`*^9, 3.6518791118160048`*^9, 
   3.651879630653739*^9, 3.6518797608581963`*^9, 3.651879795872581*^9}],

Cell[BoxData["0.4`"], "Output",
 CellChangeTimes->{
  3.65170254051259*^9, 3.651702687009797*^9, 3.651703786676063*^9, {
   3.651704025982901*^9, 3.651704066623074*^9}, 3.651704112539016*^9, 
   3.651704148787171*^9, 3.651869372291177*^9, 3.651872410105484*^9, 
   3.6518736460164967`*^9, 3.6518740824178333`*^9, {3.65187568631888*^9, 
   3.6518757382329817`*^9}, {3.6518757941437683`*^9, 3.6518758298472*^9}, 
   3.651875860855275*^9, 3.651875899280648*^9, 3.6518759507780657`*^9, {
   3.651877409518498*^9, 3.6518774110223103`*^9}, {3.651877453363883*^9, 
   3.6518774724744577`*^9}, 3.651877556427269*^9, 3.651877643916594*^9, 
   3.6518780931946583`*^9, {3.651878131772794*^9, 3.651878133269847*^9}, 
   3.651878165956009*^9, 3.6518790646161757`*^9, 3.6518791118160048`*^9, 
   3.651879630653739*^9, 3.6518797608581963`*^9, 3.6518797958770657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnc2", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"c2", "''"}], "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "I"}], " ", "alpha", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"beta", " ", "x"}], "]"}], " ", "cos2thetav"}], "+", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "beta"}], " ", 
          RowBox[{"Tan", "[", 
           RowBox[{"beta", " ", "x"}], "]"}]}], " ", "+", " ", "I"}], " ", 
        ")"}]}], ")"}], 
     RowBox[{
      RowBox[{"c2", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["I", "2"], "alpha", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"beta", " ", "x"}], "]"}], " ", "cos2thetav", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "beta"}], " ", 
           RowBox[{"Tan", "[", 
            RowBox[{"beta", " ", "x"}], "]"}]}], "+", "I"}], ")"}]}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", "alpha", ")"}], "^", "2"}], "4"], 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"beta", " ", "x"}], "]"}], "^", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"cos2thetav", "^", "2"}], "-", 
          RowBox[{"sin2thetav", "^", "2"}]}], ")"}]}]}], ")"}], 
     RowBox[{"c2", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.651697682240844*^9, 3.651697683258768*^9}, {
   3.6516977317658367`*^9, 3.651697761203959*^9}, 3.65169831568956*^9, {
   3.6516985377985563`*^9, 3.6516985928197813`*^9}, {3.6517004149035273`*^9, 
   3.651700495425906*^9}, {3.651700556579406*^9, 3.6517005761496*^9}, 
   3.65170103711668*^9, {3.6517010721095867`*^9, 3.651701083859085*^9}, {
   3.6517011341537933`*^9, 3.651701168320418*^9}, {3.65170121140842*^9, 
   3.6517012839571333`*^9}, {3.6517025089307404`*^9, 3.651702550157547*^9}, {
   3.6518694078393993`*^9, 3.651869520110353*^9}, {3.6518775469170113`*^9, 
   3.6518775472199917`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"c2", "[", "x", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.0017022225000000006`"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"0.1`", " ", "x"}], "]"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.020000000000000004`", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"0.1`", " ", "x"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", "-", 
         RowBox[{"0.1`", " ", 
          RowBox[{"Tan", "[", 
           RowBox[{"0.1`", " ", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.04000000000000001`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"0.1`", " ", "x"}], "]"}]}], "-", 
      RowBox[{"0.1`", " ", 
       RowBox[{"Tan", "[", 
        RowBox[{"0.1`", " ", "x"}], "]"}]}]}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["c2", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "-", 
   RowBox[{
    SuperscriptBox["c2", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",\

 CellChangeTimes->{
  3.6517004986181393`*^9, 3.651700579099596*^9, 3.65170128475031*^9, 
   3.651701365989749*^9, 3.651701685671187*^9, 3.651702551823393*^9, 
   3.651702687170761*^9, 3.651704028699114*^9, 3.6517040708039513`*^9, {
   3.6517041210754013`*^9, 3.6517041504681873`*^9}, 3.65186952516605*^9, 
   3.6518724103631897`*^9, 3.651873646289076*^9, 3.651874082718601*^9, {
   3.651875686407476*^9, 3.651875738286602*^9}, {3.651875794200485*^9, 
   3.651875829919408*^9}, 3.651875860911674*^9, 3.6518758993398933`*^9, 
   3.651875950838894*^9, 3.651877411076644*^9, {3.651877453425907*^9, 
   3.651877472531958*^9}, 3.651877556494706*^9, 3.6518776439698*^9, 
   3.651878093254807*^9, 3.651878133324802*^9, 3.6518781660189543`*^9, 
   3.6518790646713676`*^9, 3.651879111903243*^9, 3.6518796307077217`*^9, 
   3.65187976089686*^9, 3.651879795917542*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"endpoint", "=", "70"}]], "Input",
 CellChangeTimes->{{3.6518695760317574`*^9, 3.6518695788747177`*^9}, {
  3.651875827171212*^9, 3.651875858324161*^9}, {3.651877451291027*^9, 
  3.651877470475954*^9}, {3.651877639847381*^9, 3.651877641767376*^9}, {
  3.651879794024835*^9, 3.6518797942544737`*^9}}],

Cell[BoxData["70"], "Output",
 CellChangeTimes->{
  3.651869579713935*^9, 3.651872410398405*^9, 3.651873646308717*^9, 
   3.651874082746769*^9, 3.651874680234725*^9, {3.65187568645341*^9, 
   3.651875738318201*^9}, {3.65187579422289*^9, 3.6518758609544277`*^9}, 
   3.6518758993828287`*^9, 3.651875950876503*^9, 3.6518774110963383`*^9, {
   3.651877453458487*^9, 3.6518774725756807`*^9}, 3.651877556541849*^9, 
   3.651877644012405*^9, 3.6518780932878733`*^9, 3.651878133355959*^9, 
   3.651878166054595*^9, 3.651879064704039*^9, 3.6518791119301577`*^9, 
   3.651879630732174*^9, 3.651879760946612*^9, 3.6518797959402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solc2", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqnc2", ",", 
      RowBox[{
       RowBox[{"c2", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"c2", "'"}], "[", "0", "]"}], "==", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "I"}], "2"], "alpha", " ", "sin2thetav"}]}]}], "}"}], 
    ",", "c2", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.651701669875955*^9, 3.651701761872656*^9}, {
   3.651702600870099*^9, 3.6517026258842783`*^9}, 3.651702662241055*^9, 
   3.6517027002840767`*^9, {3.651702730723078*^9, 3.651702731831419*^9}, {
   3.651869538040636*^9, 3.6518695739712343`*^9}, {3.651869691448113*^9, 
   3.6518696941906357`*^9}, {3.651874559998556*^9, 3.651874560188902*^9}, {
   3.651877554292036*^9, 3.651877554715434*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c2", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "70.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "70.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 70.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.65170263028594*^9, {3.651702663334077*^9, 3.651702701696961*^9}, {
   3.651702732325796*^9, 3.651702753510108*^9}, 3.6517040307715178`*^9, 
   3.651704071518235*^9, 3.65170412488864*^9, {3.651869528624008*^9, 
   3.651869580574628*^9}, 3.651869695623107*^9, 3.651872410512622*^9, 
   3.651873646360627*^9, 3.651874082863398*^9, 3.6518745656753883`*^9, 
   3.6518746818823357`*^9, {3.651875686515353*^9, 3.6518757383479853`*^9}, {
   3.651875794274317*^9, 3.651875830046245*^9}, 3.651875861090208*^9, 
   3.651875899466221*^9, 3.6518759510118437`*^9, 3.651877411672914*^9, {
   3.651877453569786*^9, 3.6518774726593924`*^9}, 3.651877556638283*^9, 
   3.6518776440735083`*^9, 3.651878093377468*^9, 3.651878133434751*^9, 
   3.651878166156494*^9, 3.6518790647733*^9, 3.651879111996625*^9, 
   3.651879630788824*^9, 3.651879761009163*^9, 3.651879795998477*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2Fun", "=", 
  RowBox[{"First", "[", 
   RowBox[{"c2", "/.", "solc2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6518745235383463`*^9, 3.651874563156568*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "70.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "70.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0., 70.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.651874539169526*^9, 3.651874567564707*^9}, 
   3.6518746828545227`*^9, 3.651874951915275*^9, {3.651875686554903*^9, 
   3.65187573838456*^9}, {3.651875794314642*^9, 3.651875830097127*^9}, 
   3.651875861140029*^9, 3.6518758995029087`*^9, 3.651875951044609*^9, 
   3.651877411710281*^9, {3.65187745361237*^9, 3.651877472693272*^9}, 
   3.651877556671228*^9, 3.651877644114944*^9, 3.651878093413458*^9, 
   3.651878133465145*^9, 3.651878166194397*^9, 3.6518790648122807`*^9, 
   3.651879112057189*^9, 3.651879630819965*^9, 3.651879761062358*^9, 
   3.651879796042055*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eqnc1", "=", 
  RowBox[{
   RowBox[{"I", " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"c1", "[", "x", "]"}], ",", "x"}], "]"}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"alpha", " ", "cos2thetav", " ", 
     RowBox[{"c1", "[", "x", "]"}], 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"beta", " ", "x"}], "]"}], "/", "2"}]}], "+", 
    RowBox[{"alpha", " ", "sin2thetav", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"beta", " ", "x"}], "]"}], 
     RowBox[{"c2Fun", "[", "x", "]"}], 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "alpha", " ", "x"}], "]"}], "/", 
      "2"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"solc1", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqnc1", ",", 
      RowBox[{
       RowBox[{"c1", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", "c1", 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.65187455407309*^9, 3.651874672695148*^9}, {
  3.651874713578895*^9, 3.651874732697112*^9}, {3.651874789896447*^9, 
  3.651874812548943*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    SuperscriptBox["c1", "\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"0.020000000000000004`", " ", 
    RowBox[{"c1", "[", "x", "]"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
   RowBox[{"0.04585`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "-", 
        RowBox[{"0.1`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "x"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"0.1`", " ", "x"}], "]"}], " ", 
    RowBox[{
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "70.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "70.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 70.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "[", "x", "]"}]}]}]}]], "Output",
 CellChangeTimes->{
  3.651874676962138*^9, {3.651874714748561*^9, 3.65187473378752*^9}, {
   3.651874792130228*^9, 3.6518748132298594`*^9}, 3.651874953024456*^9, {
   3.651875686602487*^9, 3.651875738430442*^9}, {3.6518757943532753`*^9, 
   3.651875830146429*^9}, 3.6518758611838493`*^9, 3.651875899547361*^9, 
   3.65187595108325*^9, 3.651877411750084*^9, {3.651877453650972*^9, 
   3.65187747273974*^9}, 3.651877556722322*^9, 3.651877644156848*^9, 
   3.6518780934641857`*^9, 3.65187813350167*^9, 3.651878166238266*^9, 
   3.65187906485979*^9, 3.651879112108721*^9, 3.6518796308731117`*^9, 
   3.651879761127857*^9, 3.65187979609529*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c1", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "70.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "70.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 70.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.651874676962138*^9, {3.651874714748561*^9, 3.65187473378752*^9}, {
   3.651874792130228*^9, 3.6518748132298594`*^9}, 3.651874953024456*^9, {
   3.651875686602487*^9, 3.651875738430442*^9}, {3.6518757943532753`*^9, 
   3.651875830146429*^9}, 3.6518758611838493`*^9, 3.651875899547361*^9, 
   3.65187595108325*^9, 3.651877411750084*^9, {3.651877453650972*^9, 
   3.65187747273974*^9}, 3.651877556722322*^9, 3.651877644156848*^9, 
   3.6518780934641857`*^9, 3.65187813350167*^9, 3.651878166238266*^9, 
   3.65187906485979*^9, 3.651879112108721*^9, 3.6518796308731117`*^9, 
   3.651879761127857*^9, 3.651879796113179*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rwaNorm", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
       RowBox[{"Abs", "[", 
        RowBox[{"c2Fun", "[", "x", "]"}], "]"}]}], "/.", 
      RowBox[{"solc1", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.65187481743604*^9, 3.651874887380866*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwUl3c81V8Yx61syaaQvde193lcq1JCFCmR7EhJGYVQRiUlEqKkJERCJaSS
kFF2MqKtuN87EIXf+f3l9X59r3Oe5/PMI3vwiIsfCxMTUzU7E9P/fzu1cr7e
X3xsObI5W4CJiUDbezN2bf+XjZikn8hysBFIhs3kkOS/O2iMP12Cl5NA6dIZ
h9n+1aEGbnsh/g0Eel7+JPzP39doHIxa5zcTyIPWfYz2dxB9rzFPUEcEups9
EkH5+xWxzF96cCSGQGFV8cM95d9Q7veA139OE8igQ8nsged3JLM/mHTqDIFa
/x1nCX32AxUclS47mkqgz74Cl2difqEd9RdShXMItEFCcZh2ikDJeVoPlKoJ
xLjzJ3V6gEBdfIZntj0i0Ihul2mfBhUxW17eEVBPoKLtEYUPx6hIcqYi+Xwj
gbQSXviFm9ORmMOY96l2Au34vp8x+3ceeR7fd5GYIFDCI35Da88F9Aaybw1M
Eagm/sXJ3IYF9IN/TKfqC4FExRX/kqMXkfKm4hP2MwSa2PKbOXfhD6qVja5g
mcf2iRRaz7otIYOW2ZLcRQKRp3aeJdctoZ/0pAyFZaxH9CPO2YhlJHqpbFFq
DetxP4afTP2Ltl9WTs3mpKKbJzScrzn9Q2x5H0I/cFNRH3niyu+qf8hly5t+
QT4qMvxoJXotbAXt8cmZ8xOgojUeLqnfv1YR90i3+AUJKtIdafCyclhDZGdK
fcwmKjpUcvhmzv01ZJvNiPWSwiz94/JNfSbImap2WydLRe31DiIOdCb47Gyx
s1eZiqYKFOrn5Zih+9FZDX9VKlpOXNl904UZFrnos1Q1KtLYWZU7/5AZuC3q
WH9oUpGtQarJzSlmiDxjvN1Fm4q8NvmMbhNggc2/j3g/1KGizO+CkjfDWYAr
eWVghx4VlXX/atx2kwVaLVnVz+tT0ctHrfvne1nAbk3auMmAihjxJ4q2abPC
2rXNgWtGVMTnvxPmvVjB/cTBZH4TKlLarjJVlMEKupzF24RNqchdfFRufpYV
2rSOdPw1o6KjqzWviqTYIE5jLHbCnIrSv5w/tG0HG1ytY+mus6Ci252H1s2f
YgPJz6sNZyypqLHa4m5RBRt41HnZkBEVDeaI2m8bYwMub+nARcxzpyjfGTzr
gP9OueItoCKZrbdUt4Wsg8vk/WF9VlRkoh3TychbBzRy37IHmYpcRHaFFHWu
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
axoH
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.96},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6518748947476797`*^9, {3.65187494299632*^9, 3.651874954295637*^9}, {
   3.651875686701466*^9, 3.651875738518586*^9}, {3.651875794458473*^9, 
   3.651875830261917*^9}, 3.6518758613425426`*^9, 3.651875899678465*^9, 
   3.651875951263278*^9, {3.6518774302349977`*^9, 3.651877473022575*^9}, 
   3.651877556977426*^9, 3.651877644269465*^9, 3.651878093755621*^9, 
   3.65187813375266*^9, 3.651878176099519*^9, 3.651879065016255*^9, 
   3.651879112267756*^9, 3.651879630992545*^9, 3.651879761249596*^9, 
   3.651879796213106*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rwaP", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"c2Fun", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
          RowBox[{"Abs", "[", 
           RowBox[{"c2Fun", "[", "x", "]"}], "]"}]}], "/.", 
         RowBox[{"solc1", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
      RowBox[{"solc1", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.651877392965817*^9, 3.651877393720688*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
jFDQ2szPg3XqMxODzqqo4Kp3VNwhH5hVY9WrQlRx/9xr+hMPCsAwo+jv8QpV
HPaVWK0PKwYzt7IXznWqePNt0/tzI8VgI1fVYtuiior3TTquM5eA20Cjh2Gv
Kv7sw9azziVwbrN3UPSZKs7KCFmUrpdAXH9/Mf+MKqaxVj2O4iqFpJSBMPYF
VXycTC9dpVUKWWKjMtRLqnhefNfKSFQptNm+SlukVkNzlTjJPzulcFPo9cmZ
3WrYc/ic9ThfGfQvLeIEixpKHGKvndAog8cJX9bv8qvhnvht2yMBZfDMavnR
TWE1pOzlrnieXAYzAusVrZJqeNYiiftseRl86ti2L1VRww3PKzmcz8pgJfaP
Yq6WGrofW73A8rUMvptT7r4KaogRMvYilOVA856+J9ZMDbnobAuTZcqBsZUp
I8xaDRNU5+de6pUDW9Rev0AHNfRwcMvUtiqH/Zw8+9081dBezO6QRFA5/M3a
otP1VsPmc3+unjxfDvM8k6vcAWrk58lOf8+Vcrid1/JyI0QNv3xMLBMuLIcC
gbR7TyLUcDe/p2BObTmcK/Ktr49VwzzbvRr7OsvhqNDBjMSLavitR5Gj/U45
aJVJRHmmqGHsysufdsPlwCNG4wXX1PBp/20T2oly+FH55hB/jhrOFxxIvP+y
HKYk72j8KCTXIzHlkLpQDl21BUKT5WrokLAa5fmhHDJlI3Y316rh3JWLc0Zf
yyGk0WH9UjPZb3fNc6or5WCrqPbKq1MNZV9uRymul4NKK9sAqUcNxWomlDU2
yX6orDbsu6uGB3bW6c23ymGt43Hmr0E1bOe8k+5P5nH1+uipUTWs8P58rpi8
vqU76WTbhBrGFGQUvibnu6LtZZU2rYYNd2O+KK6Wg3+vgZbPvBrWeuqEX10q
h0NEYRHjd2r4XskzbtencpDv/8sg8kUNW3Qy3VIXy4GJNLvxZ0UNVelU02Vm
y+Hr/ZuzL7fUMG78VPP8s3IYMcp+0PlbDbWE12PqR8uh7mFI01VKdYzMIHy5
dr8ckg/aZPvRqeN1Fa3trJvlcOqRYuxBZnUk+e6fudlUDiYWzN7i7OrI95F7
9k9ZOdBaD2nP7VPHMfVCqY2kcng/USl6U0wdQ9x8b9ZGlMOAbTxTpow6dtuW
/bjsWw7xR4jz5urqGFjM9N9r03LwmOF/KKWrju0X5ugdtMqB5LzdTENSxwf7
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
lEuHiPuHlNDcv0s8pKBNtAc/G/4HFFPb3Q==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.65187740159571*^9, 3.6518774731633883`*^9}, 
   3.6518775571206913`*^9, 3.6518776443723497`*^9, 3.651878093995969*^9, 
   3.6518781338954773`*^9, 3.65187817634792*^9, 3.6518790651322117`*^9, 
   3.651879112372238*^9, 3.651879631101261*^9, 3.6518797613538427`*^9, 
   3.65187979631526*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"c2Fun", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
           RowBox[{"Abs", "[", 
            RowBox[{"c2Fun", "[", "x", "]"}], "]"}]}], "/.", 
          RowBox[{"solc1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
       RowBox[{"solc1", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"end", ",", "10", ",", "endpoint"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.651702739248687*^9, 3.651702766798761*^9}, {
  3.651702821198991*^9, 3.651702832949019*^9}, {3.651869566410227*^9, 
  3.651869569483645*^9}, {3.6518724344820547`*^9, 3.6518724363446493`*^9}, {
  3.651873139305637*^9, 3.651873139408257*^9}, {3.65187321129524*^9, 
  3.651873217909874*^9}, {3.65187325205184*^9, 3.651873252453226*^9}, {
  3.65187333278516*^9, 3.651873337869626*^9}, {3.651874890934033*^9, 
  3.651874937723721*^9}, {3.6518749726677237`*^9, 3.651874988057897*^9}, {
  3.651875038196115*^9, 3.651875039072668*^9}, {3.651875086174958*^9, 
  3.651875126608345*^9}, {3.6518773964886417`*^9, 3.651877397198079*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`end$$ = 10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`end$$], 10, 70}}, Typeset`size$$ = {
    576., {175., 180.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`end$170106$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`end$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`end$$, $CellContext`end$170106$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Evaluate[
         ReplaceAll[Abs[
             $CellContext`c2Fun[$CellContext`x]]^2/ReplaceAll[Abs[
              $CellContext`c1[$CellContext`x]]^2 + Abs[
             $CellContext`c2Fun[$CellContext`x]], 
           Part[$CellContext`solc1, 1]], 
          Part[$CellContext`solc1, 1]]], {$CellContext`x, 
         0, $CellContext`end$$}, PlotRange -> All, 
        ImageSize -> $CellContext`imgsize, Frame -> True], 
      "Specifications" :> {{$CellContext`end$$, 10, 70}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{621., {219., 224.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.651872436922068*^9, 3.651873139954661*^9, {3.651873212045541*^9, 
   3.65187321867515*^9}, 3.6518732528997793`*^9, 3.651873338626985*^9, 
   3.65187364641772*^9, 3.651874082942054*^9, {3.651874892137229*^9, 
   3.651874955873765*^9}, {3.651875028749198*^9, 3.651875039802292*^9}, {
   3.651875120445629*^9, 3.651875127321227*^9}, {3.6518756868055897`*^9, 
   3.651875738615409*^9}, {3.6518757945589647`*^9, 3.651875830372652*^9}, 
   3.6518758614523277`*^9, 3.651875899792644*^9, 3.651875951381056*^9, 
   3.651877341525351*^9, 3.6518773987294703`*^9, {3.6518774306028633`*^9, 
   3.651877473201518*^9}, 3.651877557172062*^9, 3.6518776444230633`*^9, 
   3.6518780941588373`*^9, 3.651878133936737*^9, 3.651878176456047*^9, 
   3.651879065183885*^9, 3.651879112424493*^9, 3.6518796311576223`*^9, 
   3.651879761432231*^9, 3.651879796362084*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equation Set", "Subsection",
 CellChangeTimes->{{3.6517035906758633`*^9, 3.6517035927465982`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnset", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"I", " ", 
     RowBox[{
      RowBox[{"c1", "'"}], "[", "x", "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"alpha", " ", "cos2thetav", " ", 
      RowBox[{"c1", "[", "x", "]"}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"beta", " ", "x"}], "]"}], "/", "2"}]}], "+", 
     RowBox[{"alpha", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"beta", " ", "x"}], "]"}], " ", "sin2thetav", " ", 
      RowBox[{"c2", "[", "x", "]"}], 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], " ", "x"}], "]"}], "/", "2"}]}]}]}], "&&", 
   RowBox[{
    RowBox[{"I", " ", 
     RowBox[{
      RowBox[{"c2", "'"}], "[", "x", "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"alpha", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"beta", " ", "x"}], "]"}], " ", "cos2thetav", " ", 
      RowBox[{
       RowBox[{"c2", "[", "x", "]"}], "/", "2"}]}], "+", 
     RowBox[{"alpha", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"beta", " ", "x"}], "]"}], " ", "sin2thetav", " ", 
      RowBox[{"c1", "[", "x", "]"}], " ", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"I", " ", "x"}], "]"}], "/", "2"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.65170363315174*^9, 3.651703765992786*^9}, {
  3.651873035258184*^9, 3.651873120609249*^9}, {3.651879105790434*^9, 
  3.651879109733287*^9}, {3.6518796217451563`*^9, 3.6518796253382483`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{
     SuperscriptBox["c1", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"0.020000000000000004`", " ", 
     RowBox[{"c1", "[", "x", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
    RowBox[{"0.04585`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], " ", 
     RowBox[{"c2", "[", "x", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"0.1`", " ", "x"}], "]"}]}]}]}], "&&", 
  RowBox[{
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{
     SuperscriptBox["c2", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"0.04585`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
     RowBox[{"c1", "[", "x", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
    RowBox[{"0.020000000000000004`", " ", 
     RowBox[{"c2", "[", "x", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"0.1`", " ", "x"}], "]"}]}]}]}]}]], "Output",
 CellChangeTimes->{{3.651703768151081*^9, 3.6517037909267607`*^9}, 
   3.651704037688219*^9, 3.651704078403369*^9, 3.65170413036025*^9, 
   3.651872410642411*^9, 3.651873122751027*^9, 3.651873646453508*^9, 
   3.65187408296667*^9, {3.6518756869472*^9, 3.6518757386637087`*^9}, {
   3.651875794607869*^9, 3.651875830424108*^9}, 3.65187586151195*^9, 
   3.651875899848645*^9, 3.65187595144556*^9, {3.651877430705411*^9, 
   3.651877473585339*^9}, 3.651877557536839*^9, 3.651877644524107*^9, 
   3.651878094196519*^9, 3.651878134336648*^9, 3.651878176488163*^9, 
   3.651879065299932*^9, 3.651879112844717*^9, {3.651879628508103*^9, 
   3.6518796312662163`*^9}, 3.6518797615456123`*^9, 3.651879796463687*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solset", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqnset", ",", 
      RowBox[{
       RowBox[{"c1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"c2", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c1", ",", "c2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "30"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.651703629593935*^9, 3.65170363166296*^9}, {
  3.651703796254949*^9, 3.651703819061659*^9}, {3.65170387601972*^9, 
  3.6517038887308483`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 30.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"c2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "30.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 30.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6517038206240063`*^9, {3.651703877374525*^9, 3.651703910198105*^9}, 
   3.651704038852901*^9, 3.6517040799510612`*^9, 3.65170413232728*^9, 
   3.651872410927121*^9, 3.651873123940754*^9, 3.651873646485496*^9, 
   3.6518740830055428`*^9, {3.651875686985478*^9, 3.6518757387004423`*^9}, {
   3.6518757946447144`*^9, 3.651875830461692*^9}, 3.651875861557068*^9, 
   3.651875899898264*^9, 3.651875951506109*^9, {3.651877430743676*^9, 
   3.651877473624024*^9}, 3.6518775575882587`*^9, 3.651877644561743*^9, 
   3.651878094244623*^9, 3.651878134382894*^9, 3.651878176529031*^9, 
   3.651879065355063*^9, 3.651879112919438*^9, 3.651879631315322*^9, 
   3.651879761927948*^9, 3.6518797965105743`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], ")"}]}], "/.", 
     "solset"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"c2", "[", "x", "]"}], "]"}], 
      RowBox[{
       RowBox[{"c2", "[", "x", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], ")"}]}]}], "/.",
      "solset"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], ")"}], "/.", 
     "solset"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.651703894650567*^9, 3.651703931609708*^9}, {
  3.651873159088519*^9, 3.651873169941535*^9}, {3.6518732058012037`*^9, 
  3.651873290718913*^9}, {3.6518733725058603`*^9, 3.651873391469708*^9}, {
  3.651873429936116*^9, 3.651873454636804*^9}, {3.6518736559480886`*^9, 
  3.651873674359665*^9}, {3.651873763106662*^9, 3.651873799623887*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwc2nc81d8bAHB7j5CVkb3ntbmcx94jmaFhZEXSQspomElDZGYlIRISSkZW
UVH42pTKvCKkot/x+/7T6/269/vxOec8z3Oec19H2POkvQ8FGRnZIBUZ2e6/
PQp3Zx9tPtMb+bf7HwlZvUs5aPU3DUVOtmxuYwtRaXnz/y1GglcDJzexre0c
bekvVqETay+eLWEnCqacoPpbiyIu/46ZxO5c7Ej4F9GIAvpnUC927HjUwe3I
V2gh8PlaHfZ9I/6ZCGIbCluF+9nYzWX1Ib/+vEbMW/Vml7An2B3/nW3sQvPW
Mytu2H/Df1xfi3iDApT/Zath75u+zn9Kuw/VMr09wIjNL5bmuBn5HlkOR+8d
3yGhMufP/HVjH5DmhaH5R9jaScpfzhAHkO0Y7egZbNfV3tDVP5+QfBCf2PY2
CX0X59d+4jaEOprfJzVih7kGkIc0DqOrPRsy57DvvqJJXYoYRR5qpoSpvyQk
/tPBuXxkDJ1vY6i4gV0jWSgYqD2BNlsOXNHB9u/Mc/oZOYXisrRD4/+QkNK0
ScOA3DS69IEiTxr71+8lgadj08hCOduh8zcJxSsQZ08RPyMbuoNJv7ZI6EHa
8GnSn1nUUMJ1W+UXCQVXRg31lX1FqjdpTjVskpBat4TOY7dvKHpSxEgPu/3v
GYqgxu/oS18Ure4GCX32Yrs5H7GAHoZadfH8JKE9vOJDq5Er6OF+wjEXEgn9
LP4VP/NxBdEyN0XVLZPQMOGtdr/cDySZVVHJjp1ndTr3ydgPxL/md+f1Igkp
RLf4hBDXUPnJm/Xc83j9v3n8XPqzjh7J3NmO+kJC0U9Z1Q3dNpBICn3x888k
VB3Vcj6jYQNR6t/LXp0hIS4e8T8G4ZuIm+nmquc0Xl+zRfKMjV9IVeuzPUzg
8T2KYDX48QeB6Bk62mEcH+fkDqTb/UWH/Z/LGg6RUL/BxK3Fyr/IIarXP3qQ
hNRH9bnSg7dRxX7I2/lIQv8Y6QUWF3ZQ7tifRaZ+Euqqs+S0XCODA8Z3DOLf
ktB0tljdugg5mD76HT7zhoR+x2473bcnB8W+dz4IW862MmP9CTmwlj6sJ+8h
odRv7Pz3QyhAyfrS+0edJFTau9BkcZ8CrvE2Cwtgtz5t91h/RwGzCXwfbnXg
+Yw6l2ehSAliUS5Z8a9JyIVnRGR9iRIC/ghT3m8joVM71W15AlSwEd3qqoid
+CXJ28KaClz8NjJaW0moqUr3QV45FcR2XmNdbyGhT3e5TC3GqECCJcL3DvZy
JOnbT0ZqGI9m+q6BLWSeL20RSA0nxKISk16RkJZiRM/PTGqo4pJ6qYNtz3kw
MK+HGl4MysFKMwkF/pFlsvhNDRmLr/eVYl+Zpqr4KU0DOyx1LsexczrHrfNc
aUCQzYJaCruuom7ZPIEGlO6zyC2/JKH3t2/c+FlPAxdP0H+sx54L91PK+04D
KfMnyeKx7Z0uyQpz0gLX1YPRh7GbCHckCvVpgePezIYmtjjrI2HxYFro1x70
5cZOWWjmL8mkBaVnNkNbL3A+dH7ilu6khaaxAfMp7GNFC+xla7Qw3ebQ3oPd
E03OIi9EBwEZgZbPsVU9uOkrreigcXhrogw7V0ueSjmcDmZO771YgE3LZfiv
upgOYo4oieVgh6y6/FbtpwOuUxIDWdgjfcHrdTt0kFyumpCLbVR2ZUVTlh7U
OP4ZF2NXxGUuNDjTg9XaDfoqbC7vqq/EK/Qw+8z540vsaOiYfllFD7FDWg8+
YM/zj43BOD2MEiwivmMf3Pox1ErPANuUmhaUu/PxiXbASJ0BxA5z7BHBlqgW
6OvwZIAAW9sOI+zUFJVusxsMQCS0+QZibwWYt/c0MsBEdBkpDdvT9Eiz1XcG
eCPzyLUd+63o2Ya+vYxAdqIjfwNbnSyp1k6fEfJrUJscXr+8sftV/UGMsKhz
v2Z3fUPT3j4Y7MCufDA+iz12aibfZY0RFv6LI5fF8WJs8yt7ZD8TXBjo7j2N
zUMrdnsijAnY3isT9+B4i/2slXK0mAlqR2p6vbAXmm0TZj4wQZ7H4pcG7Jdh
F6K+yjDDnFpV0Gkcz97z/YHLY8wQZcfqz9ROQn0d34+H0LOAtw2xIgJbo3Dn
2KoaC4gyhrEsYjO4y7hspLBA++bG6hDOn6reGKMdYAXnl12H+3G+7XuUjqKD
WOHvv9pe5y4SunytQpsikxVsBhyHJrGd0H9KNGuskC89FLnZTUKXXDJY4uz3
wB33fj1DnP9iPaTfKVRswORsFKXzgYQabkxrHN3HBnVDseMT2HaOA2eUldhg
2Nwp6zKuH5FTdcsDbmyQ9gk+vx/A+bhxcYbnKRts2Dw4F4brzzVRpp6CY+xw
J9ihan4U7z9z2zRnzrNDaXXn08wxXP8ekwyNr7ODl1jEoMU4rndaAy++1ePv
d87JleF6p26X+URuDwewpCVu++N6+C1S6l7dSw5g+kN5r+8rfn+DfYNxHzng
gMjDI+e/kdBeOiYO13kOoBY0Z93/nYTgNin5D+de0H+cNBEwR0IZpXXRELQX
TE1ojVYXcL0++fAF2+W9UGkj45yK63e7aubvmQzswPwOuSUSWmm+eOZq+17Y
zJEOO4rrvdmgkV8PHycQOe66PVnB75ulXpylzAnc4kcS4AcJnTkmNXPClBNW
yL7c6cW+v8joznqaE1gonJimV3G8UgzYOvRwwqOc8zsLeL9J7WpPFp/iBOZr
1+75reN4T6nr3ljnhC+Z30pmsO15Mw3vCXOBul8+qQ/vV48Uj2lMhHEBy0bP
+jW83+29ajEcn8oFncbhyRvYF0dUwlUecgGxPfKlJ94f7a7SNMYPccFrgdAu
Jbx/NoyQ3FRIXLCHITbpFraY0n9/x2m4YUBE6tUK9uZImZ6KOjeQeT5xLcD7
71GltMlxa24oTIyvWMfuuXopOt6HG87399gZ4/07V+lA6/gdbvA8U+L/Hzbd
NW2v+HJu6B3/MCCA+4FTo6JUKu3cQBN1/+xhbKNrG8bxa9zwYq+1zUfsx6OT
XwmMPPBtwvMiPe43eJS748ZFeGBp+cZHbezYa9VS8do8EGAjcMAPe2E0q5tg
zwPtcb0rN7EdlK8GjPvzgJPr2JNn2C+vBTPGx/DAw8P7bv+HLTXmXE64xwON
fMV3NrFvKetbj1fxwKdF+2dsu/3SNZnluC4e+LvX668kts8Yxw3CFA9cFYzx
0cbuU95WHN/kgfHHnT/NsDXjvr6PY+WFE72t5QexC8benSJI8sLtnFOph7CZ
CM/Zx/V4oSrJtNAD+1xcwdM4J15QW5Kbc8eeHEtyIATzQjNH1HEXbDPC2fWx
q7ywdJtbyA67Ou7w3bgcXmAMHeAz2u3Xxk01CLW8UMsbfFQV+xpBeXjsLS/E
B9CuC2GvxO0Lj/vCC9vBYtP02K7jlPsIf3nhYWi1HAmPt5Ww1DDGsQ/CUumn
3mPLxQ+6xcnugz/1y5SV2HfHm/8qG+6DDKW0/ARsMpXSnLFD+6D3al7rUeyA
+Ft6caH7IPrf/lOq2APjFyaVE/fBwcsZz6iwiSo+0WP5+0CqUzX/A17PB/E2
wnHP90EpYVYrCztCRdhr7Ps+CNiIKRXD/hLPQBVHxgfUbCP3vuB4sZ5YK1Lm
4YNwV7ET+dhCCR1fr5nywaOomiU27MSJyjjlI3xwk/zm89c4/n6q3JMaO8cH
djQ37p/D7pwIDFB+wAevNyq33+H4VVJ1ZBx7wQeOvju3w7AzE/TKr33ig1eI
6aogdrAq2/IoFT8MVP+t382PvYl1p6558UMYlbFpH+4PHxx62Zwdzg+DW56v
ArA1ZTuYn97gh5/uLD7U2O5vP5VONvJDtQBTiBrOx0KW9WnNvQKQkKlgFIvz
mXBbxX6hXQA+Tpe+HsP1wS67imAnsR8kcoUbGXD9mTlRH32cuB9cXFRtknF9
OqP7qi/Sfj8ctgrmZ8HOmHgXUHppP8hYvnnEjuvZpBCpgGJoP7RvEY8Iz5LQ
s/67CSOGQhA0dkrVC9dDssbMqlkbIXDo5vpBmsLxVJg7tOIqBGyNv8cvYo+c
fiBOGyIEkdwnruRMktDO3roWlWwhYGbKvreE662J86et5J9CsD+ofX1khITC
aT/1XyEThquxLCbh2OXPPpZFMgnDnD/vF15sNp6PHifEhMGM46uy5384n7sG
1L2VhCGzIHWNHvtc2ACrO1EY3lbXSNXg/nRsuL/F0kEYbvVWcezBZk3ozzQ8
KgybFWbjLbhfNdDqP61zQhh8DMf1z2GX3PsgLntFGE4NW9F8w/vHiPmHHZFU
YUicG7hQiM30+/3QvmxhOCNHX+OJHXrofQJDjTCM7V+6MPeJhIoZ3ntSvBKG
duk4jifYww3vdH6/EQYOgdGLF7AZAt/tXR0ShnKy481m2Lp875bmPgvDfqnJ
MR7skDd9HdMkYXhB0hpdwP1ywYW+vP/+CAPvvpLmFmy6sd4D3RwiYMNSY3cO
Wzu5V6ZlvwjcIqnQOmIHEXspn8uKQAyLX7X6x936/3asSkMEDMS/2/Fh92e/
rX1oKAJPn4dPU2BTW79NuW8rAhZ0HF5LeP/U3H7jm+EmAp/Sxj+OYAdUvIFU
X2xfTfU32Dkeb3jjT4tAw+fn115iv2d+sxoVJQIzDsodNdgUL3venE8SgWDe
hz8rsNWCe4pOpovA1FlP9kfYfoI9F30LRcD5s//+UuzMvm6nI5Ui0Ctyh7sM
u/dSt6Jzowho8tz8WYlNpthNZ9spAo1tGlXPsAmTXdMmAyIg7ZFk1Irtc6Or
QW9SBNQ3X5S9w85AXbfVF0TgdR9hahK7h9R5QmFTBA6YRI+tYm/ndRpLUIpC
wfVTWXR4/Ep2nYKCrKKQuk7LI4ztSda5ycknCpQrF6yJ2GlVHe+ZJUXhs5iq
xiHsrqMdpdQqoiDPZNwXgf1nT0fstp4otDAfocvFVmh57bZugZ93XGK0Dfu2
8GvmWU9ROHOSV4Qbr2/Hh/avY8GiQHx6NNYI+1dMe/PHCFGw+Jp68Az24Zm2
U+23RKFe7YfIKPbNW20WTbmiYEtoY2HH8dZu0CZa80gUno+0mVhiSxe2fips
FQUtm5en2rF/erVoXV4VBV9ZNfQex/Nw1BmC4Y4ofJW4OcmF478xS1KWkkEM
Fk55OR7Bjh24zn9ZWAxOWAjfWt/ND8ND/2LtxGCy25lKHeebjMhae+xjMdDS
9X7+G/dLLHoPXhg0iIE0Ncpywfn7w9W1jqJDDOIm+C8+w66/2VwSOy4GF/kn
KMNw/2RMnpwYyyQOIk5fwylwPTg6JWYXGyAOA5Syzkr4/Gn0d8jM4Jw4yF10
s0/HluRJ0qeIFYev+T3eO9jLtj8IsffE4VmLW/pbfH690PyCM7ZLHEQDblT7
4v7rbq7TaIyEBMy8D5S4jutbRAP9R32CBLBNe1qRsD0Gm96S60nABYsfz+3w
eViMRfRljKMEZFtT67Lh/qv6Iul+zBUJsOC+9jAO91+97vHHY2YkwDakxUcf
n7+N6nrUzi9JQOMvytLr2E2szNRBv7C5G9uGsctabxa6sEgCZ9iIfyCutwlS
WVOK2pKgue/elxjcf5HFjleKG0tCq/gXm3bssNH9UXx2kkDtQuVLjfsx35Qi
AdrjkuDe53P9Mrbxz4pDEzclwednrd7JNfz3rFekP2ZLQoiAa9EDbNUSwlZ3
iSTsJa5kjWGLHnqWXvtCEihuRmkY4fqf+XTreFkXfv6Bz4NnsdmZier5A5IQ
W87xrxib/NWrj8lzkqBqdXaaHPd3YbyURbE/JWGhuihdHnsl1Ph02D9JEKRG
75yxJ8V72Lw5peBW5r62EmynKKZpVyEpcMibjOrF7hu2qbKVlQJn4trLH9gv
kgZsdPSl4Pij5Ne7+5PqLKegspUUrJhvXnfELtdzWZJwlgKuqgsjp7Gzfowl
sQdJQaEWoijHZrfc70YXJgUz1uMTr7ETi47J7MRKgd5KgsEEdrjz1665DCk4
xpj/kAHvhytVUhmThVLwXfh6lSC2H0Og76fHUrBDFLBQxp7yqlB/81wKRJIk
wwywnV+QqFvapaD/bLKuPXYfF+FT3TspcDmlkXMU2yTkTFH5iBSM1O/PDMJ+
2V13umBWCjI3zDTCd3/PEd0yyFiRgivDbecvY5dH6rCn/JGC36mPDydjiw1e
nL5MIw3ar4mk29jZiq+qwtmkQd8qVD4TmyOBIvokvzTI6zEK5mEnzhjZ+khK
Q0xtz+sCbApinKAbQRoaL4VLF2NHpHUv2elKQxz1N+sH2D+WGV+YmEmDi9K8
xq79zGySiQelwVnGc7Fod7z5qW6Ew9KQy6cRsvs8lz/9MlL+0vD+3aGuXOx3
Dpy/Bc5IA6Vl99a93fE+du7miJKGDasE+ju746XNzKBPlIbC1vK/u+NRPzbm
+++ONGjq3x2+gl3RIKixnicNRr2ehRewWcbc64fKpOG8Uk94CHbIdqZWwzNp
uJLJJOiN/UHwv4bsNmnIEtlJd8ImADcx6p00JI6Hk0yx7xxzfHFsVBpm/3jK
aWKvx97WM/omDdf6ip0ksetfs+rT/5OGunH+2xTYvN+sWxcYZEBR6EjtMo6H
CLpkwz4uGeDXFJj9D1vXks7ktoIMSN3Iv1GB3fqezFLgsAxshdNRWGKLruq9
/ecvA1YtxTFK2Fc4LlrPnJWBs09fH+TENnXasi25LgM9rzzZx3E8vx394aD8
QgbczeVJPtiDX2cOG/PLAtpRK/LG+aRBJzwlKSULZAWOzobYGdJHjjGoyoLZ
yd+zwthuJ0a93lnKwrtP355O4Hyd+jHg53pBFi76P5pyxp7/2x4aNCILtpvs
X21w/lsKUv60/SoLZ8/YNipglyP9s4RVWfir4zzCgn0y9sX5TXo5WPTRZHqP
68lP2rrIGC05+Pfl6JgT9j/2kmtpGXLAqNZpFYHr0c9TZyYqCuVgoeJ0rSf2
/Ht99Y7HcnBarTzTEvtjytjsRrscdGgUzQpiP2JgN3b5IQclhE9lb3B9u+8/
mR3yVw70F+Pk6rHTusp/xtPKQ5rMuGoxdvQ106LnAvJw80HMZDS2E8VFSj4L
eTi0+P6JHrbVMQs3FUd5SM2ivqKIrf+K+6nlUXl4s+Q2LYQtd6naM/KcPPBl
7NGixhYej2q4EyMPZqvqyr/weZeLaM1ekYxdyFq1gE3++1vLeIE89Akb637E
3nCp5d2okAfyzQPm3diLz2JPsTyXh7ySU0MvsQfPCgijd/LwIVf5bBn224/z
Yc4j8rBdwRJbgN2iUv/+5Kw8BC6fYsjELv9hH33/jzyIHFyMTcQusBMarqdR
gAq2xKDL2OmVS4of2BTgfGVjVyR2Mktj3Bw//vxS481z2LFB8ZPkUgpQmvfq
dQj2+beOGvtUFGCf4r9jgdgnZEVvEPQU4GLQQ6/j2J6JK18tzBVgaXK+8xi2
89wLPS8HBdAIWE3ywLYyS7p74YgCPKRqK3fFNihxWb4doACFN5MlnLA1aCRM
ys8qgICH77o9tpzPWk57tAIQV05w2mGLtL9aH0tSgGMj1bHW2NyiKdbrdxWA
YdpCyxKbKdatmLlAAeKlDdXMsSmmpbbFKxTAyP1BqCn2L7ThoFevAMstF5aM
sZdy28qd2hTA+FBnvhH2zHYq1ck+BchcTEgy3P192v2we9x/CqDA3vLAALuv
UbYm74sCNKYcJuljt+3bYqwnKUDuZu/RXdeHd3i9/60AyjcvbQD24+Hbjd+p
FcGoY61s10UaxzjI2RRhcX9F5K7v3VUI5OVXBIKXhPeuU9b/tCpLKsLrh0Me
u77i0L3PgqAI54PVfHYd/vRuqKeuIrwpqDq762B2754IM0WweVSXuGvvU8oi
tw8qwurhJ3m7dn2/E152WBGs6Wmrdk2WFfUjyR//PQ7OZ7t+4EPmf+KMIjyu
ePD/z62UYqasohShWMIyY9erv8ld5BMVocF1yH/XGa9j3zGnKUJ6F7/wrvVS
KU2X8xRB7MHcc4T95dCVl32PFMF5jE5p14ni1OqVtYqQw2QQpYettHK14sYr
RfiY6FqouxvPDTTiIW8UYcV+TwYRO/JqXLbdoCLwb4m66uyutx3dXuVpRYi7
YzOjhd21LyGJbVER3haZKGrujn+WnnJ1QxFY+mt11LEZXIx158iU4BuDI6Uq
tscL6nBXGiUwEE6OVcauEumo6WZUgqzNwVoFbKr4aytabEogc/7xPdndeF0y
kXvEpQTpcfEyUtiP7Gn99vErARP5sLcY9vazzsJEYSUoy2AyFsK2E4if/C2h
BKc6b3Xy7ebvNzrnUWUliPisWsyGbW7dfctSQwlEfXi2GLGzqxP6GolKoGE9
NkWNTeK2YJAzUAIqx0mXf0s4Hy4ymGSbKsHbSNvDv7DTZnpimKyV4AQaWV7B
/m6a9CLSXgn8hWXp5rBT2JnUPDyU4G7iqzdD2NPn34b0eirByqbNqT5s1fHk
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
4d+nwdfK6JX+BIX1DVqV1z0a/gEJsrXs
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.651703918311019*^9, 3.651703932053656*^9}, 
   3.6517040396627007`*^9, 3.651704081161512*^9, 3.6517041335854807`*^9, 
   3.651872411358364*^9, 3.651873125869475*^9, {3.651873163832232*^9, 
   3.651873170330842*^9}, {3.6518732068255997`*^9, 3.6518732910820837`*^9}, {
   3.651873373077692*^9, 3.651873392214916*^9}, {3.651873430921401*^9, 
   3.651873455421863*^9}, {3.6518736465389757`*^9, 3.6518736622854023`*^9}, {
   3.651873769983837*^9, 3.651873800183313*^9}, 3.6518740831189613`*^9, {
   3.6518756871284723`*^9, 3.651875738830983*^9}, {3.651875794790938*^9, 
   3.651875830717083*^9}, 3.651875862036388*^9, 3.651875900085121*^9, 
   3.651875952103133*^9, {3.651877430868178*^9, 3.651877473776907*^9}, 
   3.651877557949098*^9, 3.6518776447054567`*^9, 3.6518780943836317`*^9, 
   3.651878134519122*^9, 3.651878176664443*^9, 3.6518790659290524`*^9, 
   3.651879113379498*^9, 3.651879631451777*^9, 3.651879762112755*^9, 
   3.651879796671688*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
ShjGDpnhE8mi4+LBVBi84x3RGGKGvQu6t9pDqSDEN2sVfcQMD1pc1HkZSYVr
Y1sYZ/PM8OxNt1zdJCrozH/THz9jhstJotJOyVToYeuPeHbeDM3C8y3DUqgw
Y3B28maJGT7Qnw0tSKWCeql4k3+VGXJ3mB5pO0aFZrJu5PtWMxw89fBpygkq
1O9pEyt9ZIYSyZqcbiepcEPDvM+t0wzzdeKpGqeoUEC/T3roqRnO//KpHc+j
wuGr4SNPhmj9zXN+EzhLBekPlfrV383wJ77vlCmmgkiv8nTATzMs8JQOnKAx
9527Z2WoZrhnTEHs/AUqrFMe/yhdouW/fGXwXwkVXktMlOZv0uqrFhO4V0qF
E958DHH85vicJYFzuJwK6ZYXbxGEzFFn5HRaRAUV4tWl3Kki5lixj5689RoV
DtGpNwRKmOOwy1gssZIKUGbl765kjlZVV4+evE6Fxan0PjQ2x/9ujnJ9q6aC
u9f82a1h5mh28QbHf3epYK2/EsIYYY4rLKtLsg1UIG5fN/sXZY6p7j0Xymgs
3sO6MhNvjm17NxXO3qPCR1UJ974Mc4yIfPzM/z4VgjdspXMumeOo/BefN020
/GNOa5Qr5sioyfnWpJmWv/7ASHy5OS6trlhU01jV3z8r8IY58p7+zJfQQoWF
5yk/LBrM8WWiUR9rGxUSS2vuMvebY06cpt6/R1QIOVJ/cmPAHNXz32bsf0wF
D4cHh36/MkfumqLft2hM2tIlOP36fxXWeThVXRcA8KsSGpBkKCRF5gwNRJ2l
uLPrXqJCk8iQKaIIIalEKZmV11CU4S2lFC+ZblyVSp8GopApOqIyRL7lz9+z
9jl77b3XXs/GeF2szYEakpjn1XaqvtsCdnbOGD2sJYkLpovMo/5YwMrDS2q3
80kipc31rZAWFWye9D5rFOD9iVq29pkOFSylll8XbSIJc93yY7F6VOCbVA1T
0SPh4hKym6nAqaSI1KDpaqUMbTMq5Gqu217ynCQmfOdV2e2mgqN19YdTL0mC
s7JwqYI9FSgb/1Luo3NrbR2/OFJB/mbKowE0V+b25FEnKvzx3/fOthnrrdxq
Y4QXFTx7imfVX5HE7oXXbxecoYLqpNGn8tckUfgvdcI3mgrWrLSgIfS8vSPU
zReoML+MX6rwhiSKC3b2PL1EhXeLNy0LQS/kDSq1plKBp1fptbmFJB6mb7lG
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
/wF2FGbz
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.651703918311019*^9, 3.651703932053656*^9}, 
   3.6517040396627007`*^9, 3.651704081161512*^9, 3.6517041335854807`*^9, 
   3.651872411358364*^9, 3.651873125869475*^9, {3.651873163832232*^9, 
   3.651873170330842*^9}, {3.6518732068255997`*^9, 3.6518732910820837`*^9}, {
   3.651873373077692*^9, 3.651873392214916*^9}, {3.651873430921401*^9, 
   3.651873455421863*^9}, {3.6518736465389757`*^9, 3.6518736622854023`*^9}, {
   3.651873769983837*^9, 3.651873800183313*^9}, 3.6518740831189613`*^9, {
   3.6518756871284723`*^9, 3.651875738830983*^9}, {3.651875794790938*^9, 
   3.651875830717083*^9}, 3.651875862036388*^9, 3.651875900085121*^9, 
   3.651875952103133*^9, {3.651877430868178*^9, 3.651877473776907*^9}, 
   3.651877557949098*^9, 3.6518776447054567`*^9, 3.6518780943836317`*^9, 
   3.651878134519122*^9, 3.651878176664443*^9, 3.6518790659290524`*^9, 
   3.651879113379498*^9, 3.651879631451777*^9, 3.651879762112755*^9, 
   3.6518797968100023`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
9TIfw0iQY+rvcRvwL2nawrzLx/gfV2CZOg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.651703918311019*^9, 3.651703932053656*^9}, 
   3.6517040396627007`*^9, 3.651704081161512*^9, 3.6517041335854807`*^9, 
   3.651872411358364*^9, 3.651873125869475*^9, {3.651873163832232*^9, 
   3.651873170330842*^9}, {3.6518732068255997`*^9, 3.6518732910820837`*^9}, {
   3.651873373077692*^9, 3.651873392214916*^9}, {3.651873430921401*^9, 
   3.651873455421863*^9}, {3.6518736465389757`*^9, 3.6518736622854023`*^9}, {
   3.651873769983837*^9, 3.651873800183313*^9}, 3.6518740831189613`*^9, {
   3.6518756871284723`*^9, 3.651875738830983*^9}, {3.651875794790938*^9, 
   3.651875830717083*^9}, 3.651875862036388*^9, 3.651875900085121*^9, 
   3.651875952103133*^9, {3.651877430868178*^9, 3.651877473776907*^9}, 
   3.651877557949098*^9, 3.6518776447054567`*^9, 3.6518780943836317`*^9, 
   3.651878134519122*^9, 3.651878176664443*^9, 3.6518790659290524`*^9, 
   3.651879113379498*^9, 3.651879631451777*^9, 3.651879762112755*^9, 
   3.6518797970281267`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], ")"}]}], 
            "/.", "solset"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(C\), \(1\)]\)\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Conjugate", "[", 
              RowBox[{"c2", "[", "x", "]"}], "]"}], 
             RowBox[{
              RowBox[{"c2", "[", "x", "]"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], 
               ")"}]}]}], "/.", "solset"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(C\), \(2\)]\)\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}]}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], ")"}], "/.",
             "solset"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Normalization\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)+|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}], ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], 
                ")"}]}], "/.", "solset"}], "]"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Conjugate", "[", 
                RowBox[{"c2", "[", "x", "]"}], "]"}], 
               RowBox[{
                RowBox[{"c2", "[", "x", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], 
                 ")"}]}]}], "/.", "solset"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Merged\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\) and |\!\(\*SubscriptBox[\(C\), \
\(2\)]\)\!\(\*SuperscriptBox[\(|\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}]}], 
       "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"end", ",", "endpoint", ",", "\"\<Range\>\""}], "}"}], ",", 
     "10", ",", "endpoint", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.651873677667712*^9, 3.6518737101083527`*^9}, {
  3.651873816597395*^9, 3.651873925158081*^9}, {3.651873968091967*^9, 
  3.651874056802374*^9}, {3.65187411143363*^9, 3.651874173690435*^9}, {
  3.6518750042536287`*^9, 3.651875009765687*^9}, {3.651875100426676*^9, 
  3.651875101669065*^9}, {3.651875169774579*^9, 3.6518754042555723`*^9}, {
  3.6518754393727417`*^9, 3.651875462206348*^9}, {3.651875497467214*^9, 
  3.651875514630959*^9}, {3.651875595526626*^9, 3.6518755956835527`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`end$$ = 70, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`end$$], 70, "Range"}, 10, 70, 1}}, Typeset`size$$ = {
    1161., {375.634033203125, 381.365966796875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`end$170237$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`end$$ = 70}, 
      "ControllerVariables" :> {
        Hold[$CellContext`end$$, $CellContext`end$170237$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          Plot[
           Evaluate[
            ReplaceAll[Abs[
                $CellContext`c1[$CellContext`x]]^2/(Abs[
                $CellContext`c1[$CellContext`x]]^2 + Abs[
                $CellContext`c2[$CellContext`x]]^2), $CellContext`solset]], \
{$CellContext`x, 0, $CellContext`end$$}, PlotRange -> All, 
           ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "\!\(\*SubscriptBox[\(C\), \(1\)]\)", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding], 
          Plot[
           Evaluate[
            ReplaceAll[Conjugate[
               $CellContext`c2[$CellContext`x]] \
($CellContext`c2[$CellContext`x]/(Abs[
                 $CellContext`c1[$CellContext`x]]^2 + Abs[
                 $CellContext`c2[$CellContext`x]]^2)), $CellContext`solset]], \
{$CellContext`x, 0, $CellContext`end$$}, PlotRange -> All, 
           ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "\!\(\*SubscriptBox[\(C\), \(2\)]\)", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding]}, {
          Plot[
           Evaluate[
            ReplaceAll[Abs[
                $CellContext`c1[$CellContext`x]]^2 + Abs[
                $CellContext`c2[$CellContext`x]]^2, $CellContext`solset]], \
{$CellContext`x, 0, $CellContext`end$$}, PlotRange -> All, 
           ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "Normalization", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)+|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding], 
          Plot[{
            Evaluate[
             ReplaceAll[Abs[
                 $CellContext`c1[$CellContext`x]]^2/(Abs[
                 $CellContext`c1[$CellContext`x]]^2 + Abs[
                 $CellContext`c2[$CellContext`x]]^2), $CellContext`solset]], 
            Evaluate[
             ReplaceAll[Conjugate[
                $CellContext`c2[$CellContext`x]] \
($CellContext`c2[$CellContext`x]/(Abs[
                  $CellContext`c1[$CellContext`x]]^2 + Abs[
                  $CellContext`c2[$CellContext`x]]^2)), \
$CellContext`solset]]}, {$CellContext`x, 0, $CellContext`end$$}, PlotRange -> 
           All, ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "Merged", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(1\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\) and |\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding]}}], 
      "Specifications" :> {{{$CellContext`end$$, 70, "Range"}, 10, 70, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1206., {421., 426.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6518737136281977`*^9, {3.6518738305331297`*^9, 3.6518739258027153`*^9}, 
   3.65187399497318*^9, {3.6518740279941883`*^9, 3.651874137226309*^9}, 
   3.651874174480114*^9, 3.651875010374404*^9, 3.651875153197109*^9, {
   3.6518751847054043`*^9, 3.651875424620829*^9}, {3.651875462795136*^9, 
   3.6518754857914543`*^9}, 3.6518755162695293`*^9, {3.651875573040164*^9, 
   3.651875597275037*^9}, {3.651875687767758*^9, 3.65187573956141*^9}, {
   3.651875795357263*^9, 3.651875831515781*^9}, 3.65187586241646*^9, 
   3.651875900639752*^9, 3.651875952548401*^9, {3.651877431469512*^9, 
   3.651877474378131*^9}, 3.651877558381744*^9, 3.65187764560769*^9, 
   3.65187809479113*^9, 3.651878134998427*^9, 3.651878177264032*^9, 
   3.651879066395855*^9, 3.6518791136941233`*^9, 3.651879632150537*^9, 
   3.6518797625771637`*^9, 3.651879797423769*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.651874138516499*^9, 3.651874139828368*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["RWA + SLOW Matter Frequency", "Subsection",
 CellChangeTimes->{{3.6518782172676277`*^9, 3.651878235834234*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"omegaHatR", "[", 
    RowBox[{"alp_", ",", "bet_", ",", "x_"}], "]"}], "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "bet", "-", 
        RowBox[{"alp", " ", "cos2thetav", " ", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"bet", " ", "x"}], "]"}], "/", "2"}]}]}], ")"}], "^", 
      "2"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"alp", " ", 
        RowBox[{"sin2thetav", " ", "/", "2"}]}], ")"}], "^", "2"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probability", "[", 
   RowBox[{"alp_", ",", "bet_", ",", "x_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"alp", "^", "2"}], " ", "sin2thetav", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"omegaHatR", "[", 
        RowBox[{"alp", ",", "bet", ",", "x"}], "]"}], " ", 
       RowBox[{"x", "/", "2"}]}], "]"}], "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", 
      RowBox[{
       RowBox[{"omegaHatR", "[", 
        RowBox[{"alp", ",", "bet", ",", "x"}], "]"}], "^", "2"}]}], 
     ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.65187824102882*^9, 3.651878264130218*^9}, {
  3.651878448178254*^9, 3.651878589061674*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.4585`", " ", 
   SuperscriptBox["alp", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "x", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"0.21022225000000003`", " ", 
         SuperscriptBox["alp", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "bet", "-", 
           RowBox[{"0.2`", " ", "alp", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"bet", " ", "x"}], "]"}]}]}], ")"}], "2"]}]]}], "]"}], 
    "2"]}], 
  RowBox[{
   RowBox[{"0.21022225000000003`", " ", 
    SuperscriptBox["alp", "2"]}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "bet", "-", 
      RowBox[{"0.2`", " ", "alp", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"bet", " ", "x"}], "]"}]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.651878591467201*^9, 3.651879067183251*^9, 
  3.651879113991103*^9, 3.651879632467017*^9, 3.651879763293108*^9, 
  3.6518797978119926`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"probability", "[", 
    RowBox[{"alpha", ",", "beta", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.651878595813496*^9, 3.651878612516221*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
wuKfahywXZDo7LeEjmtOBcQijQP2Egemty6l47IbmvObvcnvu+Kqjf8tp+Og
rqvI/TwOOKz5W39WkY4DDmseiz3hgKPGe3fHlXQs3bE5NqOTA84GZ8+PqNLR
9G2V9T5ZLrjAYd1SNTrOBVtOnd9M8hLV8lWYBh3t/iQIC1qSPGQrICyhRcdF
RxbaepF86uEf4KdlRMevUQampiQ/evKsRWe20/H2G2mdrj6SXyLW5z9GOq7y
+6RxeYoL+xN6PthQyfcDJc3il/PgQPJDzgpLOha2xiaXrOeBT8YFqX4rOr7Z
bm/1///jHC5gUzlsOtLvyEp02/LA9/bGnu22dNy327s53I0H/uWLwkR20fHf
8Mxh/cM8CHg4IPfagY7KscUjC/k8CKx9fCfdmY7NF5d4TB7jQdDzTIbrXjrp
fyfBX3E8CG4JGVJ3p2NYXKqQTDIPOO/ton540DE/Kb/cLIMH3G5tpUpvOors
dA5LuMyDfU9mq4N96ChmfVKpOZ8HRN5T982HSX33bRjWvcEDyomE+cN+dMx1
eRJReosHG/bbFeQF0tHqeswpm2IeLKMrW+3l0PGVYuAz8RIeiGgOfVvOp+P6
CAfhQTKeEC9OenOEjrVvO1U7yLj7O1/3TDgdE5Ii5b/d4cHLZpO3lpHkek4X
P60g56u8KxoiHE3q23ko1ptcryC1dUX1cTpeUZOlNF3nQSrv0qOQU3S88SNt
sz2Zb5SDp5tePB21c99emckm9TPaJPw9kY73FM9/q7zAAxel6avXk+hYTw/l
ZpzjAX2u2tIjmY5rj06Xnif12tpz6qtyGplfkp12Oamn6lP2mffn6Rj+pCBm
gscD6XwFnZSLdMzwr9vNJusxd6LvDTOLrOdx4/1NZL2+7i/kLcqhY909akSA
HQ8+0DkKtblkfeOfcLfQeFAqscDV8Dodr71yaV6/gQc5Y68FJ2/ScRe/f7vz
Ch6cbjmfX1RER+EncTlloqR/0jRG1pTSUU1omXzvINnP8CcSO8vpKJD+p+xe
KxfMHKu0LtynY86PZs/7ZP+jrMzkSlTT0S235wk1lQti8+SX//eYrNciyfC2
CC786ul6EF1LR/7zLrc0by605gcIzPxHRzC6FFCmz4VTG1MT+t6Qfl1ODbj4
nAMcyT2bs97Rkdi2+cO3Ig64/1jXsvsDHcv0Phw/dpYD28sq5F910fHvVhEG
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
SUI=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 70}, {0., 0.005897859845402278}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.651878613224297*^9, 3.651879067288804*^9, 
  3.651879114107073*^9, 3.651879632557459*^9, 3.651879763392222*^9, 
  3.651879797917636*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare the two", "Subsection",
 CellChangeTimes->{{3.651877895196866*^9, 3.65187789759999*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"c2Fun", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                RowBox[{"Abs", "[", 
                 RowBox[{"c2Fun", "[", "x", "]"}], "]"}]}], "/.", 
               RowBox[{"solc1", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
            RowBox[{"solc1", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<RWA \!\(\*SubscriptBox[\(C\), \(2\)]\)\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}], ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Conjugate", "[", 
              RowBox[{"c2", "[", "x", "]"}], "]"}], 
             RowBox[{
              RowBox[{"c2", "[", "x", "]"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], 
               ")"}]}]}], "/.", "solset"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<Complete \!\(\*SubscriptBox[\(C\), \(2\)]\)\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"c2Fun", "[", "x", "]"}], "]"}], "^", "2"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"c2Fun", "[", "x", "]"}], "]"}]}], "/.", 
                 RowBox[{"solc1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "/.", 
              RowBox[{"solc1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Conjugate", "[", 
                RowBox[{"c2", "[", "x", "]"}], "]"}], 
               RowBox[{
                RowBox[{"c2", "[", "x", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], 
                 ")"}]}]}], "/.", "solset"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<RWA & Complete \!\(\*SubscriptBox[\(C\), \(2\)]\)\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}], ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"probability", "[", 
             RowBox[{"alpha", ",", "beta", ",", "x"}], "]"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Conjugate", "[", 
                RowBox[{"c2", "[", "x", "]"}], "]"}], 
               RowBox[{
                RowBox[{"c2", "[", "x", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c1", "[", "x", "]"}], "]"}], "^", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"c2", "[", "x", "]"}], "]"}], "^", "2"}]}], 
                 ")"}]}]}], "/.", "solset"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "end"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<Analytical & Complete \!\(\*SubscriptBox[\(C\), \
\(2\)]\)\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Omega] x\>\"", ",", 
             "\"\<|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\
\), \(2\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "imgpadding"}]}], "]"}]}], 
       "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"end", ",", "10", ",", "endpoint"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6518779020425253`*^9, 3.651877937178936*^9}, {
  3.651877978400735*^9, 3.651878054443976*^9}, {3.6518786359603853`*^9, 
  3.65187868977454*^9}, {3.6518789924199247`*^9, 3.651879031120926*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`end$$ = 70., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`end$$], 10, 70}}, Typeset`size$$ = {
    1161., {375.634033203125, 381.365966796875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`end$170370$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`end$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`end$$, $CellContext`end$170370$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          Plot[
           Evaluate[
            ReplaceAll[Abs[
                $CellContext`c2Fun[$CellContext`x]]^2/ReplaceAll[Abs[
                 $CellContext`c1[$CellContext`x]]^2 + Abs[
                $CellContext`c2Fun[$CellContext`x]], 
              Part[$CellContext`solc1, 1]], 
             Part[$CellContext`solc1, 1]]], {$CellContext`x, 
            0, $CellContext`end$$}, PlotRange -> All, 
           ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "RWA \!\(\*SubscriptBox[\(C\), \(2\)]\)", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding], 
          Plot[
           Evaluate[
            ReplaceAll[Conjugate[
               $CellContext`c2[$CellContext`x]] \
($CellContext`c2[$CellContext`x]/(Abs[
                 $CellContext`c1[$CellContext`x]]^2 + Abs[
                 $CellContext`c2[$CellContext`x]]^2)), $CellContext`solset]], \
{$CellContext`x, 0, $CellContext`end$$}, PlotRange -> All, 
           ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "Complete \!\(\*SubscriptBox[\(C\), \(2\)]\)", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding]}, {
          Plot[{
            Evaluate[
             ReplaceAll[Abs[
                 $CellContext`c2Fun[$CellContext`x]]^2/ReplaceAll[Abs[
                  $CellContext`c1[$CellContext`x]]^2 + Abs[
                 $CellContext`c2Fun[$CellContext`x]], 
               Part[$CellContext`solc1, 1]], 
              Part[$CellContext`solc1, 1]]], 
            Evaluate[
             ReplaceAll[Conjugate[
                $CellContext`c2[$CellContext`x]] \
($CellContext`c2[$CellContext`x]/(Abs[
                  $CellContext`c1[$CellContext`x]]^2 + Abs[
                  $CellContext`c2[$CellContext`x]]^2)), \
$CellContext`solset]]}, {$CellContext`x, 0, $CellContext`end$$}, PlotRange -> 
           All, ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "RWA & Complete \!\(\*SubscriptBox[\(C\), \(2\)]\)", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding], 
          Plot[{
            $CellContext`probability[$CellContext`alpha, $CellContext`beta, \
$CellContext`x], 
            Evaluate[
             ReplaceAll[Conjugate[
                $CellContext`c2[$CellContext`x]] \
($CellContext`c2[$CellContext`x]/(Abs[
                  $CellContext`c1[$CellContext`x]]^2 + Abs[
                  $CellContext`c2[$CellContext`x]]^2)), \
$CellContext`solset]]}, {$CellContext`x, 0, $CellContext`end$$}, PlotRange -> 
           All, ImageSize -> $CellContext`imgsize, Frame -> True, PlotLabel -> 
           "Analytical & Complete \!\(\*SubscriptBox[\(C\), \(2\)]\)", 
           FrameLabel -> {
            "\[Omega] x", 
             "|\!\(\*SubscriptBox[\(C\), \(2\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)"}, ImagePadding -> $CellContext`imgpadding]}}], 
      "Specifications" :> {{$CellContext`end$$, 10, 70}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1206., {421., 426.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.651877938166224*^9, 3.651877986419668*^9, 3.651878055386685*^9, 
   3.651878095682168*^9, 3.651878135599804*^9, 3.651878177606915*^9, {
   3.651878655316805*^9, 3.651878691509905*^9}, 3.65187903193211*^9, 
   3.6518790673306417`*^9, 3.651879114198864*^9, 3.651879632584525*^9, 
   3.6518797635566*^9, 3.6518797979593143`*^9}]
}, Open  ]]
}, Open  ]]
},
Evaluator->"draft",
WindowSize->{1280, 755},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 401, 12, 32, "Text"],
Cell[962, 34, 646, 15, 46, "Input"],
Cell[CellGroupData[{
Cell[1633, 53, 1168, 18, 80, "Input"],
Cell[2804, 73, 849, 12, 28, "Output"],
Cell[3656, 87, 850, 12, 28, "Output"],
Cell[4509, 101, 852, 12, 28, "Output"],
Cell[5364, 115, 852, 12, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6253, 132, 2136, 56, 83, "Input"],
Cell[8392, 190, 2278, 55, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10707, 250, 322, 5, 28, "Input"],
Cell[11032, 257, 622, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11691, 271, 926, 22, 47, "Input"],
Cell[12620, 295, 10186, 199, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22843, 499, 183, 4, 28, "Input"],
Cell[23029, 505, 9436, 190, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32502, 700, 1169, 34, 46, "Input"],
Cell[33674, 736, 10594, 212, 64, "Output"],
Cell[44271, 950, 9947, 196, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54255, 1151, 622, 17, 28, "Input"],
Cell[54880, 1170, 35794, 598, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90711, 1773, 999, 27, 46, "Input"],
Cell[91713, 1802, 38165, 637, 376, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129915, 2444, 1703, 38, 46, "Input"],
Cell[131621, 2484, 2807, 53, 460, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134465, 2542, 104, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[134594, 2547, 1463, 40, 46, "Input"],
Cell[136060, 2589, 1906, 44, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138003, 2638, 603, 16, 28, "Input"],
Cell[138609, 2656, 19419, 382, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158065, 3043, 2233, 62, 63, "Input"],
Cell[160301, 3107, 26362, 441, 237, "Output"],
Cell[186666, 3550, 27133, 454, 237, "Output"],
Cell[213802, 4006, 18987, 320, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232826, 4331, 6940, 165, 249, "Input"],
Cell[239769, 4498, 5355, 105, 864, "Output"]
}, Open  ]],
Cell[245139, 4606, 92, 1, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245268, 4612, 117, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[245410, 4617, 1281, 39, 46, "Input"],
Cell[246694, 4658, 1038, 30, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247769, 4693, 293, 7, 28, "Input"],
Cell[248065, 4702, 35490, 593, 231, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[283604, 5301, 102, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[283731, 5306, 7198, 175, 266, "Input"],
Cell[290932, 5483, 5127, 104, 864, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
