(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    327555,       6833]
NotebookOptionsPosition[    321600,       6638]
NotebookOutlinePosition[    322038,       6657]
CellTagsIndexPosition[    321995,       6654]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This is a program written to find out what exactly happened when new \
perturbations of matter profiles are added.\
\>", "Text",
 CellChangeTimes->{{3.672512645008995*^9, 3.6725126714962053`*^9}, 
   3.672592921331737*^9, {3.672594362334446*^9, 3.672594400085992*^9}}],

Cell[CellGroupData[{

Cell["Prepare", "Title",
 CellChangeTimes->{{3.672594346214926*^9, 3.67259435162236*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgsize", "=", "800"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../../neuPackage/neutrino.wl\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6725945078959703`*^9, 3.672594509953569*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../../neuPackage/neumat.wl\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.672594295880104*^9, 3.672594299034132*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["New Combinations of n\[CloseCurlyQuote]s", "Title",
 CellChangeTimes->{{3.672594406485281*^9, 3.672594416341161*^9}}],

Cell[CellGroupData[{

Cell["Parameters", "Chapter",
 CellChangeTimes->{{3.672594431293231*^9, 3.672594432940819*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gF", "=", 
   RowBox[{"1.17", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "11"}], ")"}]}]}]}], 
  RowBox[{"(*", 
   RowBox[{"MeV", "^", 
    RowBox[{"(", 
     RowBox[{"-", "2"}], ")"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ye", "=", "0.5"}]}], "Input"],

Cell[BoxData["1.1699999999999999`*^-11"], "Output",
 CellChangeTimes->{3.671368939618944*^9, 3.671369041573181*^9, 
  3.671369139833027*^9, 3.671369174611854*^9, 3.6714736731043797`*^9, 
  3.671808943613312*^9, 3.671887617468062*^9, 3.6718882721366587`*^9, 
  3.671888464460457*^9, 3.672009182509807*^9, 3.6720816568933887`*^9, 
  3.672418274195413*^9, 3.672589430795052*^9, 3.672594630871278*^9, 
  3.672595022659823*^9, 3.672595188355851*^9, 3.672595310327523*^9, 
  3.672595803852153*^9, 3.6726056346970453`*^9, 3.672618661152308*^9, 
  3.6726620250877657`*^9, 3.672753290954668*^9, 3.672771650199546*^9, 
  3.672772267180211*^9, 3.672772461932081*^9}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.671368939618944*^9, 3.671369041573181*^9, 
  3.671369139833027*^9, 3.671369174611854*^9, 3.6714736731043797`*^9, 
  3.671808943613312*^9, 3.671887617468062*^9, 3.6718882721366587`*^9, 
  3.671888464460457*^9, 3.672009182509807*^9, 3.6720816568933887`*^9, 
  3.672418274195413*^9, 3.672589430795052*^9, 3.672594630871278*^9, 
  3.672595022659823*^9, 3.672595188355851*^9, 3.672595310327523*^9, 
  3.672595803852153*^9, 3.6726056346970453`*^9, 3.672618661152308*^9, 
  3.6726620250877657`*^9, 3.672753290954668*^9, 3.672771650199546*^9, 
  3.672772267180211*^9, 3.672772461942011*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"deltamsquare13", "=", 
    RowBox[{"2.6", "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "15"}], ")"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"MeV", "^", "2"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"energy10", "=", "10"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Energy", " ", "in", " ", "units", " ", "of", " ", "MeV"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"energy20", "=", "20"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Energy", " ", "in", " ", "units", " ", "of", " ", "MeV"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"omegaV", "=", 
    RowBox[{"deltamsquare13", "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "energy20"}], ")"}]}]}], 
   RowBox[{"(*", "MeV", "*)"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"For", " ", "10", " ", "MeV", " ", "neutrinos"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"thetaV", "=", 
  RowBox[{"ArcSin", "[", 
   RowBox[{
    SqrtBox["0.093"], "/", "2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.671368929239464*^9, 3.671368929695324*^9}, 
   3.6718095401910973`*^9, {3.672757427121626*^9, 3.672757437562367*^9}}],

Cell[BoxData["0.1530766336911682`"], "Output",
 CellChangeTimes->{3.671809540598428*^9, 3.671887617641367*^9, 
  3.671888272184493*^9, 3.6718884645138903`*^9, 3.672009183646793*^9, 
  3.672081659051735*^9, 3.672418274438162*^9, 3.6725894309259033`*^9, 
  3.6725946319452257`*^9, 3.672595022827313*^9, 3.672595188532596*^9, 
  3.672595310519493*^9, 3.672595804020109*^9, 3.6726056347635937`*^9, 
  3.6726186612067413`*^9, 3.6726620251303577`*^9, 3.672753290998575*^9, 
  3.672757439267015*^9, 3.672771650244574*^9, 3.672772267478736*^9, 
  3.6727724643231783`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fraction", "=", "0.5"}], "\[IndentingNewLine]", 
 RowBox[{"lambdaN", "=", 
  RowBox[{"fraction", "*", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", "thetaV"}], "]"}], "omegaV"}]}]}], "Input",
 CellChangeTimes->{{3.671369164683333*^9, 3.671369169865077*^9}, {
  3.672753286644445*^9, 3.672753288376505*^9}}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{
  3.671369041611476*^9, 3.67136914001122*^9, {3.6713691716193867`*^9, 
   3.671369174784987*^9}, 3.6714736732463818`*^9, 3.671808943769507*^9, 
   3.671887617682816*^9, 3.6718882722355413`*^9, 3.6718884645653763`*^9, 
   3.672009184585758*^9, 3.672081661432247*^9, 3.6724182744849157`*^9, 
   3.672589430952956*^9, 3.6725946328106213`*^9, 3.6725950228567038`*^9, 
   3.6725951885746117`*^9, 3.672595310578321*^9, 3.6725958040562983`*^9, 
   3.672605634818551*^9, 3.67261866125742*^9, 3.672662025162672*^9, 
   3.672753291037294*^9, 3.672757443293902*^9, 3.672771650273932*^9, 
   3.672772267514769*^9, 3.672772466521133*^9}],

Cell[BoxData["3.098875`*^-17"], "Output",
 CellChangeTimes->{
  3.671369041611476*^9, 3.67136914001122*^9, {3.6713691716193867`*^9, 
   3.671369174784987*^9}, 3.6714736732463818`*^9, 3.671808943769507*^9, 
   3.671887617682816*^9, 3.6718882722355413`*^9, 3.6718884645653763`*^9, 
   3.672009184585758*^9, 3.672081661432247*^9, 3.6724182744849157`*^9, 
   3.672589430952956*^9, 3.6725946328106213`*^9, 3.6725950228567038`*^9, 
   3.6725951885746117`*^9, 3.672595310578321*^9, 3.6725958040562983`*^9, 
   3.672605634818551*^9, 3.67261866125742*^9, 3.672662025162672*^9, 
   3.672753291037294*^9, 3.672757443293902*^9, 3.672771650273932*^9, 
   3.672772267514769*^9, 3.672772466535365*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{"2", "thetaV"}], "]"}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"lambdaN", "/", "omegaV"}], ")"}], "^", "2"}]}]], "Input"],

Cell[BoxData["0.7262094375000001`"], "Output",
 CellChangeTimes->{3.6718940645207663`*^9, 3.672009185429793*^9, 
  3.672081663910325*^9, 3.672418274519849*^9, 3.672589430976141*^9, 
  3.672594633825807*^9, 3.6725950228832073`*^9, 3.6725951886227207`*^9, 
  3.672595310628244*^9, 3.672595804102488*^9, 3.672605634864786*^9, 
  3.6726186613066273`*^9, 3.672662025197158*^9, 3.672753291071267*^9, 
  3.672757444843994*^9, 3.6727716503163548`*^9, 3.672772267556459*^9, 
  3.672772468370781*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"thetamV", "=", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", "thetaV"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", "thetaV"}], "]"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lambdaN", "/", "omegaV"}], ")"}], "^", "2"}]}], ")"}]}], 
       "]"}], "/", "2"}], ",", "Pi"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"psi1", "[", "0", "]"}], ",", 
      RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "==", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endpointN", "=", "1600"}], ";"}]}], "Input",
 CellChangeTimes->{{3.670802594272696*^9, 3.670802603091543*^9}, {
  3.671369029634495*^9, 3.671369030890624*^9}, {3.6718094703720818`*^9, 
  3.6718094712554693`*^9}, {3.671809517023817*^9, 3.671809575774434*^9}, {
  3.6718942780388937`*^9, 3.671894281797065*^9}}],

Cell[CellGroupData[{

Cell["List of Parameters for 1 2 3 frequiencies", "Subchapter",
 CellChangeTimes->{{3.67259465094092*^9, 3.672594729031056*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"onekList", "=", 
   RowBox[{"{", "0.999", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twokList", "=", 
   RowBox[{"{", 
    RowBox[{"0.999", ",", "0.6"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oneaList", "=", 
   RowBox[{"{", "0.1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twoaList", "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "0.1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"onephiList", "=", 
   RowBox[{"{", "0", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twophiList", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threekList", "=", 
   RowBox[{"{", 
    RowBox[{"0.999", ",", "0.6", ",", "0.4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threeaList", "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "0.1", ",", "0.1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threephiList", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetaVRes", "=", "thetaV"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetamVRes", "=", "thetamV"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"omegaVRes", "=", "omegaV"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"endpointNRes", "=", 
  RowBox[{"endpointN", "*", "15", 
   RowBox[{"(*", 
    RowBox[{"/", "20"}], "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.672618653461673*^9, 3.6726186577089357`*^9}, 
   3.672662022955709*^9, {3.672776447313946*^9, 3.672776449090019*^9}, {
   3.672776600520211*^9, 3.672776600875943*^9}, {3.672779402449871*^9, 
   3.672779402600193*^9}, {3.672779561244967*^9, 3.672779561756548*^9}, {
   3.67277991858421*^9, 3.672779920731812*^9}, {3.672781081946381*^9, 
   3.672781082097074*^9}, {3.672782913719657*^9, 3.672782914138331*^9}}],

Cell[BoxData["24000"], "Output",
 CellChangeTimes->{
  3.672594730718953*^9, 3.672595022920298*^9, 3.672595188681508*^9, 
   3.6725953106890373`*^9, 3.6725958041434183`*^9, 3.672605634924533*^9, {
   3.6726186591311274`*^9, 3.672618661345846*^9}, 3.6726620252310543`*^9, 
   3.672753291112547*^9, 3.67277165038544*^9, {3.672772260775118*^9, 
   3.672772267609037*^9}, 3.6727724712242813`*^9, 3.672776451794544*^9, 
   3.672776601555943*^9, 3.672779403379702*^9, 3.672779562574539*^9, {
   3.672779922232692*^9, 3.672779924161468*^9}, 3.6727810826752787`*^9, 
   3.672782916142346*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Superposition", "Chapter",
 CellChangeTimes->{{3.672594875966056*^9, 3.672594881236239*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"oneListFullTicks", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"ScientificForm", "[", 
        RowBox[{
         RowBox[{"MeVInverse2km", "[", 
          RowBox[{"x", "/", 
           RowBox[{"OmegaMatter", "[", 
            RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], 
            "]"}]}], "]"}], ",", "2"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpointNRes"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.670681334124702*^9, 3.6706813548802757`*^9}, {
  3.671292294485011*^9, 3.671292301563285*^9}, {3.6718972567721977`*^9, 
  3.6718972689724207`*^9}, {3.6718974802804537`*^9, 3.671897480671418*^9}, {
  3.672092608918561*^9, 3.67209263131782*^9}, {3.6720944882977858`*^9, 
  3.672094524061894*^9}, {3.6720949970446873`*^9, 3.672094997400454*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"oneListTicks", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"oneListFullTicks", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "@", "oneListFullTicks"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Length", "@", "oneListFullTicks"}], ")"}], "/", "5"}], 
        "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6706774133538218`*^9, 3.6706774533541117`*^9}, {
   3.670677515902973*^9, 3.670677538155279*^9}, {3.670678136114743*^9, 
   3.670678142592681*^9}, {3.670678562225428*^9, 3.670678597095086*^9}, 
   3.6706792847409163`*^9, 3.6706813161304827`*^9, {3.6706815810126543`*^9, 
   3.670681705504525*^9}, {3.671897276709902*^9, 3.671897303795104*^9}, {
   3.672092623076462*^9, 3.6720926613018723`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["oneListTicks"], "Input",
 CellChangeTimes->{{3.6718973100304413`*^9, 3.6718973108663*^9}, {
  3.672092672109338*^9, 3.6720926743206*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     TagBox[
      InterpretationBox["\<\"0.\"\>",
       0.,
       AutoDelete->True],
      ScientificForm[#, 2]& ]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4800", ",", 
     TagBox[
      InterpretationBox[
       RowBox[{"\<\"2.\"\>", "\[Times]", 
        SuperscriptBox["10", "\<\"7\"\>"]}],
       1.960487665153539*^7,
       AutoDelete->True],
      ScientificForm[#, 2]& ]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9600", ",", 
     TagBox[
      InterpretationBox[
       RowBox[{"\<\"3.9\"\>", "\[Times]", 
        SuperscriptBox["10", "\<\"7\"\>"]}],
       3.920975330307078*^7,
       AutoDelete->True],
      ScientificForm[#, 2]& ]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14400", ",", 
     TagBox[
      InterpretationBox[
       RowBox[{"\<\"5.9\"\>", "\[Times]", 
        SuperscriptBox["10", "\<\"7\"\>"]}],
       5.8814629954606175`*^7,
       AutoDelete->True],
      ScientificForm[#, 2]& ]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19200", ",", 
     TagBox[
      InterpretationBox[
       RowBox[{"\<\"7.8\"\>", "\[Times]", 
        SuperscriptBox["10", "\<\"7\"\>"]}],
       7.841950660614157*^7,
       AutoDelete->True],
      ScientificForm[#, 2]& ]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24000", ",", 
     TagBox[
      InterpretationBox[
       RowBox[{"\<\"9.8\"\>", "\[Times]", 
        SuperscriptBox["10", "\<\"7\"\>"]}],
       9.802438325767696*^7,
       AutoDelete->True],
      ScientificForm[#, 2]& ]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6706816851956997`*^9, 3.670681706832099*^9}, {
   3.670800647069911*^9, 3.670800657145527*^9}, 3.671289418875698*^9, 
   3.6712922204726267`*^9, 3.6712923039825773`*^9, {3.671297278067905*^9, 
   3.671297316482081*^9}, 3.671297388168384*^9, 3.671297427810207*^9, {
   3.671297692308462*^9, 3.671297749412203*^9}, {3.671297863524066*^9, 
   3.6712978913496*^9}, 3.671297961211309*^9, 3.671303443966899*^9, 
   3.671308789289579*^9, {3.671308841844275*^9, 3.67130891640903*^9}, 
   3.6713093020312157`*^9, 3.67130954549648*^9, 3.671309645364437*^9, 
   3.671312070149315*^9, 3.671313362023677*^9, {3.671313769551804*^9, 
   3.671313799799953*^9}, 3.6713139115196857`*^9, 3.671315091807453*^9, 
   3.671315165703185*^9, 3.671315401189005*^9, 3.6718973152683372`*^9, 
   3.671897489430244*^9, 3.671897737214519*^9, 3.6718978624004803`*^9, 
   3.67209267504077*^9, 3.672093367719022*^9, 3.672093607220455*^9, 
   3.672093693175743*^9, 3.672094538675012*^9, 3.6720950027400084`*^9, {
   3.6720951429489202`*^9, 3.672095170821301*^9}, 3.672095217361803*^9, 
   3.672095251328315*^9, {3.672095302707135*^9, 3.672095319957649*^9}, 
   3.6724183225992107`*^9, 3.6725894871819696`*^9, 3.672594889010231*^9, 
   3.672595032469571*^9, 3.672595194585047*^9, 3.672595319483758*^9, 
   3.672595812241503*^9, 3.67260563521539*^9, 3.672618661388056*^9, 
   3.672662025493684*^9, 3.6727532914082403`*^9, 3.6727716507086277`*^9, 
   3.672772267705472*^9, 3.672774415669345*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"oneNPlt", "=", 
   RowBox[{"pltNum", "[", 
    RowBox[{
    "onekList", ",", "oneaList", ",", "onephiList", ",", "thetamVRes", ",", 
     "endpointNRes", ",", "\"\<Single Frequency\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Dashed"}], "}"}], ",", "oneListTicks", ",", 
     "\"\<Distance (km)\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6720905623747396`*^9, 3.672090565564733*^9}, {
   3.67209298110763*^9, 3.672092984870781*^9}, {3.6720930606113462`*^9, 
   3.672093060921719*^9}, {3.6720932026404333`*^9, 3.6720932073115263`*^9}, 
   3.672093391849511*^9, {3.6720945421729527`*^9, 3.672094543997929*^9}, {
   3.6720950060567837`*^9, 3.6720950064000883`*^9}, {3.672096573701581*^9, 
   3.672096577077539*^9}, {3.6725949220050707`*^9, 3.672594923586033*^9}, {
   3.672594955857212*^9, 3.672594956636703*^9}, {3.672595119243643*^9, 
   3.67259512695858*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"oneListPlt", "=", 
   RowBox[{"pltNList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "1", "}"}], "}"}], ",", "onekList", ",", "oneaList", ",", 
     "onephiList", ",", "thetamVRes", ",", "endpointNRes", ",", 
     "\"\<Single Frequency\>\"", ",", "Blue", ",", "oneListTicks", ",", 
     "\"\<Distance (km)\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.672085164815859*^9, 3.67208518625624*^9}, {
   3.672090485515102*^9, 3.672090496616322*^9}, {3.6720905495332403`*^9, 
   3.672090550510767*^9}, {3.672092988757021*^9, 3.672092996149053*^9}, {
   3.672093064610938*^9, 3.672093064921749*^9}, 3.6720931026798143`*^9, 
   3.672093399497143*^9, {3.672094552361368*^9, 3.672094553829383*^9}, {
   3.672095011728511*^9, 3.672095012087788*^9}, 3.672096580755224*^9, {
   3.67259566939052*^9, 3.6725956712350273`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"twoNPlt", "=", 
   RowBox[{"pltNum", "[", 
    RowBox[{
    "twokList", ",", "twoaList", ",", "twophiList", ",", "thetamVRes", ",", 
     "endpointNRes", ",", "\"\<Two Frequencies\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Dashed"}], "}"}], ",", "oneListTicks", ",", 
     "\"\<Distance (km)\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.672090578953063*^9, 3.6720905863899593`*^9}, {
   3.672090637311195*^9, 3.672090652315001*^9}, {3.6720930128296003`*^9, 
   3.6720930154360313`*^9}, {3.672093068970859*^9, 3.672093069274662*^9}, {
   3.672093219531742*^9, 3.6720932244351482`*^9}, 3.672093412576908*^9, {
   3.6720945592599297`*^9, 3.6720945607019567`*^9}, {3.672095016897037*^9, 
   3.6720950172635612`*^9}, 3.672096583643075*^9, {3.6725960487631607`*^9, 
   3.67259605038832*^9}, {3.672596485126449*^9, 3.6725964861028347`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"twoEffectiveList", "=", 
  RowBox[{"Flatten", "[", " ", 
   RowBox[{
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"qValueOrderdList", "[", 
         RowBox[{
          RowBox[{"listNGenerator", "[", 
           RowBox[{"2", ",", "4"}], "]"}], ",", "twokList", ",", "twoaList", 
          ",", "twophiList", ",", "thetamVRes"}], "]"}], ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], ",", "None", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6720934860378532`*^9, 3.672093493655963*^9}, {
  3.672093647585635*^9, 3.6720936480737753`*^9}, {3.672094566197678*^9, 
  3.6720945889082947`*^9}, {3.672596059458712*^9, 3.672596060346838*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.672092945468934*^9, 3.672093494197364*^9, 3.672093613613359*^9, 
   3.672093648377345*^9, 3.67209369374957*^9, 3.672094192549569*^9, {
   3.6720945679796057`*^9, 3.672094589419114*^9}, 3.6720950258660803`*^9, {
   3.6720951435523157`*^9, 3.672095172260325*^9}, 3.672095220133297*^9, {
   3.672095279378818*^9, 3.672095323007737*^9}, 3.6724183240466022`*^9, 
   3.672589490719495*^9, 3.672594889081634*^9, 3.672596061951346*^9, 
   3.6726056375977297`*^9, 3.672618661555792*^9, 3.6726620269878273`*^9, 
   3.6727532942802067`*^9, 3.672771656777671*^9, 3.6727722704771643`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"twoListPlt", "=", 
   RowBox[{"pltNList", "[", 
    RowBox[{
    "twoEffectiveList", ",", "twokList", ",", "twoaList", ",", "twophiList", 
     ",", "thetamVRes", ",", "endpointNRes", ",", "\"\<Approximation;\>\"", 
     ",", "Blue", ",", "oneListTicks", ",", "\"\<Distance (km)\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.67081151452042*^9, 3.6708116149454947`*^9}, {
   3.6708116579031897`*^9, 3.670811658243676*^9}, 3.671474327440531*^9, {
   3.67147450521579*^9, 3.671474551088442*^9}, {3.671475140016049*^9, 
   3.6714751430698338`*^9}, {3.671888250124394*^9, 3.6718882516517973`*^9}, {
   3.6718884372122583`*^9, 3.671888437627709*^9}, {3.671892219908888*^9, 
   3.671892220114462*^9}, {3.6718923508298893`*^9, 3.671892351119917*^9}, {
   3.671893052051827*^9, 3.671893053049012*^9}, {3.671893553024852*^9, 
   3.67189355318684*^9}, {3.671896247745657*^9, 3.671896251631317*^9}, {
   3.6718963496208487`*^9, 3.6718963499484243`*^9}, {3.67189678643707*^9, 
   3.671896787973991*^9}, {3.6718968816175613`*^9, 3.671896883011778*^9}, {
   3.671897324736326*^9, 3.671897342363659*^9}, {3.6718974709854307`*^9, 
   3.6718974713603773`*^9}, {3.671898070494632*^9, 3.671898070700083*^9}, {
   3.671898213992785*^9, 3.67189821910684*^9}, 3.671898438005496*^9, {
   3.672092685638165*^9, 3.6720928004380407`*^9}, {3.6720928331138697`*^9, 
   3.672092845460915*^9}, {3.67209302497941*^9, 3.672093026891509*^9}, {
   3.672093073548032*^9, 3.6720930760016193`*^9}, 3.672093520087903*^9, {
   3.6720945719382353`*^9, 3.6720945733893538`*^9}, {3.6720950296561728`*^9, 
   3.672095030047842*^9}, 3.67209658877886*^9, {3.672596069413073*^9, 
   3.672596070951734*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"threeNPlt", "=", 
   RowBox[{"pltNum", "[", 
    RowBox[{
    "threekList", ",", "threeaList", ",", "threephiList", ",", "thetamVRes", 
     ",", "endpointNRes", ",", "\"\<Three Frequencies Numerical\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Dashed"}], "}"}], ",", "oneListTicks", ",", 
     "\"\<Distance (km)\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.672093906401318*^9, 3.672093934919592*^9}, {
   3.672094429180883*^9, 3.6720944299775867`*^9}, {3.6720946229529953`*^9, 
   3.672094623349313*^9}, {3.672095035935156*^9, 3.672095036295788*^9}, 
   3.672096594378903*^9, {3.67242588180191*^9, 3.672425883463509*^9}, {
   3.672425922943367*^9, 3.6724259256145477`*^9}, {3.672596297104888*^9, 
   3.6725963041833763`*^9}, {3.672596340883307*^9, 3.6725963688325987`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"threeEffectiveList", "=", 
  RowBox[{"Flatten", "[", " ", 
   RowBox[{
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"qValueOrderdList", "[", 
         RowBox[{
          RowBox[{"listNGenerator", "[", 
           RowBox[{"3", ",", "4"}], "]"}], ",", "threekList", ",", 
          "threeaList", ",", "threephiList", ",", "thetamVRes"}], "]"}], ",", 
        
        RowBox[{"1", ";;", "4"}]}], "]"}], ",", "None", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.672094224460371*^9, 3.672094229131135*^9}, {
  3.6720942972148933`*^9, 3.6720942982718163`*^9}, {3.672094347647849*^9, 
  3.672094389008813*^9}, {3.6720946297980824`*^9, 3.6720946478837347`*^9}, {
  3.672170208043215*^9, 3.672170240850429*^9}, {3.672170305846291*^9, 
  3.6721703324038563`*^9}, {3.6724251939955473`*^9, 3.6724251970328207`*^9}, {
  3.672425757147925*^9, 3.672425785304565*^9}, {3.672596307931679*^9, 
  3.6725963092651863`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.67209423023518*^9, 3.672094298749024*^9, {3.6720943673034143`*^9, 
   3.672094389550083*^9}, {3.672094630858823*^9, 3.672094648443945*^9}, 
   3.672095145758647*^9, 3.672095178387211*^9, 3.672095237861433*^9, 
   3.6720953507103357`*^9, 3.6721571513569107`*^9, {3.672170204883684*^9, 
   3.67217024120919*^9}, {3.672170306718495*^9, 3.672170332728422*^9}, 
   3.672418330425612*^9, 3.672425197437215*^9, {3.6724257576626453`*^9, 
   3.672425785789743*^9}, 3.672425885873304*^9, 3.672425936271228*^9, 
   3.672589502202818*^9, 3.672596318674404*^9, 3.6725963723678293`*^9, 
   3.6726056454074717`*^9, 3.672618662002179*^9, 3.6726620336803293`*^9, 
   3.672753302379897*^9, 3.67277166479115*^9, 3.672772278738693*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"threeListPlt", "=", 
   RowBox[{"pltNList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"threeEffectiveList", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"threeEffectiveList", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "threekList", ",", 
     "threeaList", ",", "threephiList", ",", "thetamVRes", ",", 
     "endpointNRes", ",", "\"\<Approximation;\>\"", ",", "Blue", ",", 
     "oneListTicks", ",", "\"\<Distance (km)\>\""}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.672094267851671*^9, 3.672094282892915*^9}, 
   3.672094362747006*^9, {3.672094635940337*^9, 3.672094636253948*^9}, {
   3.6720950441149817`*^9, 3.672095044695669*^9}, 3.672096601108343*^9, {
   3.672491761155105*^9, 3.672491771858946*^9}, {3.672596385903694*^9, 
   3.6725963881581793`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Show", "[", 
       RowBox[{"oneListPlt", ",", "oneNPlt"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Show", "[", 
       RowBox[{"twoListPlt", ",", "twoNPlt"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Show", "[", 
       RowBox[{"threeListPlt", ",", "threeNPlt"}], "]"}], "}"}]}], "}"}], 
   "]"}], "*)"}]], "Input",
 CellChangeTimes->{3.6725974145212727`*^9}],

Cell[CellGroupData[{

Cell["\<\
Can we just linearly add up all the oscillations from each combinations of n\
\[CloseCurlyQuote]s?\
\>", "Subsection",
 CellChangeTimes->{{3.6721540637495937`*^9, 3.672154081982212*^9}}],

Cell["For two frequency case, we have the useful combination to be", "Text",
 CellChangeTimes->{{3.6721540870136223`*^9, 3.6721541169651537`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["twoEffectiveList"], "Input",
 CellChangeTimes->{{3.672154119054103*^9, 3.672154119998356*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.672154120468573*^9, 3.6724183310841093`*^9, {3.672425766012926*^9, 
   3.672425793051261*^9}, 3.672425892233426*^9, 3.672425942214511*^9, 
   3.672596535910779*^9, 3.672605645763894*^9, 3.672618662059717*^9, 
   3.672662034014104*^9, 3.672753303114512*^9, 3.672771665665062*^9, 
   3.672772279501968*^9}]
}, Open  ]],

Cell["\<\
Now we grab the each one and make lists of transition probabilities\
\>", "Text",
 CellChangeTimes->{{3.672154123381329*^9, 3.672154148428699*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"phi2ListDataNList", "[", 
    RowBox[{
    "listInput_", ",", "kNList_", ",", "aNList_", ",", "phiNList_", ",", 
     "thetam_", ",", "endpoint_", ",", 
     RowBox[{"step_:", "1"}], ",", 
     RowBox[{"startpoint_:", "0"}]}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "/.", 
       RowBox[{"First", "@", 
        RowBox[{"solNList", "[", 
         RowBox[{
         "listInput", ",", "kNList", ",", "aNList", ",", "phiNList", ",", 
          "thetam", ",", "endpoint"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "startpoint", ",", "endpoint", ",", "step"}], "}"}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "startpoint", ",", "endpoint", ",", "step"}], 
          "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
           RowBox[{"First", "@", 
            RowBox[{"solNList", "[", 
             RowBox[{
             "listInput", ",", "aNList", ",", "kNList", ",", "phiNList", ",", 
              "thetam", ",", "endpoint"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "startpoint", ",", "endpoint", ",", "step"}], 
          "}"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.672154244700716*^9, 3.6721542545703707`*^9}, {
  3.6721544701114693`*^9, 3.672154577150586*^9}, {3.672154613593317*^9, 
  3.6721546987460938`*^9}, {3.67215487130604*^9, 3.6721549314564238`*^9}, {
  3.672155424150779*^9, 3.672155437448317*^9}, {3.67242028546975*^9, 
  3.672420290645179*^9}, {3.67259654206911*^9, 3.67259656860599*^9}, {
  3.672596616285005*^9, 3.672596617981502*^9}, {3.6725967181608257`*^9, 
  3.6725967229372253`*^9}, {3.672597866546502*^9, 3.6725978688032703`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"twoListDatax", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpointNRes", ",", "100"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twoListData1", "=", 
   RowBox[{"phi2ListDataNList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"twoEffectiveList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", "twoaList", ",", 
     "twokList", ",", "twophiList", ",", "thetamVRes", ",", "endpointNRes", 
     ",", "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twoListData2", "=", 
   RowBox[{"phi2ListDataNList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"twoEffectiveList", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", "twokList", ",", 
     "twoaList", ",", "twophiList", ",", "thetamVRes", ",", "endpointNRes", 
     ",", "100"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6721545813635063`*^9, 3.672154600629973*^9}, {
  3.6721547569635*^9, 3.6721548775064707`*^9}, {3.67215493954102*^9, 
  3.6721549495300922`*^9}, {3.672155410881339*^9, 3.6721554940147142`*^9}, {
  3.672170175342742*^9, 3.67217018360351*^9}, {3.672596596333599*^9, 
  3.672596630609065*^9}, {3.672596673954373*^9, 3.6725966845864573`*^9}, {
  3.67259788382025*^9, 3.672597885943439*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"listPltNList", "[", 
   RowBox[{
   "listData_", ",", "legends_", ",", "color_", ",", "frameTicks_", ",", 
    "frameLabel_"}], "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"listData", ",", 
    RowBox[{"ImageSize", "->", "imgsize"}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameLabel", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Transition Probability\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "frameLabel"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "->", "color"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"ToString", "[", "legends", "]"}], ",", "color"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"Top", ",", "Center"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "frameTicks"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6721549528770437`*^9, 3.672155094461548*^9}, {
  3.672155134884253*^9, 3.672155136064314*^9}, {3.672155262229473*^9, 
  3.6721552627589903`*^9}}],

Cell["Show the plots for each n list", "Text",
 CellChangeTimes->{{3.672597352026937*^9, 3.672597377738832*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"twoListData1Plt", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"listPltNList", "[", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", 
            RowBox[{
             RowBox[{"Abs", "[", "#2", "]"}], "^", "2"}]}], "}"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"twoListDatax", ",", "twoListData1"}], "}"}]}], "]"}], ",", 
       "\"\<List 1;\>\"", ",", "Magenta", ",", "oneListTicks", ",", 
       "\"\<Distance (km)\>\""}], "]"}], "\[IndentingNewLine]", 
     "twoListData2Plt"}], "=", 
    RowBox[{"listPltNList", "[", 
     RowBox[{
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#1", ",", 
           RowBox[{
            RowBox[{"Abs", "[", "#2", "]"}], "^", "2"}]}], "}"}], "&"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"twoListDatax", ",", "twoListData2"}], "}"}]}], "]"}], ",", 
      "\"\<List 2;\>\"", ",", "Magenta", ",", "oneListTicks", ",", 
      "\"\<Distance (km)\>\""}], "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.672155217091173*^9, 3.672155276297039*^9}, {
   3.6721553313945503`*^9, 3.672155368552259*^9}, {3.672155504685095*^9, 
   3.672155526077642*^9}, {3.672155679716441*^9, 3.6721557016332397`*^9}, {
   3.672420324246738*^9, 3.672420333117166*^9}, {3.67259664789812*^9, 
   3.672596665252475*^9}, 3.672597349627931*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Show", "[", 
   RowBox[{"twoListData1Plt", ",", "twoNPlt", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.672155284376309*^9, 3.672155290704183*^9}, {
   3.672155322558247*^9, 3.672155323488953*^9}, {3.672155381669964*^9, 
   3.6721553818155127`*^9}, {3.6721557646073017`*^9, 3.672155764716879*^9}, {
   3.6725967839835787`*^9, 3.672596792752084*^9}, 3.672597383615692*^9}],

Cell["\<\
Two frequencies doens\[CloseCurlyQuote]t really help us. Should check three \
frequencies.\
\>", "Text",
 CellChangeTimes->{{3.672155771332897*^9, 3.67215579074*^9}}],

Cell[CellGroupData[{

Cell[BoxData["threeEffectiveList"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.672155914851684*^9, 3.672157135937455*^9, 3.672170076759266*^9, 
   3.672418332226857*^9, 3.6724252232604303`*^9, {3.67242577324401*^9, 
   3.672425802666078*^9}, 3.6724259035689793`*^9, 3.672425951167368*^9, 
   3.672596805749131*^9, 3.6726056461073713`*^9, 3.672618662164691*^9, 
   3.672662034403612*^9, 3.672753303642248*^9, 3.6727716662568502`*^9, 
   3.6727722801133337`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"threeListDatax", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpointNRes", ",", "100"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threeListDataFull", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"phi2ListDataNList", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"threeEffectiveList", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", "threekList", ",", 
       "threeaList", ",", "threephiList", ",", "thetamVRes", ",", 
       "endpointNRes", ",", "100"}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "threeEffectiveList"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threeListData1", "=", 
   RowBox[{"phi2ListDataNList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threeEffectiveList", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", "threekList", ",", 
     "threeaList", ",", "threephiList", ",", "thetamVRes", ",", 
     "endpointNRes", ",", "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threeListData2", "=", 
   RowBox[{"phi2ListDataNList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threeEffectiveList", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", "threekList", ",", 
     "threeaList", ",", "threephiList", ",", "thetamVRes", ",", 
     "endpointNRes", ",", "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threeListData3", "=", 
   RowBox[{"phi2ListDataNList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threeEffectiveList", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "}"}], ",", "threekList", ",", 
     "threeaList", ",", "threephiList", ",", "thetamVRes", ",", 
     "endpointNRes", ",", "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threeListData4", "=", 
   RowBox[{"phi2ListDataNList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threeEffectiveList", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "}"}], ",", "threekList", ",", 
     "threeaList", ",", "threephiList", ",", "thetamVRes", ",", 
     "endpointNRes", ",", "100"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.672155947925879*^9, 3.672155968466283*^9}, {
  3.6721560351941013`*^9, 3.67215606221646*^9}, {3.672156859629183*^9, 
  3.672156914703299*^9}, {3.672157009718998*^9, 3.672157020295658*^9}, {
  3.672425249603936*^9, 3.672425303514152*^9}, {3.67259681361677*^9, 
  3.672596855728533*^9}, {3.6725978986066303`*^9, 3.672597905435795*^9}, {
  3.6726056842598543`*^9, 3.672605697985696*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"threeListData", "=", 
   RowBox[{"Total", "@", "threeListDataFull"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threeListDataTemp", "=", 
   RowBox[{"threeListData2", "+", "threeListData4"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6721569185032043`*^9, 3.6721569474487658`*^9}, {
   3.672170136126297*^9, 3.672170143048905*^9}, 3.672418383008746*^9, 
   3.672420397137001*^9, {3.672425292930327*^9, 3.672425321435108*^9}, {
   3.6724253692518272`*^9, 3.67242537366868*^9}, {3.672491710417288*^9, 
   3.672491730112499*^9}}],

Cell["Show the plots together", "Text",
 CellChangeTimes->{{3.6725974353376007`*^9, 3.6725974439768057`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"listPltNList", "[", 
     RowBox[{
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#1", ",", 
           RowBox[{
            RowBox[{"Abs", "[", "#2", "]"}], "^", "2"}]}], "}"}], "&"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"threeListDatax", ",", "threeListData"}], "}"}]}], "]"}], 
      ",", "\"\<Linear Superposition;\>\"", ",", "Magenta", ",", 
      "oneListTicks", ",", "\"\<Distance (km)\>\""}], "]"}], ",", 
    "threeListPlt", ",", "threeNPlt"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.672156965699091*^9, 3.672156999702445*^9}, {
   3.672157103555377*^9, 3.6721571092612677`*^9}, {3.6721704835727367`*^9, 
   3.672170486769662*^9}, {3.672420380782529*^9, 3.672420383422207*^9}, 
   3.672597432525587*^9}],

Cell["Show the q values", "Text",
 CellChangeTimes->{{3.6725973274995527`*^9, 3.672597330308289*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"qValueOrderdList", "[", 
    RowBox[{
     RowBox[{"listNGenerator", "[", 
      RowBox[{"3", ",", "4"}], "]"}], ",", "threekList", ",", "threeaList", 
     ",", "threephiList", ",", "thetamVRes"}], "]"}], ";"}], "*)"}]], "Input",\

 CellChangeTimes->{{3.672170274085615*^9, 3.6721702744851503`*^9}, {
   3.672491253576831*^9, 3.67249125588626*^9}, {3.6725968717627172`*^9, 
   3.672596880269827*^9}, 3.672597325383657*^9}],

Cell["A show the plots of each list", "Text",
 CellChangeTimes->{{3.67259731196599*^9, 3.672597320619864*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pltNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"threeEffectiveList", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", "threekList", ",", 
      "threeaList", ",", "threephiList", ",", "thetamVRes", ",", 
      "endpointNRes", ",", "\"\<Approximation;\>\"", ",", "Blue", ",", 
      "oneListTicks", ",", "\"\<Distance (km)\>\""}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"pltNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"threeEffectiveList", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "}"}], ",", "threekList", ",", 
      "threeaList", ",", "threephiList", ",", "thetamVRes", ",", 
      "endpointNRes", ",", "\"\<List 4;\>\"", ",", "Blue", ",", 
      "oneListTicks", ",", "\"\<Distance (km)\>\""}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"pltNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"threeEffectiveList", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", "threekList", ",", 
      "threeaList", ",", "threephiList", ",", "thetamVRes", ",", 
      "endpointNRes", ",", "\"\<List 2;\>\"", ",", "Blue", ",", 
      "oneListTicks", ",", "\"\<Distance (km)\>\""}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"pltNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"threeEffectiveList", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "}"}], ",", "threekList", ",", 
      "threeaList", ",", "threephiList", ",", "thetamVRes", ",", 
      "endpointNRes", ",", "\"\<List 3;\>\"", ",", "Blue", ",", 
      "oneListTicks", ",", "\"\<Distance (km)\>\""}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.672170560683609*^9, 3.672170617927017*^9}, {
   3.672170654675604*^9, 3.672170677442169*^9}, {3.672180071849427*^9, 
   3.672180103895178*^9}, {3.6721801374795713`*^9, 3.6721802517682247`*^9}, {
   3.6721802877911787`*^9, 3.672180288147915*^9}, {3.672182808719634*^9, 
   3.672182825157139*^9}, {3.672491463981265*^9, 3.6724914652293787`*^9}, {
   3.6724916519058933`*^9, 3.672491672416481*^9}, {3.6725968876069193`*^9, 
   3.672596917739201*^9}, 3.672597308450025*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"widthNList", "[", 
    RowBox[{
     RowBox[{"threeEffectiveList", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", "threekList", ",", "threeaList", 
     ",", "threephiList", ",", "thetamVRes"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6708138067661943`*^9, 3.6708138120782833`*^9}, 
   3.6708138423700037`*^9, {3.672424953789987*^9, 3.672425027995537*^9}, {
   3.6724251100204782`*^9, 3.672425119970437*^9}, {3.6725969360671673`*^9, 
   3.672596938885219*^9}, {3.672597112044509*^9, 3.672597112962186*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.1731965472051151`*^-7", ",", "0.0018223805718123422`", ",", 
   "1.042531867467103`*^-7", ",", "0.009389738711012943`"}], "}"}]], "Output",\

 CellChangeTimes->{3.672425028456712*^9, 3.672425077889124*^9, 
  3.672425120455587*^9, 3.672426233574478*^9, 3.672596942363285*^9, 
  3.672597261657177*^9, 3.67260564618416*^9, 3.67261866238663*^9, 
  3.672662034504002*^9, 3.672753303784562*^9, 3.6727716663515863`*^9, 
  3.67277228023274*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Destruction of Resonance", "Chapter",
 CellChangeTimes->{{3.672512334437126*^9, 3.672512347844564*^9}}],

Cell["\<\
First of all we have to have an idea of the range of the solution (in unit of \
km)\
\>", "Text",
 CellChangeTimes->{{3.672617998631699*^9, 3.6726180245176477`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"MeVInverse2km", "[", 
    RowBox[{"endpointNRes", "/", 
     RowBox[{"OmegaMatter", "[", 
      RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], "]"}]}], 
    "]"}], ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"MeVInverse2km", "[", 
   RowBox[{"endpointNRes", "/", 
    RowBox[{"OmegaMatter", "[", 
     RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], "]"}]}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.672618013537023*^9, 3.672618015640609*^9}, {
  3.672618116934998*^9, 3.672618205400324*^9}, {3.6726182528566227`*^9, 
  3.672618312039991*^9}, {3.672618362110424*^9, 3.6726183776839657`*^9}, {
  3.6726184368981447`*^9, 3.672618440346528*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{"\<\"4.9\"\>", "\[Times]", 
    SuperscriptBox["10", "\<\"8\"\>"]}],
   4.901219162883848*^8,
   AutoDelete->True],
  ScientificForm[#, 2]& ]], "Output",
 CellChangeTimes->{
  3.672618017270853*^9, {3.67261812511481*^9, 3.6726182057228003`*^9}, {
   3.6726182544865713`*^9, 3.672618315458926*^9}, {3.672618364864678*^9, 
   3.672618368466236*^9}, {3.672618433866877*^9, 3.672618440914122*^9}, 
   3.672618662407926*^9, 3.672662034528751*^9, 3.672753303847168*^9, 
   3.672771666372149*^9, 3.672772280259392*^9, 3.672774393091085*^9, 
   3.672776465869973*^9}],

Cell[BoxData["4.901219162883848`*^8"], "Output",
 CellChangeTimes->{
  3.672618017270853*^9, {3.67261812511481*^9, 3.6726182057228003`*^9}, {
   3.6726182544865713`*^9, 3.672618315458926*^9}, {3.672618364864678*^9, 
   3.672618368466236*^9}, {3.672618433866877*^9, 3.672618440914122*^9}, 
   3.672618662407926*^9, 3.672662034528751*^9, 3.672753303847168*^9, 
   3.672771666372149*^9, 3.672772280259392*^9, 3.672774393091085*^9, 
   3.672776465876987*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
     RowBox[{"First", "@", 
      RowBox[{"solNum", "[", 
       RowBox[{
       "twokList", ",", "twoaList", ",", "twophiList", ",", "thetamVRes", ",",
         "endpointNRes"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2000", ",", "100"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.672605364283371*^9, 3.672605407937139*^9}, {
  3.672605438841955*^9, 3.672605524521022*^9}, {3.672605819258065*^9, 
  3.672605824630645*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.68757858958594`", ",", "0.8886496590507257`", ",", 
   "0.07106112834677368`", ",", "0.40818548849257086`", ",", 
   "0.9932233667327627`", ",", "0.25229110913070885`", ",", 
   "0.15924063519140624`", ",", "0.9442972501218387`", ",", 
   "0.5315591496316111`", ",", "0.015916308167461778`", ",", 
   "0.7602197863332465`", ",", "0.7780346324780764`", ",", 
   "0.02545817995631418`", ",", "0.4898831931046475`", ",", 
   "0.9502070768774195`", ",", "0.1881804243794657`", ",", 
   "0.2507114391157669`", ",", "0.9879221157441499`", ",", 
   "0.44591969040053814`", ",", "0.05569732413113528`"}], "}"}]], "Output",
 CellChangeTimes->{{3.672605466998516*^9, 3.672605525448679*^9}, 
   3.6726056467431917`*^9, 3.6726057093980827`*^9, 3.672605825570232*^9, 
   3.672618662621711*^9, 3.672662035065743*^9, 3.672753304691709*^9, 
   3.672771667229273*^9, 3.6727722810547543`*^9, 3.67277647010579*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"probTransitListData", "[", 
   RowBox[{
   "kNList_", ",", "aNList_", ",", "phiNList_", ",", "thetam_", ",", 
    "endpoint_", ",", 
    RowBox[{"step_:", "1"}], ",", 
    RowBox[{"startpoint_:", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "thetaVResM", ",", "thetamVResM", ",", "omegaVResM", ",", 
      "endpointNResM", ",", "twokListM", ",", "twoaListM", ",", 
      "twophiListM"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"twokListM", "=", "kNList"}], ";", "\[IndentingNewLine]", 
     RowBox[{"twoaListM", "=", "aNList"}], ";", "\[IndentingNewLine]", 
     RowBox[{"twophiListM", "=", "phiNList"}], ";", "\[IndentingNewLine]", 
     RowBox[{"thetaVResM", "=", "thetaV"}], ";", "\[IndentingNewLine]", 
     RowBox[{"thetamVResM", "=", "thetam"}], ";", "\[IndentingNewLine]", 
     RowBox[{"omegaVResM", "=", "omegaV"}], ";", "\[IndentingNewLine]", 
     RowBox[{"endpointNResM", "=", "endpoint"}], ";", 
     RowBox[{"(*", 
      RowBox[{"1600", "*", "15"}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", "2"}], 
         "/.", 
         RowBox[{"First", "@", 
          RowBox[{"solNum", "[", 
           RowBox[{
           "kNList", ",", "aNList", ",", "phiNList", ",", "thetam", ",", 
            "endpoint"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "startpoint", ",", "endpoint", ",", "step"}], 
        "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6725123497808027`*^9, 3.672512467028035*^9}, {
   3.672512681001955*^9, 3.672512893237748*^9}, {3.6725129589830713`*^9, 
   3.6725129899959097`*^9}, {3.6725847388670883`*^9, 3.672584758859685*^9}, {
   3.672589406792136*^9, 3.672589413715433*^9}, {3.672596116167404*^9, 
   3.672596134580284*^9}, 3.672597943500099*^9, {3.672597995627121*^9, 
   3.6725980012177267`*^9}, {3.672605207319189*^9, 3.672605320828054*^9}, {
   3.672605531073683*^9, 3.6726055485778313`*^9}, 3.672605585422867*^9, {
   3.672605733228571*^9, 3.672605739560617*^9}, 3.672605802062255*^9, {
   3.672606171947105*^9, 3.672606173855735*^9}}],

Cell["Now obtain amplitude of the transitions as a function of k2", "Text",
 CellChangeTimes->{{3.672606108208427*^9, 3.67260613015991*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"k1MaxAmpListDatak1", "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "2", ",", "0.01"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k1MaxAmpListDatax", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"k1", ",", 
     RowBox[{"{", 
      RowBox[{"k1", ",", 
       RowBox[{"k1MaxAmpListDatak1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"k1MaxAmpListDatak1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"k1MaxAmpListDatak1", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"k1MaxAmpListData", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"probTransitListData", "[", 
      RowBox[{
       RowBox[{"{", "k1", "}"}], ",", "oneaList", ",", "onephiList", ",", 
       "thetamVRes", ",", "endpointNRes", ",", "10", ",", "0"}], "]"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"k1", ",", 
      RowBox[{"k1MaxAmpListDatak1", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"k1MaxAmpListDatak1", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"k1MaxAmpListDatak1", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k1MaxAmpListDataFullTicks", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k1", ",", 
       RowBox[{"ScientificForm", "[", 
        RowBox[{
         RowBox[{"MeVInverse2km", "[", 
          RowBox[{"2", 
           RowBox[{"Pi", "/", 
            RowBox[{"(", 
             RowBox[{"k1", "*", 
              RowBox[{"OmegaMatter", "[", 
               RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], 
               "]"}]}], ")"}]}]}], "]"}], ",", "2"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k1", ",", 
       RowBox[{"k1MaxAmpListDatak1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"k1MaxAmpListDatak1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"k1MaxAmpListDatak1", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k1MaxAmpListDataTicks", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"k1MaxAmpListDataFullTicks", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "@", "k1MaxAmpListDataFullTicks"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Length", "@", "k1MaxAmpListDataFullTicks"}], ")"}], "/", 
         "5"}], "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.672606203923292*^9, 3.672606215182007*^9}, {
   3.672612410516416*^9, 3.6726124556069508`*^9}, {3.672613215287257*^9, 
   3.672613218804306*^9}, {3.672613421705111*^9, 3.672613492749791*^9}, {
   3.672613534193227*^9, 3.672613538146393*^9}, {3.672613582437557*^9, 
   3.672613618264553*^9}, {3.672614165438299*^9, 3.672614165708144*^9}, 
   3.672614202496846*^9, {3.672783032884569*^9, 3.6727830481795893`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToString", "[", 
  RowBox[{"NumberForm", "[", 
   RowBox[{
    RowBox[{"ScientificForm", "[", 
     RowBox[{
      RowBox[{"Chop", "[", 
       RowBox[{"MeVInverse2km", "[", 
        RowBox[{"endpointNRes", "/", 
         RowBox[{"OmegaMatter", "[", 
          RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], "]"}]}],
         "]"}], "]"}], ",", 
      RowBox[{"NumberFormat", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#1", "<>", "\"\<e\>\"", "<>", "#3"}], "&"}], ")"}]}]}], 
     "]"}], ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.672756270879983*^9, 3.672756293230966*^9}, {
  3.672756327821224*^9, 3.672756349322412*^9}}],

Cell[BoxData["\<\"9.8e7\"\>"], "Output",
 CellChangeTimes->{{3.6727562837223682`*^9, 3.672756293541772*^9}, {
   3.672756328414813*^9, 3.672756349679686*^9}, 3.672771825201271*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k1MaxAmpListDataListLogPlot", "=", 
  RowBox[{"ListLogPlot", "[", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"k1MaxAmpListDatax", ",", "k1MaxAmpListData"}], "}"}]}], "]"}],
     ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<\[FilledSquare]\>\"", ",", " ", "Small", ",", " ", "Blue"}], 
      "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"\"\<Transition Amplitude (within [0,\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{"ScientificForm", "[", 
          RowBox[{
           RowBox[{"Chop", "[", 
            RowBox[{"MeVInverse2km", "[", 
             RowBox[{"endpointNRes", "/", 
              RowBox[{"OmegaMatter", "[", 
               RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], 
               "]"}]}], "]"}], "]"}], ",", 
           RowBox[{"NumberFormat", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#1", "<>", "\"\<e\>\"", "<>", "#3"}], "&"}], ")"}]}]}],
           "]"}], ",", "2"}], "]"}], "]"}], "<>", "\"\<]km)\>\""}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Transition Amplitude\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<k(\!\(\*SubscriptBox[\(\[Omega]\), \(m\)]\))\>\"", ",", 
         "\"\<Fluction Wavelength (km)\>\""}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "k1MaxAmpListDataTicks"}], "}"}]}], "}"}]}],
     ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ","}], "*)"}], 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "18"}]}], "}"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "60"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Max", "@", 
          RowBox[{"probTransitListData", "[", 
           RowBox[{
            RowBox[{"{", "0.5", "}"}], ",", "oneaList", ",", "onephiList", 
            ",", "thetamVRes", ",", "endpointNRes", ",", "10", ",", "0"}], 
           "]"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"probTransitListData", "[", 
           RowBox[{
            RowBox[{"{", "1", "}"}], ",", "oneaList", ",", "onephiList", ",", 
            "thetamVRes", ",", "endpointNRes", ",", "10", ",", "0"}], 
           "]"}]}]}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.672612493088212*^9, 3.6726126132901697`*^9}, {
   3.6726127004093847`*^9, 3.672612746551901*^9}, 3.672613203374658*^9, {
   3.672613746374048*^9, 3.6726137539226723`*^9}, {3.672613827706348*^9, 
   3.672613830410623*^9}, {3.6726140459107027`*^9, 3.672614104882908*^9}, {
   3.672614171650818*^9, 3.6726141753057613`*^9}, {3.672618038802083*^9, 
   3.6726180928943777`*^9}, {3.6726183274820843`*^9, 3.67261833102171*^9}, {
   3.672618452624691*^9, 3.672618478967856*^9}, {3.672661815215879*^9, 
   3.6726618453758793`*^9}, 3.672756309599641*^9, 3.672756357801194*^9}],

Cell[BoxData[
 RowBox[{"$Aborted", "[", "]"}]], "Output",
 CellChangeTimes->{{3.672612571119699*^9, 3.672612606735202*^9}, 
   3.672612746968081*^9, 3.672613204137968*^9, 3.6726137570389833`*^9, 
   3.672613830737492*^9, {3.672614076849638*^9, 3.672614105769655*^9}, 
   3.672614176848844*^9, 3.672614327034639*^9, {3.672618078977785*^9, 
   3.672618093236505*^9}, 3.672618331891385*^9, {3.6726184610347958`*^9, 
   3.672618480937292*^9}, 3.6726186694087877`*^9, 3.672661845783505*^9, 
   3.6726622579823313`*^9, 3.672753464725956*^9, 3.6727563115274343`*^9, 
   3.672756359718299*^9, 3.6727718307911253`*^9}]
}, Open  ]],

Cell["For Two frequencies", "Text",
 CellChangeTimes->{{3.672614231463368*^9, 3.672614236870508*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"k2MaxAmpListDatak1", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2MaxAmpListDatak2", "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "1.1", ",", "0.01"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2MaxAmpListDatax", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"k2", ",", 
     RowBox[{"{", 
      RowBox[{"k2", ",", 
       RowBox[{"k2MaxAmpListDatak2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"k2MaxAmpListDatak2", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"k2MaxAmpListDatak2", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.672614435638853*^9, 3.672614457675096*^9}, 
   3.672614801639612*^9, {3.672615034514056*^9, 3.6726150349907837`*^9}, {
   3.6726185635567627`*^9, 3.672618564482421*^9}, {3.672618874997772*^9, 
   3.672618875466626*^9}, {3.672661958201057*^9, 3.672661959238811*^9}, {
   3.672662342292427*^9, 3.672662343355606*^9}, {3.672768536591485*^9, 
   3.672768537561425*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"k2MaxAmpListData", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"probTransitListData", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k2MaxAmpListDatak1", ",", "k2"}], "}"}], ",", "twoaList", 
       ",", "twophiList", ",", "thetamVRes", ",", "endpointNRes", ",", "10", 
       ",", "0"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k2", ",", 
      RowBox[{"k2MaxAmpListDatak2", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"k2MaxAmpListDatak2", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"k2MaxAmpListDatak2", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2MaxAmpListDataFullTicks", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k2", ",", 
       RowBox[{"ScientificForm", "[", 
        RowBox[{
         RowBox[{"MeVInverse2km", "[", 
          RowBox[{"2", 
           RowBox[{"Pi", "/", 
            RowBox[{"(", 
             RowBox[{"k2", "*", 
              RowBox[{"OmegaMatter", "[", 
               RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], 
               "]"}]}], ")"}]}]}], "]"}], ",", "2"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k2", ",", 
       RowBox[{"k2MaxAmpListDatak2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"k2MaxAmpListDatak2", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"k2MaxAmpListDatak2", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2MaxAmpListDataTicks", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"k2MaxAmpListDataFullTicks", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "@", "k2MaxAmpListDataFullTicks"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Length", "@", "k2MaxAmpListDataFullTicks"}], ")"}], "/", 
         "5"}], "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6726142404552917`*^9, 3.672614251487273*^9}, {
  3.672614311749916*^9, 3.6726143249910297`*^9}, {3.6726143670142*^9, 
  3.6726144292258253`*^9}, {3.672614466341416*^9, 3.672614495578631*^9}, {
  3.672614616245576*^9, 3.672614678750197*^9}, {3.672614728863522*^9, 
  3.672614759628909*^9}, {3.67261483548787*^9, 3.67261483582712*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7713925363215773`", ",", "0.7847905461754843`", ",", 
   "0.7964672106762485`", ",", "0.8029944697871256`", ",", 
   "0.8098155012694717`", ",", "0.8144526960326602`", ",", 
   "0.8179793396339172`", ",", "0.8232138369313834`", ",", 
   "0.8235529145540987`", ",", "0.8258512366492545`", ",", 
   "0.8261414063007663`", ",", "0.8288736935877433`", ",", 
   "0.8308442569757868`", ",", "0.8330582649865711`", ",", 
   "0.8347415499768697`", ",", "0.835857247295592`", ",", 
   "0.8270095375272095`", ",", "0.8265661603620142`", ",", 
   "0.8282134740638153`", ",", "0.828644949183677`", ",", 
   "0.8244107194517681`", ",", "0.8286851024609019`", ",", 
   "0.8295806235628927`", ",", "0.8339600904803547`", ",", 
   "0.825046687970916`", ",", "0.826764068926409`", ",", "0.827101512273538`",
    ",", "0.8269279052076279`", ",", "0.8266129167587829`", ",", 
   "0.825874601136884`", ",", "0.8244864796278779`", ",", 
   "0.8258190316980274`", ",", "0.8261991708065014`", ",", 
   "0.8260214847890089`", ",", "0.8264020988545269`", ",", 
   "0.8260337515103097`", ",", "0.8293605196886245`", ",", 
   "0.8349950195126822`", ",", "0.8456237947235722`", ",", 
   "0.8812434045679465`", ",", "0.9528891779110468`", ",", 
   "0.950300066821279`", ",", "0.8733963288462628`", ",", 
   "0.8397868994156628`", ",", "0.8211603204598512`", ",", 
   "0.8092751678822219`", ",", "0.8003607017895326`", ",", 
   "0.793253747452876`", ",", "0.7863685086430053`", ",", 
   "0.7817836186177075`", ",", "0.7766468362636005`", ",", 
   "0.7713151772106301`", ",", "0.7679691942033201`", ",", 
   "0.7647937668539726`", ",", "0.7612894405055172`", ",", 
   "0.7577442952090861`", ",", "0.7534900669510067`", ",", 
   "0.7492532353343473`", ",", "0.7439836894557865`", ",", 
   "0.7398733270387563`", ",", "0.7315153365343188`", ",", 
   "0.727938141588211`", ",", "0.7214163521269681`", ",", 
   "0.7155250475550667`", ",", "0.7069819697262998`", ",", 
   "0.6918097616727944`", ",", "0.6973438259425457`", ",", 
   "0.6870709048797748`", ",", "0.6753933226788442`", ",", 
   "0.6669382144908733`", ",", "0.653747290254773`", ",", 
   "0.6436932510010216`", ",", "0.6301897947943752`", ",", 
   "0.616458464534381`", ",", "0.598183931313779`", ",", 
   "0.5842746832147229`", ",", "0.5669957571861585`", ",", 
   "0.5482670827292488`", ",", "0.5278396650649215`", ",", 
   "0.5048923586010355`", ",", "0.4830211298330198`", ",", 
   "0.45871430902632937`", ",", "0.43517129045859043`", ",", 
   "0.4119448258730848`", ",", "0.394970182351026`", ",", 
   "0.388075037985424`", ",", "0.4022876587759518`", ",", 
   "0.4579629656847418`", ",", "0.5905779333953124`", ",", 
   "0.836753309020312`", ",", "0.9999955685357004`", ",", 
   "0.8679987942262802`", ",", "0.6054797232958764`", ",", 
   "0.4860735477118214`", ",", "0.46055477887699364`", ",", 
   "0.48663381643331194`", ",", "0.539600650878192`", ",", 
   "0.6027255074074805`", ",", "0.6654685234164907`", ",", 
   "0.7238391531873601`", ",", "0.7759607386063763`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.672614686967559*^9, {3.672614735982334*^9, 3.672614768182032*^9}, 
   3.672614837002267*^9, 3.672614899059142*^9, 3.6726151016522303`*^9, 
   3.672618612318221*^9, 3.672618672114674*^9, 3.672618706339539*^9, 
   3.672618880729424*^9, 3.672661963326337*^9, 3.672662305531457*^9, 
   3.672662398465989*^9, 3.6727535498810797`*^9, 3.672768628560425*^9, 
   3.6727769485624847`*^9, 3.672779524145418*^9, 3.6727797152217617`*^9, 
   3.672780846354473*^9, 3.672782756424766*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<export/resonance-destruction/k2MaxAmpListData-k1-0.5-k2-0.5MSW-\
range480000.dat\>\"", ",", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"k2MaxAmpListDatax", ",", "k2MaxAmpListData"}], "}"}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.672779141208457*^9, 3.672779164141913*^9}, {
  3.672779200095189*^9, 3.672779282209812*^9}, {3.6727793421081047`*^9, 
  3.6727793688865*^9}, {3.672779439863789*^9, 3.672779443671194*^9}, {
  3.6727796651358957`*^9, 3.6727796656660023`*^9}, {3.672780022877308*^9, 
  3.672780024176876*^9}, {3.672781090972102*^9, 3.672781092110548*^9}}],

Cell[BoxData["\<\"export/resonance-destruction/k2MaxAmpListData-k1-0.5-k2-0.\
5MSW-range480000.dat\"\>"], "Output",
 CellChangeTimes->{3.6727791340390387`*^9, 3.6727792787481422`*^9, 
  3.672779552132311*^9, 3.6727798749293737`*^9, 3.672780846698155*^9, 
  3.672782756853653*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k2MaxAmpListDataListLogPlot", "=", 
  RowBox[{"ListLogPlot", "[", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"k2MaxAmpListDatax", ",", "k2MaxAmpListData"}], "}"}]}], "]"}],
     ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<\[FilledSquare]\>\"", ",", " ", "Small", ",", " ", "Blue"}], 
      "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"\"\<Transition Amplitude (k1=\>\"", "<>", 
      RowBox[{"ToString", "[", "k2MaxAmpListDatak1", "]"}], "<>", 
      "\"\<) (within [0,\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{"ScientificForm", "[", 
          RowBox[{
           RowBox[{"Chop", "[", 
            RowBox[{"MeVInverse2km", "[", 
             RowBox[{"endpointNRes", "/", 
              RowBox[{"OmegaMatter", "[", 
               RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], 
               "]"}]}], "]"}], "]"}], ",", 
           RowBox[{"NumberFormat", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#1", "<>", "\"\<e\>\"", "<>", "#3"}], "&"}], ")"}]}]}],
           "]"}], ",", "2"}], "]"}], "]"}], "<>", "\"\<]km)\>\""}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Transition Amplitude\>\"", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<k2(\!\(\*SubscriptBox[\(\[Omega]\), \(m\)]\))\>\"", ",", 
         "\"\<Fluction Wavelength (km)\>\""}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "k1MaxAmpListDataTicks"}], "}"}]}], "}"}]}],
     ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ","}], "*)"}], 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "18"}]}], "}"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "60"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"{", 
        RowBox[{"Max", "@", 
         RowBox[{"probTransitListData", "[", 
          RowBox[{
           RowBox[{"{", "k2MaxAmpListDatak1", "}"}], ",", "oneaList", ",", 
           "onephiList", ",", "thetamVRes", ",", "endpointNRes", ",", "10", 
           ",", "0"}], "]"}]}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.672614261218988*^9, 3.672614304309952*^9}, 
   3.672614699816526*^9, 3.6726185045788603`*^9, {3.672661873876753*^9, 
   3.672661890605041*^9}, 3.6727564299466267`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJw1lAtMU3cYxRGNU1BZkG7L5pigY7rNKIIGVDg+CI+J8hB0cbghgjoWBbOx
TVQmYlGGzjmn4CM+kREYviEolX8tj94ixVIqReTRllcLpS1jbHPCXHv5+JKb
m5vcnP855/fd6xaXFJlgb2dnl2C9bPdzZ21zHxlb5fEjUgWbH3NCMjxPBJ9k
t7s7BQp231XYH1FWgU9love/y5GzvGQ/B/U1McqD09/Jd69jxogy6xuP0PZW
aX7eR4+Zt5dtKrE47/HpI5G1bJ/LjSBtahV6LtwUlupkrHJ4nvWEajzI9t38
yQQZs4pZFaUQTTx6JXeIY5E2uQgOk//89R/Phxwb8yfDrMLKSStSOKZLtQnW
Ir1q2qB5mCO/dRjd9qP3Wr2U7bHZS5ZDkJV7W2h9HvNfj+2WLWlvzJEyO34U
GI2+VOhoJ6U8CnSF73c2JnMsWGs7oAH9IZ6utcUc5WsAZjuaj6zh2M8SWwAl
drxa77E0nKO8jTiyKkd8q5JjfBx1IxYMB3xwwJ2j/CrksyjH1dkce89mx/Up
lsmETXO/ljJeTvIUgcFPjgnEHNvOTxN2iQKPfqvgqB81Djr0Yn0ox2xqLjfU
uHd+W5x4oYz6akbxzIepB3Uc+8smN9yMHT+kZfftH+/vGabJ7O6kW/v05wVb
UFVkPnSqY7zPFrhpXWZPLuJYps2e8DmEBfb2YZkc+5DvtxU3C/TSsw4yVl9n
m1YkKuvyl1zkGF9fchumFN73apVyjI/r0o6881LfGQIp4+2VtUOya2RgZ3k1
4+ViOvBZs4NzZKKYeGiw9EF0dkVjAeXR4G7govh5piLio8HKgFjR0O5HlE8D
/69ehZy5UkO8tChwrFe3rZFRXi3yQgdiz3g+Jn5aJOlOHv9PUkf5dYi7vOpw
WYmc8XZO6LB7Y8rV09X1bExOB4+Ma+Wxl58wHq9XJ9Ym1DR5JygYj0/YiQ2B
BVn/3lEQ706UqOdWJXePfz9dsFtXpngNDcS/Cy98746c/6aByfn+unA13n9R
YXUD7UM3Xm+8WrslXEn7240vWWTMnVIl7Uc3DFpfw6qXSuq3B9ECaakhpZH2
pQcF24uiJsxUUd89mJq+/2FlpIr2pxfGPPtfpvSoqP9eZGwM9Zhe/pT2qRdn
0zbt2pDYRDz00Hom+rw0q4mHHqt1KkFOhZp46LFZ0jH3sLqZeOiR5GIyjC56
RjwMcDDtPaZybyEeBsz6vKY4/4vnjK+v34BNy108MktaGR/Xrw/BYTklmfI2
4tEHXdysfVULO4hHH5qqb2qnfa8hHv0IO3jpltteLfHoh19/V+rtFTri0Y+p
6+bHhC/vJB5GRA3F/3a9uot4GKEMia5vN3cTDyP0MSE+Szb1Eo8BfBwQlXTo
bQPxGIBoj3PN2uI++n8NYHH7xKytx4zEw4RzTgumiN81EQ8TnK6Hjq68aCIe
Jvh5CUZOzhkgHmaE7dydeGNUTzzMKG74afoFBy3xMCPaPid2yHv8f2VB1rmg
lD9+V1aM5bHAcEu5Mm2JhPhYIMrxEc9w0lA+CyYqI6K3Lu0lXhbseOD6sm1Q
T3ktcH6R+6zszV7iZ0HuqRV/B0k6Kf8gJm0+XvoqSEM8BxEgvncgdFkL9TGI
A7czjNdLVcR3EDPk9U6X/RXsf+DzY48=
        "]],
       FontSize->18]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], 
      StyleBox[GeometricTransformationBox[InsetBox[
         StyleBox["\<\"\[FilledSquare]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontSize->Small,
          FontColor->RGBColor[0, 0, 1]], {0., 0.}], CompressedData["
1:eJw1lHtQVGUYxhEcU1BpkK2mjESNtHIUQQdUeLwwXBLlImhjWIigRqPgFJWo
JCIooZmZgpfxisRAeIdBQb51uexZZHFZVhaRy+5y2V122V0iKhOy3cPLO/P9
cWbOPN/zPL/3HPe4pMgEBzs7uwTrmWA99tZz7qxt7iNjqzR+RCxj82NOiIbn
VcIn2f3uToGM3XfLNESUV+FTSeX73+VKWX6yn6PymhAVwenvFMxuYMaIcusb
j9DxVllB/kePmbeXbaqxOP/x6SOR9Wyf640gdWoN+i7czCzTSFj18DzrDbV4
kOO7+ZMJEmYVsyqKUelw9EreEMcibXIRHCb9+es/ng85NuZPgplF1RNXpHBM
k2oTrEd6zdRB8zBHfhswuu1H77U6Mdtjs5cshSA773am9XnMfyO2W7akvTFH
zOz4kWE0+lKRk52Y8sjQE77fxZjMsWC17YImGEI83epLOMrXBMxyMh9Zw7Gf
RbYAcux4td5jaThHeZtxZFWu8FY1x/g4ymYsGA744MBsjvIrUMCinFbncOw9
mx23p1gmyWyZ+7WY8XKipwgMfnJMIOTYdn5asKsy8Oi3Mo76UeKgoxbrQzlm
U3O9ocS989vihAsl1FcrSmY8TD2o4dhfNrnhVuz4IS2nf/94f88wVWJ3J93a
pz8v2IaaYvOhU13jfbbBXe06a1Ixx7Js9jKfI7PQ3j4si2Mf8v2242ahTnzW
UcIaG2zTjkR5Q8GSixzj60vuwOSi+17tYo7xcV07kX9e7DtdIGa8vfJOiHaN
DOysqGW8XEwXPmt1dIlMFBIPFZY+iM6pai6kPCrcDVwUP89UTHxUWBkQWzm0
+xHlU8H/q1chZ67UES81Cp0alR1rJJRXjfzQgdgzno+JnxpJmpPH/xM1UH4N
4i6vOlxeKmW8nRMa7N6YcvV0bSMbk9PAI+NaRezlJ4zH69WNtQl1Ld4JMsbj
y+zGhsDC7H/vyIh3N0qVc2uSe8e/nx7YrSuXvYYm4t+DF753R85/08SkfH89
uBrvv6ioton2oRevN1+t3xIup/3txZcsMuZOmZz2oxd6ta9+1Us59duHaIG4
TJ/STPvSh8LtxVETZiio7z5MSd//sDpSQfujhTHf/pfJfQrqX4uMjaEe0yqe
0j5pcTZt064NiS3EQwe1Z6LPS7OSeOiwWqMQ5FYpiYcOm0Vdcw8rW4mHDkmu
Jv3oomfEQw9H095jitltxEOPmZ/XlRR88Zzx9Rn02LTc1SOrtJ3xcf36ERyW
W5ol7SAe/dDEzdxXs7CLePSjpfameur3KuJhQNjBS7fc96qJhwF+hp7U2ys0
xMOAKevmx4Qv7yYeRkQNxf92vbaHeBghD4lu7DT3Eg8jdDEhPks2aYnHAD4O
iEo69LaeeAygco9L3dqSfvp/DWBxp0P21mNG4mHCOecFk4XvmoiHCc7XQ0dX
XjQRDxP8vAQjJ+cMEA8zwnbuTrwxqiMeZpQ0/TTtgqOaeJgRbZ8bO+Q9/r+y
IPtcUMofv8urxvJYoL8lX5m2RER8LKjM9RFOd1ZRPgsc5BHRW5dqiZcFOx64
vewY1FFeC1xe5D0rf1NL/CzIO7Xi7yBRN+UfxMTNx8teBamI5yAChPcOhC5r
oz4GceB2hvF6mYL4DmK6tNH5sr+M/Q/172OR
        "]],
       FontSize->18]}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.084375, -1.0262642504971444`},
  BaseStyle->{FontFamily -> "Arial", FontSize -> 18},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Transition Amplitude\"", TraditionalForm], None}, {
     FormBox[
     "\"k2(\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(m\\)]\\))\"", 
      TraditionalForm], 
     FormBox["\"Fluction Wavelength (km)\"", TraditionalForm]}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], None}, {Automatic, {{0.1, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"2.6\"", "\[Times]", 
             SuperscriptBox["10", "\"5\""]}], 256627.2352624902, AutoDelete -> 
           True], ScientificForm[#, 2]& ], TraditionalForm]}, {0.48, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"5.3\"", "\[Times]", 
             SuperscriptBox["10", "\"4\""]}], 53464.007346352126`, AutoDelete -> 
           True], ScientificForm[#, 2]& ], TraditionalForm]}, {0.86, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"3.\"", "\[Times]", 
             SuperscriptBox["10", "\"4\""]}], 29840.376193312815`, AutoDelete -> 
           True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       1.2400000000000002`, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"2.1\"", "\[Times]", 
             SuperscriptBox["10", "\"4\""]}], 20695.74477923308, AutoDelete -> 
           True], ScientificForm[#, 2]& ], TraditionalForm]}, {1.62, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"1.6\"", "\[Times]", 
             SuperscriptBox["10", "\"4\""]}], 15841.18736188211, AutoDelete -> 
           True], ScientificForm[#, 2]& ], TraditionalForm]}, {2., 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"1.3\"", "\[Times]", 
             SuperscriptBox["10", "\"4\""]}], 12831.36176312451, AutoDelete -> 
           True], ScientificForm[#, 2]& ], 
         TraditionalForm]}}}}, {{{{-0.916290731874155, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         TagBox[
          InterpretationBox["\"1.0\"", 1., AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.0498221244986778`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.7985076962177716, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5978370007556204, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.4307829160924542, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2876820724517809, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.16251892949777494`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.05129329438755058, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.04879016416943205, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.09531017980432493, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.13976194237515863`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1823215567939546, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, None}, {Automatic, {{0.1, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"2.6\"", "\[Times]", 
             SuperscriptBox["10", "\"5\""]}], 256627.2352624902, AutoDelete -> 
           True], ScientificForm[#, 2.]& ], TraditionalForm]}, {0.48, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"5.3\"", "\[Times]", 
             SuperscriptBox["10", "\"4\""]}], 53464.007346352126`, AutoDelete -> 
           True], ScientificForm[#, 2.]& ], TraditionalForm]}, {0.86, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"3.\"", "\[Times]", 
             SuperscriptBox["10", "\"4\""]}], 29840.376193312815`, AutoDelete -> 
           True], ScientificForm[#, 2.]& ], TraditionalForm]}, {
       1.2400000000000002`, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"2.1\"", "\[Times]", 
             SuperscriptBox["10", "\"4\""]}], 20695.74477923308, AutoDelete -> 
           True], ScientificForm[#, 2.]& ], TraditionalForm]}, {1.62, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"1.6\"", "\[Times]", 
             SuperscriptBox["10", "\"4\""]}], 15841.18736188211, AutoDelete -> 
           True], ScientificForm[#, 2.]& ], TraditionalForm]}, {2., 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"1.3\"", "\[Times]", 
             SuperscriptBox["10", "\"4\""]}], 12831.36176312451, AutoDelete -> 
           True], ScientificForm[#, 2.]& ], TraditionalForm]}}}}],
  FrameTicksStyle->Larger,
  GridLines->{None, {-0.0605273470195597}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{Automatic, Automatic}, {Automatic, 60}},
  ImageSize->800,
  LabelStyle->GrayLevel[0],
  Method->{},
  PlotLabel->FormBox[
   "\"Transition Amplitude (k1=0.5) (within [0,2.e8]km)\"", TraditionalForm],
  PlotRange->{{0.1, 1.1}, {-1.0099744124353478`, -4.452603964178106*^-6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{
  3.67261470239147*^9, {3.672614736405345*^9, 3.672614768654908*^9}, 
   3.672614899490122*^9, 3.672615102203134*^9, 3.672618506193306*^9, 
   3.6726186126422653`*^9, 3.672618672217822*^9, 3.6726187069648943`*^9, 
   3.6726188810662537`*^9, 3.6726618910255632`*^9, 3.6726619636768837`*^9, 
   3.67266230605231*^9, 3.672662399494248*^9, 3.672753550788677*^9, 
   3.672756432069683*^9, 3.672768629955315*^9, 3.672776950877686*^9}]
}, Open  ]],

Cell["Make Plots of some of the k\[CloseCurlyQuote]s", "Text",
 CellChangeTimes->{{3.672614137690092*^9, 3.672614145248569*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pltNum", "[", 
  RowBox[{
   RowBox[{"{", "0.5", "}"}], ",", "oneaList", ",", "onephiList", ",", 
   "thetamVRes", ",", "endpointNRes", ",", "\"\<Only 1\>\"", ",", "Blue", ",",
    "None", ",", "None"}], "]"}]], "Input",
 CellChangeTimes->{{3.672514065940442*^9, 3.672514122628439*^9}, {
  3.6725141852742653`*^9, 3.6725141914671097`*^9}, {3.672514258164775*^9, 
  3.672514280740324*^9}, {3.67258446991914*^9, 3.6725844783219233`*^9}, {
  3.6725846361142607`*^9, 3.672584639736661*^9}, {3.6725961728800163`*^9, 
  3.672596177717061*^9}, {3.672769057225172*^9, 3.6727690579032907`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {}, 
        {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
+tFF/kqR+3hhlRBkK14u3FhLw/rT6z/ppArAbHLJfDqXhmZRm7f76AohbPud
f64NNGz8WnviwikBVDkLfks103DOF4/tVysFMJV0drq0TaSHxuHDJJHf1Ns4
P+y7aHjrYt/cD7YCcJTCb2J9ov2M9zfm5Aog16xd/fcgDbu2GVUva+XDzGOv
K+OjNPQ3+rBbcFQAh1mr3g8KRX4PHL2rYCWAp4uz+9u+0fDCeEf87Ro+dBge
3cCbpOGTIMM2BWcBbA3qP0P5RcOdB9PJQeN8uFXjH1f2R8TPJbvJqXA+VP2R
a8qdS0fFnVLepcsEsORAoWSaGB0dHaqEhfJ8sPQ2M41fQkeOpq6chh4fkgr5
4U+W03Hlqofl5CA+8L+H0oNX0VFKWWH3SOEYaO3cKOYrQ0fmZMq2Ils+BLpW
6t2Qo6NZn8eQoiof2Jmn/R3l6bhTIr3oWdQYyI5MlNko0rGk7mxcvSYfLm5+
8tNkMx3vcS8+mLQdgxwHld0G2+jYwT6r2aMoOm8SKTf3qdNxleUDjZPPxsCw
83z29l10tOJd9YyOGoWoNbOjSnvo6HI0O1Nr+Rh0WMcqy+2jY5dQn7hw0xhs
eaFxccVBOj6SNCJMnx0F93p24nw9Oqq/bFs7T3YMKle6dEwb0BE7Vm2j+43C
4hML5L4cFcUvI+X1fR0By0eJp/qN6fjcgzO2LGwUEmn7n7WY0dH80G8FiSsj
MLagicO2pOPpsZXTMi9F57u+2zLSaTouDftlMjA2AvfviR8tOSPCN/P6IHV6
GGor3gdnn6ej99uYzMefRuC/GX1CiiMd03992zfv6gg4aHf9ib1Mx8uyJavu
pgxDjofP/sfX6Bi94NStj6dH4Fee9O3Am3S8NsrSu3l8GAy+5ubf9qAj4/HX
6uXSwxCldnz8mjcdHZa7Hz4QMwztLkNqDn50/Et4+nzf7SFQfn/fxTqAjkEL
b9PurBiGgKd2JnOT6DhBXee4yFB0X+NMPZp6K8q3vzxPGDsIq8Wf0fjv6dh/
KTtqT8QAOBxTX9D7gY6beq3gyulByA6lY1MuHY89/BHB7x+AadLFu6x8Om6s
51AH5w2Awdx/pTXFdMxXXrZygjQAT3TjpwrL6UiJCZAsDe+Htjt7ND9U0/HF
m/wzV271w+ZS3o0kEh21Lkj+3DzTDzenrma9oNGxQesCVZ/bB+Wai0YfsehI
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
dVzv3eqEu3H/FLWk2fg08rzuogddoP/b7+dcWTZu3C723ci6C9od+J/6l7Dx
Yk6twH60E8LeH3pYIcfG4+skfHZad4P6kkavJAU29iyTNlh4owuI83uMLiqy
MaNulp9hRDcEfKtY7KjMxjhcsbBkTjcobNnSv3EFG2dVdG59qdgN5Y+yChes
Yuonxf2O2NMDx/+qRvFV2FjJ+d5xwLsbFhxIcPu8mo03bNvYrR49kFu0eNNT
NTb2luxdM4/dDc7LbooGr2X2S/s4Z7Z9D0wPnt66bx0bd8eaNqqv6YXU9oA3
m9azcXX2yYdqhj1gsfV7qMQGNt6SaP22dWcv/Ew64vB9IxtThPfZn8zpgQfT
m9WqddioFv99DnmhF9DN+t8zXTa26B5PPNbeC70fPxMh+mycN+2X0q7ZvXBz
BTw7sIWNRv3GFTM39YHW1Zxz+oZsnPk2fuushF5o6FHbLYVs1FOcuzfoYh8E
mSQrDm9l46tIPcsfF/pgxXOZn1+N2ZjVet7+HrN/1azITy+2M/ysyladWsGF
Ux4zH17dwcYH6mrSDpf6QOpLoJerGRsHKu6TD2y5ULh6eKvBTjZSQyYzJxZw
4dB1j8Wyu9lof3X1xEBtH8zmtXJ/WrDxufvbOocZ/fBqp21hvSWjlxU2jut2
cMEmvToy3Zqpb+d4wXphP0yIG7mF27DxSraMU0EaFxJP5ukctmNjTYbHBvUq
LpjUaoiiAxsVTh/ufV3eD3yNlJalTmzcbM1/TQ1z4U7k0jdj+5h5aTZd/lva
D7pD0aHkfjZWd00l+O3th1bL2Q6vD7KxayWuN/jQD6FvgtRuuLJxu3ltZb/r
AKxZNDrl7sbGVUt5D07e6Id63xOE0RE2SpIX2pt9B8Cf7EhROMrGsBHtC4tn
DIDcRodzEx5sHKGWrd0YMwBld2t30cfZ+C5/W/rStgHwGN2mmOXJRiFjzscb
igMwz65g5JYXG6cc04TLlvMgO3f9p2On2Bg6MOPVwYwBEApQ8FI6w8aS6gcP
6nbw4FnD3a1//dj4eLxWruvDAOzSE1vceJaN5dPCrAyqeTB8/zI3+xwbZacl
ZPUa8yB+YqwgKpDxa/XWzLavPDDc5xXpeZGNnvtCZk6k8qC7oPuQ6SU2frw6
U/OrGw+uy+3TWXGZjVKFqQ7q+/mw7iJrjtAVNvZ1nutbU8SDu+fuhRChbJy4
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
PvbPm4Opx1xNbJ13w/8Ad3ua5g==
          "]]}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      BaseStyle->{FontFamily -> "Arial", FontSize -> 18},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"Transition Probability\"", TraditionalForm], None}, {
         FormBox["\"x\"", TraditionalForm], None}},
      FrameTicks->{{Automatic, None}, {Automatic, None}},
      FrameTicksStyle->Larger,
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{Automatic, Automatic}, {Automatic, 60}},
      ImageSize->800,
      LabelStyle->GrayLevel[0],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotLabel->None,
      PlotRange->{{0, 24000}, {0., 0.9414492607151332}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     StyleBox["\<\"Only 1\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Scaled[{0.5, 1.01}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   BaseStyle->{FontFamily -> "Arial", FontSize -> 18},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox["\"Transition Probability\"", TraditionalForm], None}, {
      FormBox["\"x\"", TraditionalForm], None}},
   FrameTicks->{{Automatic, None}, {Automatic, None}},
   FrameTicksStyle->Larger,
   ImagePadding->All,
   ImageSize->800,
   LabelStyle->GrayLevel[0],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->None,
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        Line[CompressedData["
1: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
+tFF/kqR+3hhlRBkK14u3FhLw/rT6z/ppArAbHLJfDqXhmZRm7f76AohbPud
f64NNGz8WnviwikBVDkLfks103DOF4/tVysFMJV0drq0TaSHxuHDJJHf1Ns4
P+y7aHjrYt/cD7YCcJTCb2J9ov2M9zfm5Aog16xd/fcgDbu2GVUva+XDzGOv
K+OjNPQ3+rBbcFQAh1mr3g8KRX4PHL2rYCWAp4uz+9u+0fDCeEf87Ro+dBge
3cCbpOGTIMM2BWcBbA3qP0P5RcOdB9PJQeN8uFXjH1f2R8TPJbvJqXA+VP2R
a8qdS0fFnVLepcsEsORAoWSaGB0dHaqEhfJ8sPQ2M41fQkeOpq6chh4fkgr5
4U+W03Hlqofl5CA+8L+H0oNX0VFKWWH3SOEYaO3cKOYrQ0fmZMq2Ils+BLpW
6t2Qo6NZn8eQoiof2Jmn/R3l6bhTIr3oWdQYyI5MlNko0rGk7mxcvSYfLm5+
8tNkMx3vcS8+mLQdgxwHld0G2+jYwT6r2aMoOm8SKTf3qdNxleUDjZPPxsCw
83z29l10tOJd9YyOGoWoNbOjSnvo6HI0O1Nr+Rh0WMcqy+2jY5dQn7hw0xhs
eaFxccVBOj6SNCJMnx0F93p24nw9Oqq/bFs7T3YMKle6dEwb0BE7Vm2j+43C
4hML5L4cFcUvI+X1fR0By0eJp/qN6fjcgzO2LGwUEmn7n7WY0dH80G8FiSsj
MLagicO2pOPpsZXTMi9F57u+2zLSaTouDftlMjA2AvfviR8tOSPCN/P6IHV6
GGor3gdnn6ej99uYzMefRuC/GX1CiiMd03992zfv6gg4aHf9ib1Mx8uyJavu
pgxDjofP/sfX6Bi94NStj6dH4Fee9O3Am3S8NsrSu3l8GAy+5ubf9qAj4/HX
6uXSwxCldnz8mjcdHZa7Hz4QMwztLkNqDn50/Et4+nzf7SFQfn/fxTqAjkEL
b9PurBiGgKd2JnOT6DhBXee4yFB0X+NMPZp6K8q3vzxPGDsIq8Wf0fjv6dh/
KTtqT8QAOBxTX9D7gY6beq3gyulByA6lY1MuHY89/BHB7x+AadLFu6x8Om6s
51AH5w2Awdx/pTXFdMxXXrZygjQAT3TjpwrL6UiJCZAsDe+Htjt7ND9U0/HF
m/wzV271w+ZS3o0kEh21Lkj+3DzTDzenrma9oNGxQesCVZ/bB+Wai0YfsehI
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
dVzv3eqEu3H/FLWk2fg08rzuogddoP/b7+dcWTZu3C723ci6C9od+J/6l7Dx
Yk6twH60E8LeH3pYIcfG4+skfHZad4P6kkavJAU29iyTNlh4owuI83uMLiqy
MaNulp9hRDcEfKtY7KjMxjhcsbBkTjcobNnSv3EFG2dVdG59qdgN5Y+yChes
Yuonxf2O2NMDx/+qRvFV2FjJ+d5xwLsbFhxIcPu8mo03bNvYrR49kFu0eNNT
NTb2luxdM4/dDc7LbooGr2X2S/s4Z7Z9D0wPnt66bx0bd8eaNqqv6YXU9oA3
m9azcXX2yYdqhj1gsfV7qMQGNt6SaP22dWcv/Ew64vB9IxtThPfZn8zpgQfT
m9WqddioFv99DnmhF9DN+t8zXTa26B5PPNbeC70fPxMh+mycN+2X0q7ZvXBz
BTw7sIWNRv3GFTM39YHW1Zxz+oZsnPk2fuushF5o6FHbLYVs1FOcuzfoYh8E
mSQrDm9l46tIPcsfF/pgxXOZn1+N2ZjVet7+HrN/1azITy+2M/ysyladWsGF
Ux4zH17dwcYH6mrSDpf6QOpLoJerGRsHKu6TD2y5ULh6eKvBTjZSQyYzJxZw
4dB1j8Wyu9lof3X1xEBtH8zmtXJ/WrDxufvbOocZ/fBqp21hvSWjlxU2jut2
cMEmvToy3Zqpb+d4wXphP0yIG7mF27DxSraMU0EaFxJP5ukctmNjTYbHBvUq
LpjUaoiiAxsVTh/ufV3eD3yNlJalTmzcbM1/TQ1z4U7k0jdj+5h5aTZd/lva
D7pD0aHkfjZWd00l+O3th1bL2Q6vD7KxayWuN/jQD6FvgtRuuLJxu3ltZb/r
AKxZNDrl7sbGVUt5D07e6Id63xOE0RE2SpIX2pt9B8Cf7EhROMrGsBHtC4tn
DIDcRodzEx5sHKGWrd0YMwBld2t30cfZ+C5/W/rStgHwGN2mmOXJRiFjzscb
igMwz65g5JYXG6cc04TLlvMgO3f9p2On2Bg6MOPVwYwBEApQ8FI6w8aS6gcP
6nbw4FnD3a1//dj4eLxWruvDAOzSE1vceJaN5dPCrAyqeTB8/zI3+xwbZacl
ZPUa8yB+YqwgKpDxa/XWzLavPDDc5xXpeZGNnvtCZk6k8qC7oPuQ6SU2frw6
U/OrGw+uy+3TWXGZjVKFqQ7q+/mw7iJrjtAVNvZ1nutbU8SDu+fuhRChbJy4
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
PvbPm4Opx1xNbJ13w/8Ad3ua5g==
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      BaseStyle -> {FontFamily -> "Arial", FontSize -> 18}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"Transition Probability", None}, {"x", None}}, 
      FrameTicks -> {{Automatic, None}, {Automatic, None}}, FrameTicksStyle -> 
      Larger, GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      ImagePadding -> {{Automatic, Automatic}, {Automatic, 60}}, ImageSize -> 
      800, LabelStyle -> GrayLevel[0], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 24000}, {0., 0.9414492607151332}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Style["Only 1", 
       RGBColor[0, 0, 1]]], {Top, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.672514093902286*^9, 3.672514122996368*^9}, {
   3.6725141870399933`*^9, 3.6725141919749937`*^9}, {3.6725142628846807`*^9, 
   3.6725142816028643`*^9}, {3.6725844733876343`*^9, 3.672584479116218*^9}, 
   3.672584644824*^9, 3.672596182777029*^9, 3.67259745599079*^9, 
   3.672597817929487*^9, 3.672605652660296*^9, 3.672618672638385*^9, 
   3.672753557600274*^9, 3.672769059244594*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"pltNum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.5", ",", "k2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "a2"}], "}"}], ",", "twophiList", ",", 
      "thetamVRes", ",", "endpointNRes", ",", 
      RowBox[{"ToString", "[", "k2", "]"}], ",", "Blue", ",", "None", ",", 
      "None"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k2", ",", "0.8"}], "}"}], ",", "0.0001", ",", "1", ",", 
      "0.0001"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a2", ",", "0.1"}], "}"}], ",", "0.001", ",", "0.2"}], "}"}]}],
    "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.672514290761341*^9, 3.6725142929801893`*^9}, {
   3.6725143943165417`*^9, 3.672514408091168*^9}, {3.6725156008414593`*^9, 
   3.672515601166766*^9}, 3.672515681605776*^9, {3.672517354890785*^9, 
   3.672517358630843*^9}, {3.672517591034277*^9, 3.672517603416925*^9}, 
   3.67251764617766*^9, 3.672517676335466*^9, {3.672517722479204*^9, 
   3.672517763706777*^9}, {3.6725184538321323`*^9, 3.67251845446245*^9}, {
   3.672584444968877*^9, 3.672584445786531*^9}, {3.672584486246828*^9, 
   3.67258448764957*^9}, {3.672584561157611*^9, 3.672584590048229*^9}, {
   3.672584650065853*^9, 3.672584666340087*^9}, {3.6725962012264547`*^9, 
   3.67259620874855*^9}, {3.672769076886684*^9, 3.6727690775588083`*^9}, 
   3.672771839946335*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"pltNum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.999", ",", "k2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.05"}], "}"}], ",", "twophiList", ",", 
      "thetamVRes", ",", "endpointNRes", ",", 
      RowBox[{"\"\<A1=A2=0.1; k1=0.999,\>\"", "<>", "\"\<k2=\>\"", "<>", 
       RowBox[{"ToString", "[", "k2", "]"}]}], ",", "Blue", ",", "None", ",", 
      "None"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k2", ",", "0.9", ",", "1", ",", "0.1"}], "}"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.67251330829443*^9, 3.672513382445033*^9}, {
   3.672513424459489*^9, 3.6725134456360073`*^9}, {3.672513517828857*^9, 
   3.672513534165299*^9}, {3.672513907879694*^9, 3.672513908300346*^9}, {
   3.672515269376534*^9, 3.6725152789475727`*^9}, {3.672515584647737*^9, 
   3.672515585927799*^9}, {3.672515647152486*^9, 3.672515666446447*^9}, {
   3.672515827638376*^9, 3.672515867771984*^9}, 3.672515937246038*^9, {
   3.672516783151258*^9, 3.672516784117888*^9}, {3.6725171830806303`*^9, 
   3.6725172084377003`*^9}, {3.672517304549377*^9, 3.672517311854594*^9}, {
   3.672517711076293*^9, 3.672517712994265*^9}, {3.672596246804163*^9, 
   3.672596255588477*^9}, 3.672769415558879*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"pltNum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.999", ",", "k2"}], "}"}], ",", "twoaList", ",", 
      "twophiList", ",", "thetamVRes", ",", "endpointNRes", ",", 
      RowBox[{"ToString", "[", "k2", "]"}], ",", "Blue", ",", "None", ",", 
      "None"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k2", ",", "0.0001", ",", "1", ",", "0.2"}], "}"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.672513974110515*^9, 3.672513975036388*^9}, {
   3.672514005168481*^9, 3.672514016116613*^9}, {3.67259626295848*^9, 
   3.6725962738595057`*^9}, 3.672769418364533*^9}],

Cell["Make a list plot of different ranges", "Text",
 CellChangeTimes->{{3.6727831155377197`*^9, 3.672783125624774*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  "\"\<export/resonance-destruction/k2MaxAmpListData-k1-0.5-k2-0.5MSW-\
range12000.dat\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.672783155076626*^9, 3.67278320524004*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "0.7682625765342412`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11`", ",", "0.7764967537156375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12000000000000001`", ",", "0.7819373161932358`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.13`", ",", "0.8026733786055953`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14`", ",", "0.8010451709367902`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15000000000000002`", ",", "0.810696787966978`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16`", ",", "0.8169060121079353`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17`", ",", "0.8198820845189745`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18`", ",", "0.8195380981855825`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19`", ",", "0.8242562789580954`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "0.8182917078918256`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21000000000000002`", ",", "0.8214139134636623`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.22`", ",", "0.8210807154143478`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23`", ",", "0.8249911931356204`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24000000000000002`", ",", "0.8287414131599821`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "0.8323198048361953`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.26`", ",", "0.8234108244859947`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27`", ",", "0.8146488697061196`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28`", ",", "0.8188755437684332`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29000000000000004`", ",", "0.8270022515667887`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.30000000000000004`", ",", "0.8240929119145418`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.31`", ",", "0.8257718540891614`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.32`", ",", "0.8154344573658612`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.33`", ",", "0.8326004423668188`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.33999999999999997`", ",", "0.8240288879305052`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.35`", ",", "0.8237717528562953`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.36`", ",", "0.8066706779819577`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.37`", ",", "0.8213797258707533`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.38`", ",", "0.8203908532405725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39`", ",", "0.8214721541876704`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "0.8219682164155568`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.41000000000000003`", ",", "0.8222133428661316`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.42000000000000004`", ",", "0.8194843698087795`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.43000000000000005`", ",", "0.8135077789514037`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.44000000000000006`", ",", "0.8023623827143774`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.45000000000000007`", ",", "0.8250360694081524`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.45999999999999996`", ",", "0.8090303911048352`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.47`", ",", "0.8210873697812081`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.48`", ",", "0.8415189939226149`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.49`", ",", "0.8641455922378318`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.9526664077817955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.51`", ",", "0.9469098604409634`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.52`", ",", "0.870096142268836`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.53`", ",", "0.8379421234928918`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.54`", ",", "0.8191513765104445`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.55`", ",", "0.8012300201332091`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.56`", ",", "0.7928729848187428`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5700000000000001`", ",", "0.7904396700855869`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.58`", ",", "0.7858154860671266`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.59`", ",", "0.7810767644936804`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6`", ",", "0.7740048427940287`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.61`", ",", "0.7685041043611447`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.62`", ",", "0.7636249860595408`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.63`", ",", "0.7637826054408096`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.64`", ",", "0.7575790471497649`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.65`", ",", "0.7527814465733248`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.66`", ",", "0.7473540457795853`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.67`", ",", "0.745090081682975`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6799999999999999`", ",", "0.7377209925639352`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.69`", ",", "0.729654866927571`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7`", ",", "0.7285283565126945`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.71`", ",", "0.7267795591375369`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.72`", ",", "0.7135508516629199`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.73`", ",", "0.7096296749195408`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.74`", ",", "0.7038699250628693`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", "0.6863476683445323`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.76`", ",", "0.6900240055241224`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.77`", ",", "0.670803910420273`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.78`", ",", "0.6746137586712948`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.79`", ",", "0.6624421090427399`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "0.6504562061752425`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8099999999999999`", ",", "0.6304142176946632`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.82`", ",", "0.6195648754587254`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.83`", ",", "0.6142885580141206`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.84`", ",", "0.5932710756937566`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.85`", ",", "0.5744741815672026`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.86`", ",", "0.5586977504095244`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.87`", ",", "0.5415023488073284`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.88`", ",", "0.5185678145610383`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.89`", ",", "0.5038226051070628`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9`", ",", "0.4817190451657506`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.91`", ",", "0.4491029611442992`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.92`", ",", "0.4105314034122039`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.93`", ",", "0.4087506307557675`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.94`", ",", "0.39018604816740654`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.95`", ",", "0.3757409669390137`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.96`", ",", "0.38164305841394586`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.97`", ",", "0.4579629666537856`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.98`", ",", "0.5761494613504635`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.99`", ",", "0.8341822069717587`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.9999590209163332`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.01`", ",", "0.8668630710757699`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.02`", ",", "0.5970111535487351`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.03`", ",", "0.4786199477528481`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.04`", ",", "0.440750495771773`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.05`", ",", "0.4765733531127519`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.06`", ",", "0.5390366060940859`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.07`", ",", "0.6012232641309515`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.08`", ",", "0.6585020279081577`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.09`", ",", "0.718182501022812`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "0.7722370167000474`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6727831756684113`*^9, 3.672783206089712*^9}}]
}, Open  ]],

Cell[BoxData["\:3001"], "Input",
 CellChangeTimes->{3.672783202221455*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<export/resonance-destruction/k2MaxAmpListData-k1-0.5-k2-0.5MSW-\
range12000.dat\>\"", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "Import", "[", 
      "\"\<export/resonance-destruction/k2MaxAmpListData-k1-0.5-k2-0.5MSW-\
range24000.dat\>\"", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "Import", "[", 
      "\"\<export/resonance-destruction/k2MaxAmpListData-k1-0.5-k2-0.5MSW-\
range48000.dat\>\"", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "Import", "[", 
      "\"\<export/resonance-destruction/k2MaxAmpListData-k1-0.5-k2-0.5MSW-\
range240000.dat\>\"", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "Import", "[", 
      "\"\<export/resonance-destruction/k2MaxAmpListData-k1-0.5-k2-0.5MSW-\
range480000.dat\>\"", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\[FilledSquare]\>\"", ",", " ", "Small", ",", " ", "Blue"}], 
       "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<\>\"", ",", " ", "Small", ",", " ", "Red"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\[FilledSquare]\>\"", ",", " ", "Small", ",", " ", "Orange"}], 
       "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\[FilledSquare]\>\"", ",", " ", "Small", ",", " ", "Black"}], 
       "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\[FilledSquare]\>\"", ",", " ", "Small", ",", " ", "Brown"}], 
       "]"}]}], "}"}], "*)"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"\"\<Transition Amplitude (k1=\>\"", "<>", 
     RowBox[{"ToString", "[", "k2MaxAmpListDatak1", "]"}], "<>", 
     "\"\<)\>\""}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Transition Amplitude\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<k2(\!\(\*SubscriptBox[\(\[Omega]\), \(m\)]\))\>\"", ",", 
        "\"\<Fluction Wavelength (km)\>\""}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "k1MaxAmpListDataTicks"}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ","}], "*)"}], 
     RowBox[{
      RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
      RowBox[{"FontSize", "\[Rule]", "18"}]}], "}"}]}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "60"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{"Max", "@", 
        RowBox[{"probTransitListData", "[", 
         RowBox[{
          RowBox[{"{", "k2MaxAmpListDatak1", "}"}], ",", "oneaList", ",", 
          "onephiList", ",", "thetamVRes", ",", "endpointNRes", ",", "10", 
          ",", "0"}], "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<[0,\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"ScientificForm", "[", 
             RowBox[{
              RowBox[{"Chop", "[", 
               RowBox[{"MeVInverse2km", "[", 
                RowBox[{"12000", "/", 
                 RowBox[{"OmegaMatter", "[", 
                  RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], 
                  "]"}]}], "]"}], "]"}], ",", 
              RowBox[{"NumberFormat", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#1", "<>", "\"\<e\>\"", "<>", "#3"}], "&"}], 
                ")"}]}]}], "]"}], ",", "2"}], "]"}], "]"}], "<>", 
         "\"\<]km\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<[0,\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"ScientificForm", "[", 
             RowBox[{
              RowBox[{"Chop", "[", 
               RowBox[{"MeVInverse2km", "[", 
                RowBox[{"24000", "/", 
                 RowBox[{"OmegaMatter", "[", 
                  RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], 
                  "]"}]}], "]"}], "]"}], ",", 
              RowBox[{"NumberFormat", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#1", "<>", "\"\<e\>\"", "<>", "#3"}], "&"}], 
                ")"}]}]}], "]"}], ",", "2"}], "]"}], "]"}], "<>", 
         "\"\<]km\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<[0,\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"ScientificForm", "[", 
             RowBox[{
              RowBox[{"Chop", "[", 
               RowBox[{"MeVInverse2km", "[", 
                RowBox[{"48000", "/", 
                 RowBox[{"OmegaMatter", "[", 
                  RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], 
                  "]"}]}], "]"}], "]"}], ",", 
              RowBox[{"NumberFormat", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#1", "<>", "\"\<e\>\"", "<>", "#3"}], "&"}], 
                ")"}]}]}], "]"}], ",", "2"}], "]"}], "]"}], "<>", 
         "\"\<]km\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<[0,\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"ScientificForm", "[", 
             RowBox[{
              RowBox[{"Chop", "[", 
               RowBox[{"MeVInverse2km", "[", 
                RowBox[{"240000", "/", 
                 RowBox[{"OmegaMatter", "[", 
                  RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], 
                  "]"}]}], "]"}], "]"}], ",", 
              RowBox[{"NumberFormat", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#1", "<>", "\"\<e\>\"", "<>", "#3"}], "&"}], 
                ")"}]}]}], "]"}], ",", "2"}], "]"}], "]"}], "<>", 
         "\"\<]km\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<[0,\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"ScientificForm", "[", 
             RowBox[{
              RowBox[{"Chop", "[", 
               RowBox[{"MeVInverse2km", "[", 
                RowBox[{"480000", "/", 
                 RowBox[{"OmegaMatter", "[", 
                  RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], 
                  "]"}]}], "]"}], "]"}], ",", 
              RowBox[{"NumberFormat", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#1", "<>", "\"\<e\>\"", "<>", "#3"}], "&"}], 
                ")"}]}]}], "]"}], ",", "2"}], "]"}], "]"}], "<>", 
         "\"\<]km\>\""}]}], "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Bottom"}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6727832167281523`*^9, 3.672783312996388*^9}, {
   3.672783349438505*^9, 3.672783499601942*^9}, {3.672783531098311*^9, 
   3.6727835592970953`*^9}, {3.672783596578094*^9, 3.672783607324541*^9}, 
   3.672783830054714*^9, {3.672783871759654*^9, 3.672783874119297*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.008333333333333333], AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJw1lHtQVHUcxVcqs6zUJMdUfGQh+WhJ0DCFkznxiNSgqEZxZLA1BVQcywcg
RYIoyugoww6KggOKiINkPnjJDwFh77Isyy6PZeWxL9iFhWXxFTUi7V6/fGd2
7j87555zPmfugvA9wSIngUAgsv8cz3MZjiuB1xTZyIpuBfs49FTVU7dyrAnN
eJLirmAlc5MsQcUVmGgzXwuMa2S50d5vtuVUosw/YfaVD2RsIKjY/o/7WLBq
U5JQJGOeHo6rxnxrt3NZh5TFOhf66WJq0Jt5I+mOnmPVT93sb3iAsYyW+NRI
jtnF7Ip1uHXep2T9IY4FO+SCJJj4JG3k03sS9tIfh9UPyz2XFXBMH+MQlMIi
2Oy97ROO/Mrg9Wd6YeFqju112ItugNtCv0ejWRLyL8fJF+rrWydLmIA/BYzZ
x6Xu8XWUR4GdQnGZskvC/HWOFzRh3QKvy2HeUsrXhH8ik1fJz3LsdJUjgBK/
jG1wXfmthPKqkLxWXFlULWF8nDYVdOES9dgfEsrfDE8FhPUuUjbPYWduCz7n
klo/3FfHeLmqFmRpMg+vqZWw7fy1Yle577H9Cgn104bJfnH5Xb/XM4eac2Gb
va9t4ZXC8b7USFwiyFv1I8eeOeSeqlEYfSN26lKO+muHV+nJcP+ZHPPhBTVw
39PscuSd8T41CNh+8K99sRw76rCX9BCxjdOsGyKlbDHfbwcuuiaafhLKmFzm
uA5EKGVXVlyUML6+6E6oZabbi+bXMz6ucxe+/kF8M8LOg7dX3IXkXTPTnGbU
Ml4utBv5QEh6URXx0GJlaciJCtVVyqPF377uP7tZC4iPFhszM613G+9TPi18
IscC0i/VEi8dOne2v/3g2HheHYKNbqNZW8b3qcNGUaZq+e0Gyq+HtHqhpf99
OePtnNLjqG/cmWUaOXspp4frkZyysOxGxuP1MCBQVNvqKVIwHl+SAVke+tNT
NAribUDCmXUHd37ZRHs0QrC+WPE6moi/EUKmLLpc08Qa+P6M8O0Y7ChbqqQ9
9CDElB8TkKOk/fYgKtEgftGspH30gJuVIm47oKJ+e5Gv+sZpZEkz7aUXMT5N
Z/2/aqa+e9EYONV8NaqZ9mPC3MUpHtkZLdS/Ccf+21xqftxCezLh8IPZj3Yf
aiUeZvj7XPLfP0NNPMww5qU/G6poIx5mlPokvFuX2k48zJhu+VX+3L2dePTh
WrxhTuBmDfHoQ+XB3Ip9Rx8yvj5LH/KcvgvzSu5kfFzvfly74DE/N6eLePRD
Hz4ntkbYTTz6Me/MVdfpt7XEw4LnM2ozVeU64mGB+fgWp0fZeuJhQcFva1Pf
uGQgHgNIbA1wPfVKD/EYgDIgRN411EM8BjD4xc2727aaiMcgXM6vLSq+0Ec8
BjFp/d4doYcH6Ps1CA9hxdR/sweIhxXnpiybVOliJR5WiBZd/l4SPEQ8rIh6
y3Z2lspKPIawccfuiMJRM/EYQn3oYMNIro54DCHESRz22LOOeNhQori+d3Xc
a5THhvci5ky7FVBFfGzonhfcIU7QUj4bjCesH61LMxEvGzprJgiOfNZPeW2I
X67u3HLXRPxsuBB0gIuqNVD+Yby6KfXOmJ+WeA7jz9l5yZPuaaiPYfSb70/I
ErYQ32FsH72ZVpCiYP8DniNnDQ==
          "]],
         FontSize->18]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        0.008333333333333333], AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJw1lHlQlHUYx1HHA2c8EkrNUGQ8kDRtBExIvqQw4sG4u6GW6eQFKDkjJCMm
aJaiGJCUpamJWt4IMo7SKrY/jj3el3NZjpXlcA/uvUfRCpHY14dnZmf/eef7
Pp/v55l35va9kujhbm5u0YM/1//5c655CG2tp+qlSs3mbT5V0uv7GMWj/NrS
FqnZw+mpZrFUhnC7LEWUUs2uxi8bq/2zCOu/W/X6ik8Fs4ilg08UI2dWXx38
y5n/YteU4u4L55jDkjKW7Jm30nBQjtD5HmUFRp6V9voOvkGBaVZpSuZXPBsM
G0xUYcQDy/dBy3kmccWJOUTl3/cK/Jtjb/bjcaF14zjvkTwzHnQFluGV5z/p
tl6O9q3AxvjcvLxgniW41ouvxLOvz1/8Ip2j/asgKT8TuDlYxdyEUSO6r/lQ
yxYV8aiRbRQbLfEcizC4XlADU7e3V1kuR3w16On/o+2tETzLKnEBaHDkp/45
gSKOeGuxYRJflF/KMQFHW4vb8tGNA0c44q/DHqn1xt4NPJvhWmd6PY5mP2+Y
tU/FhLiSekyUzNQuUXIsRpgG/MApwhPUHPWjxT2lZK6fjGeuNM88LR5WDBxk
C4f6eoLrsbdDAzby7IUrrvcJfk9QDtenDPXXiI9u5u6ImMKzECFQB323x/Sj
44f61GFklO6zGI5jx13rpTbB0086bN1xjvkJ/TZjz3Vf7txYnlVVuKYZzm24
FpDNMaG++Bb4pDbJm1QcE3A9WxG16+y9uEEfwnrSVrw7r/i32EIFE+I2P8Wt
Xdkr9PuKyIceB9ZFpstqbxKPHjOdS3f62nLIjx6zc1MV0upi4tMjZv/zVWeu
KMmXAe8o+8Yp0njiNeBzW3/imovl5M+A0OThE4aVVhC/EZELYlNMU6uYsM4p
I96TbM+8pKhib+KMSNofXbj1cjUT9C42Yat7UYN/tJoJ+lJN+KSRZU3Qqcm3
CfnjLWm3gmroHtuQnfe2ZjRqyH8b7nvL86/Ja1il0F8bdiRPmXJHUUP30A6P
2P5ftog0dL/tKNxx+IbykYbuox3hVbkFoX0a6rcDwTf7wpxFtXQvHbCsTM+K
CK+jvjtwrIQ9kUvq6H46cXv2mqOXQuqp/04s+aCsZVJhPd1TJyTey9s/jWsg
H124mvV4zEu7lnx0oTxTE/FMpiUfXZhWKZqkymwkH11ICF63+9WiRvLRDWli
8V9rNunIRzf0HofmBOxpYkJ95m7oEm40pj1oZgLush6k8jBkVLaQjx64BxhK
5Aufko8evB5IvDTmgJ58mDFjflKczzcG8mHG2qD6LPFaI/kwQ530LCoy2EQ+
LLgr3mv+cUQ7+bAgxPrz41Z7O/mwoGi1d0bcl53kwwrR5NPaE6u7yYcVE68G
lnl3mOn7ZUW+1j1sW4aFfNiwNKaayb1s5MOGsGmRo0bNs5MPG+78d7LnZL6V
fNix3teZk9vfRT7sQKLp9IdnDOTDDse3O18+9x/6XjmQHfPxXPfLGtkbHgdy
RmaEFKwqIT8OnCzw2LQgSk98DmxwpF84u6KTfDlwuFIkPrakh3gdCN/564lH
kzvJnwPv707eHqs0Eb8TS72m+g6s1JNPJ5L+Fc0KD9JRH07k5MgnTpDVkV8n
Zu+Or2oLU7P/AZiYZfo=
          "]],
         FontSize->18]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        0.008333333333333333], AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJw1lAtMU3cYxRGNU1BZkG7L5pigY7rNKIIGVDg+CI+J8hB0cbghgjoWBbOx
TVQmYlGGzjmn4CM+kREYviEolX8tj94ixVIqReTRllcLpS1jbHPCXHv5+JKb
m5vcnP855/fd6xaXFJlgb2dnl2C9bPdzZ21zHxlb5fEjUgWbH3NCMjxPBJ9k
t7s7BQp231XYH1FWgU9love/y5GzvGQ/B/U1McqD09/Jd69jxogy6xuP0PZW
aX7eR4+Zt5dtKrE47/HpI5G1bJ/LjSBtahV6LtwUlupkrHJ4nvWEajzI9t38
yQQZs4pZFaUQTTx6JXeIY5E2uQgOk//89R/Phxwb8yfDrMLKSStSOKZLtQnW
Ir1q2qB5mCO/dRjd9qP3Wr2U7bHZS5ZDkJV7W2h9HvNfj+2WLWlvzJEyO34U
GI2+VOhoJ6U8CnSF73c2JnMsWGs7oAH9IZ6utcUc5WsAZjuaj6zh2M8SWwAl
drxa77E0nKO8jTiyKkd8q5JjfBx1IxYMB3xwwJ2j/CrksyjH1dkce89mx/Up
lsmETXO/ljJeTvIUgcFPjgnEHNvOTxN2iQKPfqvgqB81Djr0Yn0ox2xqLjfU
uHd+W5x4oYz6akbxzIepB3Uc+8smN9yMHT+kZfftH+/vGabJ7O6kW/v05wVb
UFVkPnSqY7zPFrhpXWZPLuJYps2e8DmEBfb2YZkc+5DvtxU3C/TSsw4yVl9n
m1YkKuvyl1zkGF9fchumFN73apVyjI/r0o6881LfGQIp4+2VtUOya2RgZ3k1
4+ViOvBZs4NzZKKYeGiw9EF0dkVjAeXR4G7govh5piLio8HKgFjR0O5HlE8D
/69ehZy5UkO8tChwrFe3rZFRXi3yQgdiz3g+Jn5aJOlOHv9PUkf5dYi7vOpw
WYmc8XZO6LB7Y8rV09X1bExOB4+Ma+Wxl58wHq9XJ9Ym1DR5JygYj0/YiQ2B
BVn/3lEQ706UqOdWJXePfz9dsFtXpngNDcS/Cy98746c/6aByfn+unA13n9R
YXUD7UM3Xm+8WrslXEn7240vWWTMnVIl7Uc3DFpfw6qXSuq3B9ECaakhpZH2
pQcF24uiJsxUUd89mJq+/2FlpIr2pxfGPPtfpvSoqP9eZGwM9Zhe/pT2qRdn
0zbt2pDYRDz00Hom+rw0q4mHHqt1KkFOhZp46LFZ0jH3sLqZeOiR5GIyjC56
RjwMcDDtPaZybyEeBsz6vKY4/4vnjK+v34BNy108MktaGR/Xrw/BYTklmfI2
4tEHXdysfVULO4hHH5qqb2qnfa8hHv0IO3jpltteLfHoh19/V+rtFTri0Y+p
6+bHhC/vJB5GRA3F/3a9uot4GKEMia5vN3cTDyP0MSE+Szb1Eo8BfBwQlXTo
bQPxGIBoj3PN2uI++n8NYHH7xKytx4zEw4RzTgumiN81EQ8TnK6Hjq68aCIe
Jvh5CUZOzhkgHmaE7dydeGNUTzzMKG74afoFBy3xMCPaPid2yHv8f2VB1rmg
lD9+V1aM5bHAcEu5Mm2JhPhYIMrxEc9w0lA+CyYqI6K3Lu0lXhbseOD6sm1Q
T3ktcH6R+6zszV7iZ0HuqRV/B0k6Kf8gJm0+XvoqSEM8BxEgvncgdFkL9TGI
A7czjNdLVcR3EDPk9U6X/RXsf+DzY48=
          "]],
         FontSize->18]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
        0.008333333333333333], AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJw1lHtMU3cYhtnQCqK4CYQxUSEoN1G5yBJFfTNARZw4wYluXgDBaAYKapjg
dTrURAUvwwx08wIiTCWTixZ0/gSEHhSwBaS0grSFlgJtLTpm3KaOc/z4kqb/
nLzne97na13jtkcmfGxhYZEw/OG/c3P4qcAX45ynXL0gZV7rsqqHPO8h1Hnb
qs5RT1jFlIyBleL7ePO9Udvo0sjykxeMlec9QMxuTcohhwZmWCkefqIKvxe2
vrzt/pjNCeCnBtGiVUsHQx+xPfbFS9TpD3FpccHPuXfqWc2Q5/AbarFpq6H9
RyPHhsOGEyVwvlPRk/GKY5F83EoO5pP9mrWXOfZhv3ooY/+6qNrJMU06H/gI
tW/YjekijvZtwGmH346NqpSwFH695EbIqnxmzt4uof2bsMz6qLWTm4RZCCPF
nXK5wf9VHfFIMV05fr8xmWNhav4FMixXjHNKj+WIT4bPysLLA104dqqaB2jG
vInT1PcncMTbgiB2z/+fKo4JOPIWRJydEZzlwBF/K0S3nM4EmyVsKr/OlKe4
7RgRVhsnYUJc9VMsqCnM9ivg2GZh2pA9c75evHakHzkeboxyXPQVx/g0+2I5
ulZ87SqKGumrHfOLPa6UJXHsbz5uqB11Ihv3/r0j/SkQs8Qq/9Myji0UApU4
4CT+9fCDkT6VcM5tF4+5zrEj/HoZz7C+rPujFUc45i3024FMd49M2y0ca2rg
pwPvdm7/wWk4X6gvuRP7ziau0b2UMAHX/jlyNl1ZPsFBwoT1xM8xNjFBbrW/
lglx67oQ+rnj7T9mPSAfKvgmW73XVRUSjwr+8eHxnqbr5EcFRVvOjKRvq4hP
hZD8tHlH1taRLzVUOlmWOqSeeNWYK55oWeD3mPypsaIsbd/VnAbi18DQ96jn
z5uNTFgnS4PJW+3mnK5tYh/iNFAUxH1TeugJE/QGdMPO90TTeF8pE/RldMPk
EW91Ik9KvrthrYyfnqod+f30oPSAwiLBT0b+e+C/fpH04i4ZaxT668HgFdFo
yyoZ3YMWtrei3n05uZnuV4v1F1I3FKU1031oEVgd7plobKZ+dUhSMy//sBa6
Fx2W2JSv3jCqlfrW4eAx+Zizka10P70oiljmNVbXSv334q3Ro/F94lO6p17Y
nI87qAxsIx96BHkV2Px7Tk4+9AiZpEyfM1FOPvSwHSicOXd0O/nQI7rydWqZ
j4J89KG0UOY15KgkH32IxsKTlQHPmFDfQB+atccss/06mIC7oB+Ha7zTas90
ko9+ZIWkDgVYdJGPfqT+977UereKfAzguShy2/HVavIxAJ/KonNTPTXkYwBb
9s4oWRbUTT4MyJ0aE5y0o4d8GFCxMWqrtEtLPgywc71sq4joJR9GVKSkLr35
Wk8+jFgTnLzDlNdP/19GuLTlbnaONZAPEwpcH056VWEkHybcjSlJcQs3kQ8T
vB07Vx13M5KPF+hI/GlL8Vs9+XiBPTufbH5sUpGPF/jOe+HR0dI68mFG0o3o
XUnlzfc/8Jjxy7WEDdd8q8mPGebZYUE+tiriM+NlSZGfZFIv+TLDzt0UeKlF
T7xmnLdWOTaN7yV/ZsROCy2sZN3EP4hcb9/67AAV+RzEjqNv1ac+UVIfg8h0
C4ufVdJKfgdhb5lytytIyv4HszFPMg==
          "]],
         FontSize->18]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
        0.008333333333333333], AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJw1lHlMk3cYx/HY4gGoCE7UIUSdqNMgoE5J/XpON3WmeAJG7DZcGNOBc6CI
omYYjAc6jRNxc5HOOJhcghRFfwJCX67ScthyCKUtbS0ttBy6TNDR14cnafrP
m+/7fL6fp/X6+sfAsJEODg5hQx/7941k+xTgyNF9Zddvytm8PUnF/d6FuFSb
+8Y2uoYVeCR0CiVPMP/YxcpBz2omjhSMU6Y+xQPt99PPuVUxs1Ay9EQR3MVR
LqEOlczfzz4lkPzz2rJufQU75pqxoT32GQ6skI3Oyi9nJf3eQ28oRc3D3TV/
6zk2FDaUKMV638pNCxo5FmiPE3IY0C2JbTzOsff7lcMr/ta1nYc4pom1B1ag
oi+obvaHHO1bBZ8TwQd2SKQsyr5eZDWmZqYe9hJJaX8Z9uUO/jzgIWUO/Mhx
LP+RaVlvGfHIoc9SrzRv5djGdvsLFFhz/U7xCRFHfArc6MsLWO3JsUvFdoBa
FMw894nPBI5461ARLQxyzucYj6OsQ6og/F6yE0f89XDYcjtsiUnKZtrX8WjA
k/Pum+8JpIyPK27Ag7K+zPLfObafn+dYdEUQeydouB8ltiem792wmWP2NNcM
JQK3Vn3lvW24LxUiWrasFody7JU9rl+F1VuezjXHDffXiCnXdCfH53JsJR/Y
hIZP16Z4xg/32YTTHe8mOUZy7Ix9vYRm6HzNwVNjODaf77cFY6wptnffcUxW
ZZ8W5CkEXEo0x/j6Il/g14PhwYYeKeNxXVthi9CIx7pJGb+epBVj3Fpyk6JL
GR+3pw3SjHzxlUVPyYcaj3OEs93z7hKPGqFi17MS9zTyo0ZL59n/0rYVEZ8a
e4/8eeNMUBn5aofopOLgqc/Kibcdr27ed1k5pZL8tePg0W37fU9VEb8GLPSh
MOavasavk6TBYHrPDM8SGXsfp8G39ZLswtM1jNfrp4WocWrwvoVyxutL0KIw
YjBC8IecfGux88KcwZiO4d+PDreKU3OD5ynIvw7bfXrCkg8rWDXfnw5vsur0
LkUKuocOJIWLjgg/rqX77YBnHAvJPVpL99GBu7cvfLPLUkv96vFa5rRzxsY6
uhc9FsQFjcTIeupbj0MjdH1JgfV0PwbMscYtHKWvp/4NmDJOUxTyQwPdkwHi
89awuYufkw8jnN/lbPztqpJ8GFH5qk3l6KIkH0YsTTuj9v9ART6MUE8YVzHR
o5F8vERsXrgyxtxIPl5iUrdbQolfM+Pr63yJx77xa7IXtzAeV2BCYn8O53Th
Bfkw4VlIa/rb/lbyYULD6Njlv0SpyUcnxqskTqt828lHJxw3Td68wFtDPjqh
DOmdsSNASz7MKDQXmESHdOTDjDkr7uecaO0gH2as740u/fwLA/mw4LZsIGWV
1Ug+LIgav9+t7ZaJ/r8s2Ht81il/kZl8dOHfsao2U4GFfHTho0drB3y+7CIf
XYgY5eJzdpaFfHTj7fLLERmDRvLRjV6vnurdTWry0Y1F64ym6fIy8mFFPHd1
+5prtU/e81jx2jlbX+VRTH6smKZ7qPV3VhOfFZmykrR0NwP5siIZvgt/qjES
rxWJuwSVAY4G8mfFsj2X45ofa4nfhmkjnJZe9FOTTxtUWVmlNyc2UR82xE+b
fMc1s5782vCoIntDc4Cc/Q/X7GK4
          "]],
         FontSize->18]}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.008333333333333333], AbsoluteThickness[1.6], 
        StyleBox[GeometricTransformationBox[InsetBox[
           StyleBox["\<\"\[FilledCircle]\"\>",
            StripOnInput->False,
            FontSize->8.96], {0., 0.}], CompressedData["
1:eJw1lHlQlHUcxlcss6zUJMdUPLKQPFoSNEzhyZw4IjUoqlEcGWxNARXH8gCk
UA5FGR1l2EFRcEARcZDMg0t+CAj7Lsuy7HKuHHvBLiwsi1fUiLT7+uU78/tv
53mf5/k8swtD9waKJgoEApHtTbA9B9s7n26/YnhMlY2s7FawT4JPVz5zKcPa
4PSnya4KVjwvwRxQVI5JVtN1/5gGlhPp+VZrdgVKfePmXP1QxgYCimy/eICF
qzcnCEUy5u5mvyossHQ7lnZIWbRjgY82qhq9GTcT7uo4VvXMxfaFhxhLb45N
CeeYTcymWIvbF7yKNxzmWKBdLkCCSU9TRz67L2Gv/HFY86jMfXk+x3RRdkEp
zIItnts/5civDB5H0woK1nBsn91eZD1cFvk8Hs2UkH85Tr1su7FtioQJ+FPA
kHVC6hpbS3kU2CUUlyq7JMxXa/9AI9Yv9LgS4imlfI34Jzxptfwcx85U2gMo
8evYRudV30korwpJ68QVhVUSxsdpVUEbKmkb+1NC+ZvgroCwzknK5tvtzGvG
F1xCy0f7axkvV9mMTHXGkbU1EraDvxbsLvM+fkAhoX5aMcUnJq/rjzpmV3Ms
aLX1tT20QjjeVxvilwpyV//Esed2uWdtKIi8GT1tGUf9tcOj5FSo7yyOefGC
arjubXI69u54n2r47Tj01/5ojiXa7SU8QnTDdMvGcClbwvfbgUvO8cafhTIm
l9mvA2FK2dWVlySMry+yE20y453FC+oYH9exC9/8KL4VZuPB2yvqQtLuWakO
M2sYLxfcjTwgKK2wknhosKok6GS56hrl0eBvb9dfXCz5xEeDTRkZlnsNDyif
Bl7hY35pl2uIlxadu9rfeXh8PK8WgQaX0cyt4/vUYpMoQ7XiTj3l10Fatcjc
/4Gc8XZO65DoHXN2uVrOXsnp4HwsuzQkq4HxeN308BfVtLiLFIzHl6BHppvu
zFS1gnjrEXd2/aFdXzXSHg0QbChSvIFG4m+AkCkLr1Q3snq+PwO8OwY7Spcp
aQ89CDLmRfllK2m/PYiI14tfNilpHz3gZieLWw+qqN9e5Km+dRhZ2kR76UWU
V+M536+bqO9eNPhPM12LaKL9GDFvSbJbVnoz9W/E8f+2lJieNNOejDjycM7j
PYdbiIcJvl6XfQ/MbCMeJhhy054PlbcSDxNKvOLeq01pJx4mzDD/Jn/h2k48
+nA9Vj/Xf4uaePSh4lBO+f7ER4yvz9yHXIfvQzySOhkf17Mf1y+6LcjJ7iIe
/dCFzo2uFnYTj37MP3vNecYdDfEw48XMmgxVmZZ4mGE6sdXhcZaOeJiR//u6
lDcv64nHAOJb/JxPT+whHgNQ+gXJu4Z6iMcABr+8dW/7NiPxGITThXWFRRf7
iMcgJm/YtzP4yAD9fw3CTVg+7d+sAeJhwfmpyydXOFmIhwWixVd+kAQOEQ8L
It62nputshCPIWzauSesYNREPIZQFzxYP5KjJR5DCHIQhzxxryUeVhQrbuxb
E/M65bHi/bC502/7VRIfK7rnB3aI4zSUzwrDScvH61ONxMuKzuoJgmOf91Ne
K2JXtHVuvWckflZcDDjIRdToKf8wXtuccnfMR0M8h3F0Tm7S5Ptq6mMY/aYH
EzKFzcR3GDtGb6XmJyvY/7MfZw8=
          "]],
         FontSize->18]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        0.008333333333333333], AbsoluteThickness[1.6], 
        StyleBox[GeometricTransformationBox[InsetBox[
           StyleBox["\<\"\[FilledSquare]\"\>",
            StripOnInput->False,
            FontSize->8.96], {0., 0.}], CompressedData["
1:eJw1lHlQ1GUcxlHGA2c8EkrNUHQ8kDRtBExIHlIY8WDc3VDLdPIClJwRkhET
NEtRDEjK0tRELW8EGUdpFduXY4/fj3NZjpXlcA/uXfYYRStE2v355Tvz/vfO
8z7P8/nOO2P7Xkm0u5ubW7TzDHOe4c5z/pxrHkJb66V6qVKzeZtPlfT5Pkbx
SL+2tEVq9nBaqlkslSHcJksRpVSzq/HLxmj/LML671a9vjKzglnEUueNYuTM
6q+DfznzX+yaUtx94Rh9WFLGkr3yVhoOyhE637OswMiz0j5f5wsKTO2VpmR+
xTOnmFNRBfcHlu+DlvNM4pITc4jKv+8d+DfH3vjjcaF141ifETwzHnQJluGV
1z/p1j6O/FZgY3xuXl4wzxJc9uIr8ezr8xe/SOfIfxUk5WcCNwermJswakT3
Nx9q2aKiPGpkG8VGSzzHIgyuB2pg6vbxLsvlKF8Negb+aHvLnWdZJa4AGhz5
aWBOoIijvLXYMJEvyi/lmBBHW4vb8lGNg0c4yl+HPdLeG3s38Gy6y860ehzN
ft4wa5+KCXIl9ZggmaFdouRYjDAN+IFThCeoOepHi3tKyVw/Gc9cal55Wjys
GDzIFg719QTXY2+HBmzk2QuXXN8T/J6gHK5PGeqvER/dzN0RMZlnIYKgDvpu
z2lHxw31qcOIKN1nMRzHjrvspTbBy086bN1xjvkJ/TZjz3Vf7twYnlVVuKYZ
jm24FpDNMaG++BbMTG2SN6k4JsT1akXUrrP34pw8BHvSVrw7r/i32EIFE+Q2
P8WtXdkr9PuKiIceB9ZFpstqb1IePWY4lu70teYQHz1m56YqpNXFlE+PmP3P
V525oiReBryj7B+rSOMprwGfWwcS11wsJ34GhCYPHz+stILyGxG5IDbFNKWK
CXZOGfGeZHvmJUUVeyNnRNL+6MKtl6uZgHexCVs9ihr8o9VMwJdqwieNLGu8
Tk28TcgfZ0m7FVRD+9iG7Ly3NaNQQ/zbcN9Hnn9NXsMqhf7asCN58uQ7ihra
h3Z4xg78skWkof1tR+GOwzeUjzS0H+0Ir8otCO3XUL8dCL7ZH+YoqqV96YBl
ZXpWRHgd9d2BYyXsiVxSR/vTiduz1xy9FFJP/XdiyQdlLRML62mfOiHxWd7+
aVwD8ejC1azHo1/atMSjC+WZmohnMi3x6MLUStFEVWYj8ehCQvC63a8WNRKP
bkgTi/9as0lHPLqh9zw0J2BPExPqM3dDl3CjMe1BMxPiLutBKg9DRmUL8eiB
R4ChRL7wKfHowevBxEujD+iJhxnT5yfFzfzGQDzMWBtUnyVeayQeZqiTnkVF
BpuIhwV3xXvNP7q3Ew8LQnp/ftxqayceFhSt9smI+7KTePRCNOm09sTqbuLR
iwlXA8t8Osz0f/UiX+sRti3DQjysWBpTzeTeVuJhRdjUyJEj59mIhxV3/jvZ
czK/l3jYsN7XkZM70EU8bECi6fSHZwzEwwb7tztfPvcf+q/syI75eK7HZY3s
TR47ckZkhBSsKiE+dpws8Ny0IEpP+ezYYE+/cHZFJ/Gy43ClSHxsSQ/ltSN8
568nHk3qJH52vL87eXus0kT5HVjqPcV3cKWeeDqQ9K9oVniQjvpwICdHPmG8
rI74OjB7d3xVW5ia/Q+tlGX8
          "]],
         FontSize->18]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        0.008333333333333333], AbsoluteThickness[1.6], 
        StyleBox[GeometricTransformationBox[InsetBox[
           StyleBox["\<\"\[FilledDiamond]\"\>",
            StripOnInput->False,
            FontSize->10.88], {0., 0.}], CompressedData["
1:eJw1lHtQVGUYxhEcU1BpkK2mjESNtHIUQQdUeLwwXBLlImhjWIigRqPgFJWo
JCIooZmZgpfxisRAeIdBQb51uexZZHFZVhaRy+5y2V122V0iKhOy3cPLO/P9
cWbOPN/zPL/3HPe4pMgEBzs7uwTrmWA99tZz7qxt7iNjqzR+RCxj82NOiIbn
VcIn2f3uToGM3XfLNESUV+FTSeX73+VKWX6yn6PymhAVwenvFMxuYMaIcusb
j9DxVllB/kePmbeXbaqxOP/x6SOR9Wyf640gdWoN+i7czCzTSFj18DzrDbV4
kOO7+ZMJEmYVsyqKUelw9EreEMcibXIRHCb9+es/ng85NuZPgplF1RNXpHBM
k2oTrEd6zdRB8zBHfhswuu1H77U6Mdtjs5cshSA773am9XnMfyO2W7akvTFH
zOz4kWE0+lKRk52Y8sjQE77fxZjMsWC17YImGEI83epLOMrXBMxyMh9Zw7Gf
RbYAcux4td5jaThHeZtxZFWu8FY1x/g4ymYsGA744MBsjvIrUMCinFbncOw9
mx23p1gmyWyZ+7WY8XKipwgMfnJMIOTYdn5asKsy8Oi3Mo76UeKgoxbrQzlm
U3O9ocS989vihAsl1FcrSmY8TD2o4dhfNrnhVuz4IS2nf/94f88wVWJ3J93a
pz8v2IaaYvOhU13jfbbBXe06a1Ixx7Js9jKfI7PQ3j4si2Mf8v2242ahTnzW
UcIaG2zTjkR5Q8GSixzj60vuwOSi+17tYo7xcV07kX9e7DtdIGa8vfJOiHaN
DOysqGW8XEwXPmt1dIlMFBIPFZY+iM6pai6kPCrcDVwUP89UTHxUWBkQWzm0
+xHlU8H/q1chZ67UES81Cp0alR1rJJRXjfzQgdgzno+JnxpJmpPH/xM1UH4N
4i6vOlxeKmW8nRMa7N6YcvV0bSMbk9PAI+NaRezlJ4zH69WNtQl1Ld4JMsbj
y+zGhsDC7H/vyIh3N0qVc2uSe8e/nx7YrSuXvYYm4t+DF753R85/08SkfH89
uBrvv6ioton2oRevN1+t3xIup/3txZcsMuZOmZz2oxd6ta9+1Us59duHaIG4
TJ/STPvSh8LtxVETZiio7z5MSd//sDpSQfujhTHf/pfJfQrqX4uMjaEe0yqe
0j5pcTZt064NiS3EQwe1Z6LPS7OSeOiwWqMQ5FYpiYcOm0Vdcw8rW4mHDkmu
Jv3oomfEQw9H095jitltxEOPmZ/XlRR88Zzx9Rn02LTc1SOrtJ3xcf36ERyW
W5ol7SAe/dDEzdxXs7CLePSjpfameur3KuJhQNjBS7fc96qJhwF+hp7U2ys0
xMOAKevmx4Qv7yYeRkQNxf92vbaHeBghD4lu7DT3Eg8jdDEhPks2aYnHAD4O
iEo69LaeeAygco9L3dqSfvp/DWBxp0P21mNG4mHCOecFk4XvmoiHCc7XQ0dX
XjQRDxP8vAQjJ+cMEA8zwnbuTrwxqiMeZpQ0/TTtgqOaeJgRbZ8bO+Q9/r+y
IPtcUMofv8urxvJYoL8lX5m2RER8LKjM9RFOd1ZRPgsc5BHRW5dqiZcFOx64
vewY1FFeC1xe5D0rf1NL/CzIO7Xi7yBRN+UfxMTNx8teBamI5yAChPcOhC5r
oz4GceB2hvF6mYL4DmK6tNH5sr+M/Q/172OR
          "]],
         FontSize->18]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
        0.008333333333333333], AbsoluteThickness[1.6], 
        StyleBox[GeometricTransformationBox[InsetBox[
           StyleBox["\<\"\[FilledUpTriangle]\"\>",
            StripOnInput->False,
            FontSize->10.24], {0., 0.}], CompressedData["
1:eJw1lHlQU1cYxbFoBFFsBYZSUWFQNlFZpDOKcqaAFaFiBSvaugCCo1NQUIcK
rtWizqjgUpyCtu4IVZnKogGtV0DIQxYTQEIiSBJICJDEoKWObdEmz49v5v73
5txzzu+7zzVhe3SSpYWFRZLpjDGdj0wnP888Ffh8ovP06xfEzGtdTvWw5wOE
OW9b1TX2KauYnjW4UvgQb7/Xq5tcmti11MUTpFcfIW63Ku2QQyPTrRSavqjC
74Vtr+66N7D5AeapQaxg1bKhsCdsj33xUmXmY1z6suDn/Hv1rGbY03RDLTZt
1XX8qOeYScykKILzvYrerNccizbLreRgPDmgWnuZYx/81UMe/9dFxU6OqTLN
gk9Q+5bdmiXgyG8jTjv8dmxspYilme2lNkFS5TNn3nYR+W9GpPVRayc3EbPg
R4x75VKd/+s6yiPGLPmk/fpUjoUrzRdIsFw20SkznqN8EnxaFlEe6MKxU9Xm
AC1YOGWm8uFkjvK2Iog98P+nimN8HGkros7ODslx4Ch/GwR3nM6EGEVshtnO
9Ge46xgVXpsgYrxc9TMsrinM9Svg2GZ+2pE7Z5FWuHa0Hykeb4xxXPIVx8xq
9sVSdK/42lUQM9pXBxYVe1wpS+HY32a54Q7UCWzcB/aO9idD3FKra5+UcSyY
F5TjgJPw18OPRvuUwzm/Qzj+JseOmO1lPcf6sp4xK45wzJvvtxPZ7h7Ztls4
1txonk6827n9ByeTPl9fahf2nU1eo3klYnxc+xfI23Rl+WQHEePtCV9gQnKS
1Gp/LePl1nUj7DPHu3/MfUQ8FPBNtXqvqSqkPAr4J0YkehpuEh8FZO15s1O+
raJ8CoRey1h4ZG0d8VJCoZHkKEPrKa8SC4RTLAv8GoifEivKMvZdz2uk/Cro
+p/0/nm7ifF2clSYttVu/unaZvZBTgVZQcI3pYeeMh5vQA/sfE80T/IVMx5f
Vg8MHolWJ66KiXcPrOWJs9LVo++nF6UHZBZJfhLi3wv/9UvEF3dJWBPfXy+G
rgjGWVZJaB/UsL0T8+6LaS20v2qsv5C+oSijhfZDjcDqCM9kfQv1q0GKknn5
h7fSvmiw1KZ89YaxbdS3BgePScefjW6j/elDUVSk1wRNG/XfhxG9R9P75Ge0
T32wOZ9wUB7YTjy0CPIqsPn3nJR4aBE6VZ45f4qUeGhhO1g4Z8G4DuKhRWzl
m/QyHxnx6EdpocRr2FFOPPoRi+CTlQHPGV/fYD9a1Mcsc/06GR938QAO13hn
1J7pIh4DyAlNHw6w6CYeA0j/732p9W4F8RjEC0H0tuOrlcRjED6VRedmeKqI
xyC27J1dEhnUQzx0yJ8RF5Kyo5d46FCxMWaruFtNPHSwc71sK4vqIx56VKSl
L7v9Rks89FgTkrrDcHWA/l96uLTnb3aO1xEPAwpcH099XaEnHgbcjytJc4sw
EA8DvB27Vh130xOPl+hM/mlL8YiWeLzEnp1PNzcYFMTjJb7zDj46TlxHPIxI
uRW7K6W85eGHPEb8ciNpww3fauJjhHFeeJCPrYLyGfGqpMhPNLWPeBlh524I
vNSqpbxGnLdWODZP6iN+RsTPDCusZD2Ufwj53r71uQEK4jmEHUdHlKc+llMf
Q8h2C0+cW9JGfIdgb5l2vztIzP4HyC1PNA==
          "]],
         FontSize->18]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
        0.008333333333333333], AbsoluteThickness[1.6], 
        StyleBox[GeometricTransformationBox[InsetBox[
           StyleBox["\<\"\[FilledDownTriangle]\"\>",
            StripOnInput->False,
            FontSize->10.24], {0., 0.}], CompressedData["
1:eJw1lHlQU1cYxXFpxwVQEayoRRi1olYHAbXKxONabdU6wRVwxLTFDqVasBYU
UdQpDo4LWh0rYmtHUsdCZRMkKHoFhDy2kLCYsAghCUkMARIW7VTQJs+Pb+b+
9+bcc87vu8/r6x8Dw0Y5ODiE2c4I2xlpOzeS7VOAI0f3lV2/KWfz9iQVD3gX
4lJt7hvr6BpW4JHQKZQ8wfxjFyuHPKuZOFIwTpn6FA+0308/51bFzEKJ7Ysi
uIujXEIdKpm/n31KIPnndde69RXsmGvGhvbYZziwQjY6K7+clQx4224oRc3D
3TV/6zlmE7MpSrHet3LTgkaOBdrlhBwGdUtiG49z7L2/cnjF37q28xDHNLF2
wQpU9AfVzf6QI79V8DkRfGCHRMqi7PYiqzE1M/Wwl0hK/mXYlzv086CHlDnw
I8ex/EemZX1llEcOfZZ6pXkrxza22y9QYM31O8UnRBzlU+BGf17Aak+OXSq2
B6hFwcxzn/hM4ChvHSqihUHO+Rzj4yjrkCoIv5fsxFH+ejhsuR22xCRlM+12
PBrw5Lz75nsCKePlihvwoKw/s/x3ju3n5zkWXRHE3gka7keJ7Ynpezds5phd
zTVDicCtVV95bxvuS4WIli2rxaEce2WXG1Bh9Zanc81xw/01Yso13cnxuRxb
yQs2oeHTtSme8cN9NuF0x7tJjpEcO2O3l9AMna85eGoMx+bz/bZgjCXF+u47
jsmq7NOCPIWAS4nmGF9f5Av8ejA82NArZXxc11ZYIzTisW5SxtuTtGKMW0tu
UnQp4+X2tEGakS++sugp8VDjcY5wtnveXcqjRqjY9azEPY34qNHSefa/tG1F
lE+NvUf+vHEmqIx4tUN0UnHw1GfllLcdr27ed1k5pZL4tePg0W37fU9VUX4N
WOhDYcxf1Yy3k6TBUHrvDM8SGXsvp8G39ZLswtM1jMfrp4WocWrwvoVyxuNL
0KIwYihC8IeceGux88KcoZiO4fejw63i1NzgeQrir8N2n96w5MMKVs33p8Ob
rDq9S5GC9qEDSeGiI8KPa2l/O+AZx0Jyj9bSfnTg7u0L3+zqqqV+9Xgtc9o5
Y2Md7YseC+KCRmJkPfWtx6ERuv6kwHraHwPmWOIWjtLXU/8GTBmnKQr5oYH2
yQDxeUvY3MXPiYcRzu9yNv52VUk8jKh81aZydFESDyOWpp1R+3+gIh5GqCeM
q5jo0Ug8XiI2L1wZY24kHi8xqcctocSvmfH1db7EY9/4NdmLWxgfV2BC4kAO
53ThBfEw4VlIa/rbgVbiYULD6Njlv0SpiUcnxqskTqt824lHJxw3Td68wFtD
PDqhDOmbsSNASzzMKDQXmESHdMTDjDkr7uecaO0gHmas74su/fwLA/Howm3Z
YMoqi5F4dCFq/H63tlsm+n91Ye/xWaf8RWbi0Y1/x6raTAVdxKMbHz1aO+jz
ZTfx6EbEKBefs7O6iEcP3i6/HJExZCQePejz6q3e3aQmHj1YtM5omi4vIx4W
xHNXt6+5VvvkfR4LXjtn66s8iomPBdN0D7X+zmrKZ0GmrCQt3c1AvCxIhu/C
n2qMlNeCxF2CygBHA/GzYNmey3HNj7WU34ppI5yWXvRTE08rVFlZpTcnNlEf
VsRPm3zHNbOe+FrxqCJ7Q3OAnP0P7Ohiug==
          "]],
         FontSize->18]}, {}}}, {}}, InsetBox[
     TemplateBox[{
      "\"[0,4.9e7]km\"","\"[0,9.8e7]km\"","\"[0,2.e8]km\"","\"[0,9.8e8]km\"",
       "\"[0,2.e9]km\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 18], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 18], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 18], FontSize -> 8.96,
                     Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 18], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 18], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 18], FontSize -> 8.96,
                     Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontSize -> 18], {
                    LineBox[{{0, 10.88}, {20, 10.88}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontSize -> 18], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontSize -> 18], FontSize -> 
                    10.88, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontSize -> 18], {
                    LineBox[{{0, 10.24}, {20, 10.24}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontSize -> 18], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontSize -> 18], FontSize -> 
                    10.24, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], FontSize -> 18], {
                    LineBox[{{0, 10.24}, {20, 10.24}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], FontSize -> 18], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDownTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], FontSize -> 18], FontSize -> 
                    10.24, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledUpTriangle]\"", ",", "10.24`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDownTriangle]\"", ",", "10.24`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.5, 0.01}], ImageScaled[{0.5, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0.084375, -1.0499009176012706`},
   BaseStyle->{FontFamily -> "Arial", FontSize -> 18},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Part[#, 1], 
       Exp[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Part[#, 1], 
       Exp[
        Part[#, 2]]}& )},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"Transition Amplitude\"", TraditionalForm], None}, {
      FormBox[
      "\"k2(\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(m\\)]\\))\"", 
       TraditionalForm], 
      FormBox["\"Fluction Wavelength (km)\"", TraditionalForm]}},
   FrameTicks->FrontEndValueCache[{{
       Charting`ScaledTicks[{Log, Exp}], None}, {Automatic, {{0.1, 
         FormBox[
          TagBox[
           InterpretationBox[
            RowBox[{"\"2.6\"", "\[Times]", 
              SuperscriptBox["10", "\"5\""]}], 256627.2352624902, AutoDelete -> 
            True], ScientificForm[#, 2]& ], TraditionalForm]}, {0.48, 
         FormBox[
          TagBox[
           InterpretationBox[
            RowBox[{"\"5.3\"", "\[Times]", 
              SuperscriptBox["10", "\"4\""]}], 53464.007346352126`, 
            AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
        0.86, 
         FormBox[
          TagBox[
           InterpretationBox[
            RowBox[{"\"3.\"", "\[Times]", 
              SuperscriptBox["10", "\"4\""]}], 29840.376193312815`, 
            AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
        1.2400000000000002`, 
         FormBox[
          TagBox[
           InterpretationBox[
            RowBox[{"\"2.1\"", "\[Times]", 
              SuperscriptBox["10", "\"4\""]}], 20695.74477923308, AutoDelete -> 
            True], ScientificForm[#, 2]& ], TraditionalForm]}, {1.62, 
         FormBox[
          TagBox[
           InterpretationBox[
            RowBox[{"\"1.6\"", "\[Times]", 
              SuperscriptBox["10", "\"4\""]}], 15841.18736188211, AutoDelete -> 
            True], ScientificForm[#, 2]& ], TraditionalForm]}, {2., 
         FormBox[
          TagBox[
           InterpretationBox[
            RowBox[{"\"1.3\"", "\[Times]", 
              SuperscriptBox["10", "\"4\""]}], 12831.36176312451, AutoDelete -> 
            True], ScientificForm[#, 2]& ], 
          TraditionalForm]}}}}, {{{{-0.916290731874155, 
         FormBox[
          TagBox[
           InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
         FormBox[
          TagBox[
           InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
         FormBox[
          TagBox[
           InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0., 
         FormBox[
          TagBox[
           InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.3862943611198906`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.0498221244986778`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.7985076962177716, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.5978370007556204, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.4307829160924542, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.2876820724517809, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.16251892949777494`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.05129329438755058, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.04879016416943205, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.09531017980432493, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.13976194237515863`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.1823215567939546, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}}, None}, {Automatic, {{0.1, 
         FormBox[
          TagBox[
           InterpretationBox[
            RowBox[{"\"2.6\"", "\[Times]", 
              SuperscriptBox["10", "\"5\""]}], 256627.2352624902, AutoDelete -> 
            True], ScientificForm[#, 2.]& ], TraditionalForm]}, {0.48, 
         FormBox[
          TagBox[
           InterpretationBox[
            RowBox[{"\"5.3\"", "\[Times]", 
              SuperscriptBox["10", "\"4\""]}], 53464.007346352126`, 
            AutoDelete -> True], ScientificForm[#, 2.]& ], 
          TraditionalForm]}, {0.86, 
         FormBox[
          TagBox[
           InterpretationBox[
            RowBox[{"\"3.\"", "\[Times]", 
              SuperscriptBox["10", "\"4\""]}], 29840.376193312815`, 
            AutoDelete -> True], ScientificForm[#, 2.]& ], 
          TraditionalForm]}, {1.2400000000000002`, 
         FormBox[
          TagBox[
           InterpretationBox[
            RowBox[{"\"2.1\"", "\[Times]", 
              SuperscriptBox["10", "\"4\""]}], 20695.74477923308, AutoDelete -> 
            True], ScientificForm[#, 2.]& ], TraditionalForm]}, {1.62, 
         FormBox[
          TagBox[
           InterpretationBox[
            RowBox[{"\"1.6\"", "\[Times]", 
              SuperscriptBox["10", "\"4\""]}], 15841.18736188211, AutoDelete -> 
            True], ScientificForm[#, 2.]& ], TraditionalForm]}, {2., 
         FormBox[
          TagBox[
           InterpretationBox[
            RowBox[{"\"1.3\"", "\[Times]", 
              SuperscriptBox["10", "\"4\""]}], 12831.36176312451, AutoDelete -> 
            True], ScientificForm[#, 2.]& ], TraditionalForm]}}}}],
   FrameTicksStyle->Larger,
   GridLines->{None, {-0.06052805400769599}},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{Automatic, Automatic}, {Automatic, 60}},
   ImageSize->800,
   LabelStyle->GrayLevel[0],
   Method->{},
   PlotLabel->FormBox["\"Transition Amplitude (k1=0.5)\"", TraditionalForm],
   PlotRange->{{0.1, 1.1}, {-1.0332358940119506`, -4.431474118592637*^-6}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], FontSize -> 18], 
         Line[CompressedData["
1:eJw1lHtQVHUcxVcqs6zUJMdUfGQh+WhJ0DCFkznxiNSgqEZxZLA1BVQcywcg
RYIoyugoww6KggOKiINkPnjJDwFh77Isyy6PZeWxL9iFhWXxFTUi7V6/fGd2
7j87555zPmfugvA9wSIngUAgsv8cz3MZjiuB1xTZyIpuBfs49FTVU7dyrAnN
eJLirmAlc5MsQcUVmGgzXwuMa2S50d5vtuVUosw/YfaVD2RsIKjY/o/7WLBq
U5JQJGOeHo6rxnxrt3NZh5TFOhf66WJq0Jt5I+mOnmPVT93sb3iAsYyW+NRI
jtnF7Ip1uHXep2T9IY4FO+SCJJj4JG3k03sS9tIfh9UPyz2XFXBMH+MQlMIi
2Oy97ROO/Mrg9Wd6YeFqju112ItugNtCv0ejWRLyL8fJF+rrWydLmIA/BYzZ
x6Xu8XWUR4GdQnGZskvC/HWOFzRh3QKvy2HeUsrXhH8ik1fJz3LsdJUjgBK/
jG1wXfmthPKqkLxWXFlULWF8nDYVdOES9dgfEsrfDE8FhPUuUjbPYWduCz7n
klo/3FfHeLmqFmRpMg+vqZWw7fy1Yle577H9Cgn104bJfnH5Xb/XM4eac2Gb
va9t4ZXC8b7USFwiyFv1I8eeOeSeqlEYfSN26lKO+muHV+nJcP+ZHPPhBTVw
39PscuSd8T41CNh+8K99sRw76rCX9BCxjdOsGyKlbDHfbwcuuiaafhLKmFzm
uA5EKGVXVlyUML6+6E6oZabbi+bXMz6ucxe+/kF8M8LOg7dX3IXkXTPTnGbU
Ml4utBv5QEh6URXx0GJlaciJCtVVyqPF377uP7tZC4iPFhszM613G+9TPi18
IscC0i/VEi8dOne2v/3g2HheHYKNbqNZW8b3qcNGUaZq+e0Gyq+HtHqhpf99
OePtnNLjqG/cmWUaOXspp4frkZyysOxGxuP1MCBQVNvqKVIwHl+SAVke+tNT
NAribUDCmXUHd37ZRHs0QrC+WPE6moi/EUKmLLpc08Qa+P6M8O0Y7ChbqqQ9
9CDElB8TkKOk/fYgKtEgftGspH30gJuVIm47oKJ+e5Gv+sZpZEkz7aUXMT5N
Z/2/aqa+e9EYONV8NaqZ9mPC3MUpHtkZLdS/Ccf+21xqftxCezLh8IPZj3Yf
aiUeZvj7XPLfP0NNPMww5qU/G6poIx5mlPokvFuX2k48zJhu+VX+3L2dePTh
WrxhTuBmDfHoQ+XB3Ip9Rx8yvj5LH/KcvgvzSu5kfFzvfly74DE/N6eLePRD
Hz4ntkbYTTz6Me/MVdfpt7XEw4LnM2ozVeU64mGB+fgWp0fZeuJhQcFva1Pf
uGQgHgNIbA1wPfVKD/EYgDIgRN411EM8BjD4xc2727aaiMcgXM6vLSq+0Ec8
BjFp/d4doYcH6Ps1CA9hxdR/sweIhxXnpiybVOliJR5WiBZd/l4SPEQ8rIh6
y3Z2lspKPIawccfuiMJRM/EYQn3oYMNIro54DCHESRz22LOOeNhQori+d3Xc
a5THhvci5ky7FVBFfGzonhfcIU7QUj4bjCesH61LMxEvGzprJgiOfNZPeW2I
X67u3HLXRPxsuBB0gIuqNVD+Yby6KfXOmJ+WeA7jz9l5yZPuaaiPYfSb70/I
ErYQ32FsH72ZVpCiYP8DniNnDQ==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], FontSize -> 18], 
         Line[CompressedData["
1:eJw1lHlQlHUYx1HHA2c8EkrNUGQ8kDRtBExIvqQw4sG4u6GW6eQFKDkjJCMm
aJaiGJCUpamJWt4IMo7SKrY/jj3el3NZjpXlcA/uvUfRCpHY14dnZmf/eef7
Pp/v55l35va9kujhbm5u0YM/1//5c655CG2tp+qlSs3mbT5V0uv7GMWj/NrS
FqnZw+mpZrFUhnC7LEWUUs2uxi8bq/2zCOu/W/X6ik8Fs4ilg08UI2dWXx38
y5n/YteU4u4L55jDkjKW7Jm30nBQjtD5HmUFRp6V9voOvkGBaVZpSuZXPBsM
G0xUYcQDy/dBy3kmccWJOUTl3/cK/Jtjb/bjcaF14zjvkTwzHnQFluGV5z/p
tl6O9q3AxvjcvLxgniW41ouvxLOvz1/8Ip2j/asgKT8TuDlYxdyEUSO6r/lQ
yxYV8aiRbRQbLfEcizC4XlADU7e3V1kuR3w16On/o+2tETzLKnEBaHDkp/45
gSKOeGuxYRJflF/KMQFHW4vb8tGNA0c44q/DHqn1xt4NPJvhWmd6PY5mP2+Y
tU/FhLiSekyUzNQuUXIsRpgG/MApwhPUHPWjxT2lZK6fjGeuNM88LR5WDBxk
C4f6eoLrsbdDAzby7IUrrvcJfk9QDtenDPXXiI9u5u6ImMKzECFQB323x/Sj
44f61GFklO6zGI5jx13rpTbB0086bN1xjvkJ/TZjz3Vf7txYnlVVuKYZzm24
FpDNMaG++Bb4pDbJm1QcE3A9WxG16+y9uEEfwnrSVrw7r/i32EIFE+I2P8Wt
Xdkr9PuKyIceB9ZFpstqbxKPHjOdS3f62nLIjx6zc1MV0upi4tMjZv/zVWeu
KMmXAe8o+8Yp0njiNeBzW3/imovl5M+A0OThE4aVVhC/EZELYlNMU6uYsM4p
I96TbM+8pKhib+KMSNofXbj1cjUT9C42Yat7UYN/tJoJ+lJN+KSRZU3Qqcm3
CfnjLWm3gmroHtuQnfe2ZjRqyH8b7nvL86/Ja1il0F8bdiRPmXJHUUP30A6P
2P5ftog0dL/tKNxx+IbykYbuox3hVbkFoX0a6rcDwTf7wpxFtXQvHbCsTM+K
CK+jvjtwrIQ9kUvq6H46cXv2mqOXQuqp/04s+aCsZVJhPd1TJyTey9s/jWsg
H124mvV4zEu7lnx0oTxTE/FMpiUfXZhWKZqkymwkH11ICF63+9WiRvLRDWli
8V9rNunIRzf0HofmBOxpYkJ95m7oEm40pj1oZgLush6k8jBkVLaQjx64BxhK
5Aufko8evB5IvDTmgJ58mDFjflKczzcG8mHG2qD6LPFaI/kwQ530LCoy2EQ+
LLgr3mv+cUQ7+bAgxPrz41Z7O/mwoGi1d0bcl53kwwrR5NPaE6u7yYcVE68G
lnl3mOn7ZUW+1j1sW4aFfNiwNKaayb1s5MOGsGmRo0bNs5MPG+78d7LnZL6V
fNix3teZk9vfRT7sQKLp9IdnDOTDDse3O18+9x/6XjmQHfPxXPfLGtkbHgdy
RmaEFKwqIT8OnCzw2LQgSk98DmxwpF84u6KTfDlwuFIkPrakh3gdCN/564lH
kzvJnwPv707eHqs0Eb8TS72m+g6s1JNPJ5L+Fc0KD9JRH07k5MgnTpDVkV8n
Zu+Or2oLU7P/AZiYZfo=
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], FontSize -> 18], 
         Line[CompressedData["
1:eJw1lAtMU3cYxRGNU1BZkG7L5pigY7rNKIIGVDg+CI+J8hB0cbghgjoWBbOx
TVQmYlGGzjmn4CM+kREYviEolX8tj94ixVIqReTRllcLpS1jbHPCXHv5+JKb
m5vcnP855/fd6xaXFJlgb2dnl2C9bPdzZ21zHxlb5fEjUgWbH3NCMjxPBJ9k
t7s7BQp231XYH1FWgU9love/y5GzvGQ/B/U1McqD09/Jd69jxogy6xuP0PZW
aX7eR4+Zt5dtKrE47/HpI5G1bJ/LjSBtahV6LtwUlupkrHJ4nvWEajzI9t38
yQQZs4pZFaUQTTx6JXeIY5E2uQgOk//89R/Phxwb8yfDrMLKSStSOKZLtQnW
Ir1q2qB5mCO/dRjd9qP3Wr2U7bHZS5ZDkJV7W2h9HvNfj+2WLWlvzJEyO34U
GI2+VOhoJ6U8CnSF73c2JnMsWGs7oAH9IZ6utcUc5WsAZjuaj6zh2M8SWwAl
drxa77E0nKO8jTiyKkd8q5JjfBx1IxYMB3xwwJ2j/CrksyjH1dkce89mx/Up
lsmETXO/ljJeTvIUgcFPjgnEHNvOTxN2iQKPfqvgqB81Djr0Yn0ox2xqLjfU
uHd+W5x4oYz6akbxzIepB3Uc+8smN9yMHT+kZfftH+/vGabJ7O6kW/v05wVb
UFVkPnSqY7zPFrhpXWZPLuJYps2e8DmEBfb2YZkc+5DvtxU3C/TSsw4yVl9n
m1YkKuvyl1zkGF9fchumFN73apVyjI/r0o6881LfGQIp4+2VtUOya2RgZ3k1
4+ViOvBZs4NzZKKYeGiw9EF0dkVjAeXR4G7govh5piLio8HKgFjR0O5HlE8D
/69ehZy5UkO8tChwrFe3rZFRXi3yQgdiz3g+Jn5aJOlOHv9PUkf5dYi7vOpw
WYmc8XZO6LB7Y8rV09X1bExOB4+Ma+Wxl58wHq9XJ9Ym1DR5JygYj0/YiQ2B
BVn/3lEQ706UqOdWJXePfz9dsFtXpngNDcS/Cy98746c/6aByfn+unA13n9R
YXUD7UM3Xm+8WrslXEn7240vWWTMnVIl7Uc3DFpfw6qXSuq3B9ECaakhpZH2
pQcF24uiJsxUUd89mJq+/2FlpIr2pxfGPPtfpvSoqP9eZGwM9Zhe/pT2qRdn
0zbt2pDYRDz00Hom+rw0q4mHHqt1KkFOhZp46LFZ0jH3sLqZeOiR5GIyjC56
RjwMcDDtPaZybyEeBsz6vKY4/4vnjK+v34BNy108MktaGR/Xrw/BYTklmfI2
4tEHXdysfVULO4hHH5qqb2qnfa8hHv0IO3jpltteLfHoh19/V+rtFTri0Y+p
6+bHhC/vJB5GRA3F/3a9uot4GKEMia5vN3cTDyP0MSE+Szb1Eo8BfBwQlXTo
bQPxGIBoj3PN2uI++n8NYHH7xKytx4zEw4RzTgumiN81EQ8TnK6Hjq68aCIe
Jvh5CUZOzhkgHmaE7dydeGNUTzzMKG74afoFBy3xMCPaPid2yHv8f2VB1rmg
lD9+V1aM5bHAcEu5Mm2JhPhYIMrxEc9w0lA+CyYqI6K3Lu0lXhbseOD6sm1Q
T3ktcH6R+6zszV7iZ0HuqRV/B0k6Kf8gJm0+XvoqSEM8BxEgvncgdFkL9TGI
A7czjNdLVcR3EDPk9U6X/RXsf+DzY48=
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], FontSize -> 18], 
         Line[CompressedData["
1:eJw1lHtMU3cYhtnQCqK4CYQxUSEoN1G5yBJFfTNARZw4wYluXgDBaAYKapjg
dTrURAUvwwx08wIiTCWTixZ0/gSEHhSwBaS0grSFlgJtLTpm3KaOc/z4kqb/
nLzne97na13jtkcmfGxhYZEw/OG/c3P4qcAX45ynXL0gZV7rsqqHPO8h1Hnb
qs5RT1jFlIyBleL7ePO9Udvo0sjykxeMlec9QMxuTcohhwZmWCkefqIKvxe2
vrzt/pjNCeCnBtGiVUsHQx+xPfbFS9TpD3FpccHPuXfqWc2Q5/AbarFpq6H9
RyPHhsOGEyVwvlPRk/GKY5F83EoO5pP9mrWXOfZhv3ooY/+6qNrJMU06H/gI
tW/YjekijvZtwGmH346NqpSwFH695EbIqnxmzt4uof2bsMz6qLWTm4RZCCPF
nXK5wf9VHfFIMV05fr8xmWNhav4FMixXjHNKj+WIT4bPysLLA104dqqaB2jG
vInT1PcncMTbgiB2z/+fKo4JOPIWRJydEZzlwBF/K0S3nM4EmyVsKr/OlKe4
7RgRVhsnYUJc9VMsqCnM9ivg2GZh2pA9c75evHakHzkeboxyXPQVx/g0+2I5
ulZ87SqKGumrHfOLPa6UJXHsbz5uqB11Ihv3/r0j/SkQs8Qq/9Myji0UApU4
4CT+9fCDkT6VcM5tF4+5zrEj/HoZz7C+rPujFUc45i3024FMd49M2y0ca2rg
pwPvdm7/wWk4X6gvuRP7ziau0b2UMAHX/jlyNl1ZPsFBwoT1xM8xNjFBbrW/
lglx67oQ+rnj7T9mPSAfKvgmW73XVRUSjwr+8eHxnqbr5EcFRVvOjKRvq4hP
hZD8tHlH1taRLzVUOlmWOqSeeNWYK55oWeD3mPypsaIsbd/VnAbi18DQ96jn
z5uNTFgnS4PJW+3mnK5tYh/iNFAUxH1TeugJE/QGdMPO90TTeF8pE/RldMPk
EW91Ik9KvrthrYyfnqod+f30oPSAwiLBT0b+e+C/fpH04i4ZaxT668HgFdFo
yyoZ3YMWtrei3n05uZnuV4v1F1I3FKU1031oEVgd7plobKZ+dUhSMy//sBa6
Fx2W2JSv3jCqlfrW4eAx+Zizka10P70oiljmNVbXSv334q3Ro/F94lO6p17Y
nI87qAxsIx96BHkV2Px7Tk4+9AiZpEyfM1FOPvSwHSicOXd0O/nQI7rydWqZ
j4J89KG0UOY15KgkH32IxsKTlQHPmFDfQB+atccss/06mIC7oB+Ha7zTas90
ko9+ZIWkDgVYdJGPfqT+977UereKfAzguShy2/HVavIxAJ/KonNTPTXkYwBb
9s4oWRbUTT4MyJ0aE5y0o4d8GFCxMWqrtEtLPgywc71sq4joJR9GVKSkLr35
Wk8+jFgTnLzDlNdP/19GuLTlbnaONZAPEwpcH056VWEkHybcjSlJcQs3kQ8T
vB07Vx13M5KPF+hI/GlL8Vs9+XiBPTufbH5sUpGPF/jOe+HR0dI68mFG0o3o
XUnlzfc/8Jjxy7WEDdd8q8mPGebZYUE+tiriM+NlSZGfZFIv+TLDzt0UeKlF
T7xmnLdWOTaN7yV/ZsROCy2sZN3EP4hcb9/67AAV+RzEjqNv1ac+UVIfg8h0
C4ufVdJKfgdhb5lytytIyv4HszFPMg==
          "]]}, {
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6], FontSize -> 18], 
         Line[CompressedData["
1:eJw1lHlMk3cYx/HY4gGoCE7UIUSdqNMgoE5J/XpON3WmeAJG7DZcGNOBc6CI
omYYjAc6jRNxc5HOOJhcghRFfwJCX67ScthyCKUtbS0ttBy6TNDR14cnafrP
m+/7fL6fp/X6+sfAsJEODg5hQx/7941k+xTgyNF9Zddvytm8PUnF/d6FuFSb
+8Y2uoYVeCR0CiVPMP/YxcpBz2omjhSMU6Y+xQPt99PPuVUxs1Ay9EQR3MVR
LqEOlczfzz4lkPzz2rJufQU75pqxoT32GQ6skI3Oyi9nJf3eQ28oRc3D3TV/
6zk2FDaUKMV638pNCxo5FmiPE3IY0C2JbTzOsff7lcMr/ta1nYc4pom1B1ag
oi+obvaHHO1bBZ8TwQd2SKQsyr5eZDWmZqYe9hJJaX8Z9uUO/jzgIWUO/Mhx
LP+RaVlvGfHIoc9SrzRv5djGdvsLFFhz/U7xCRFHfArc6MsLWO3JsUvFdoBa
FMw894nPBI5461ARLQxyzucYj6OsQ6og/F6yE0f89XDYcjtsiUnKZtrX8WjA
k/Pum+8JpIyPK27Ag7K+zPLfObafn+dYdEUQeydouB8ltiem792wmWP2NNcM
JQK3Vn3lvW24LxUiWrasFody7JU9rl+F1VuezjXHDffXiCnXdCfH53JsJR/Y
hIZP16Z4xg/32YTTHe8mOUZy7Ix9vYRm6HzNwVNjODaf77cFY6wptnffcUxW
ZZ8W5CkEXEo0x/j6Il/g14PhwYYeKeNxXVthi9CIx7pJGb+epBVj3Fpyk6JL
GR+3pw3SjHzxlUVPyYcaj3OEs93z7hKPGqFi17MS9zTyo0ZL59n/0rYVEZ8a
e4/8eeNMUBn5aofopOLgqc/Kibcdr27ed1k5pZL8tePg0W37fU9VEb8GLPSh
MOavasavk6TBYHrPDM8SGXsfp8G39ZLswtM1jNfrp4WocWrwvoVyxutL0KIw
YjBC8IecfGux88KcwZiO4d+PDreKU3OD5ynIvw7bfXrCkg8rWDXfnw5vsur0
LkUKuocOJIWLjgg/rqX77YBnHAvJPVpL99GBu7cvfLPLUkv96vFa5rRzxsY6
uhc9FsQFjcTIeupbj0MjdH1JgfV0PwbMscYtHKWvp/4NmDJOUxTyQwPdkwHi
89awuYufkw8jnN/lbPztqpJ8GFH5qk3l6KIkH0YsTTuj9v9ART6MUE8YVzHR
o5F8vERsXrgyxtxIPl5iUrdbQolfM+Pr63yJx77xa7IXtzAeV2BCYn8O53Th
Bfkw4VlIa/rb/lbyYULD6Njlv0SpyUcnxqskTqt828lHJxw3Td68wFtDPjqh
DOmdsSNASz7MKDQXmESHdOTDjDkr7uecaO0gH2as740u/fwLA/mw4LZsIGWV
1Ug+LIgav9+t7ZaJ/r8s2Ht81il/kZl8dOHfsao2U4GFfHTho0drB3y+7CIf
XYgY5eJzdpaFfHTj7fLLERmDRvLRjV6vnurdTWry0Y1F64ym6fIy8mFFPHd1
+5prtU/e81jx2jlbX+VRTH6smKZ7qPV3VhOfFZmykrR0NwP5siIZvgt/qjES
rxWJuwSVAY4G8mfFsj2X45ofa4nfhmkjnJZe9FOTTxtUWVmlNyc2UR82xE+b
fMc1s5782vCoIntDc4Cc/Q/X7GK4
          "]]}}, {{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], FontSize -> 18], 
         GeometricTransformation[
          Inset[
           Style["\[FilledCircle]", FontSize -> 8.96], {0., 
           0.}], CompressedData["
1:eJw1lHlQlHUcxlcss6zUJMdUPLKQPFoSNEzhyZw4IjUoqlEcGWxNARXH8gCk
UA5FGR1l2EFRcEARcZDMg0t+CAj7Lsuy7HKuHHvBLiwsi1fUiLT7+uU78/tv
53mf5/k8swtD9waKJgoEApHtTbA9B9s7n26/YnhMlY2s7FawT4JPVz5zKcPa
4PSnya4KVjwvwRxQVI5JVtN1/5gGlhPp+VZrdgVKfePmXP1QxgYCimy/eICF
qzcnCEUy5u5mvyossHQ7lnZIWbRjgY82qhq9GTcT7uo4VvXMxfaFhxhLb45N
CeeYTcymWIvbF7yKNxzmWKBdLkCCSU9TRz67L2Gv/HFY86jMfXk+x3RRdkEp
zIItnts/5civDB5H0woK1nBsn91eZD1cFvk8Hs2UkH85Tr1su7FtioQJ+FPA
kHVC6hpbS3kU2CUUlyq7JMxXa/9AI9Yv9LgS4imlfI34Jzxptfwcx85U2gMo
8evYRudV30korwpJ68QVhVUSxsdpVUEbKmkb+1NC+ZvgroCwzknK5tvtzGvG
F1xCy0f7axkvV9mMTHXGkbU1EraDvxbsLvM+fkAhoX5aMcUnJq/rjzpmV3Ms
aLX1tT20QjjeVxvilwpyV//Esed2uWdtKIi8GT1tGUf9tcOj5FSo7yyOefGC
arjubXI69u54n2r47Tj01/5ojiXa7SU8QnTDdMvGcClbwvfbgUvO8cafhTIm
l9mvA2FK2dWVlySMry+yE20y453FC+oYH9exC9/8KL4VZuPB2yvqQtLuWakO
M2sYLxfcjTwgKK2wknhosKok6GS56hrl0eBvb9dfXCz5xEeDTRkZlnsNDyif
Bl7hY35pl2uIlxadu9rfeXh8PK8WgQaX0cyt4/vUYpMoQ7XiTj3l10Fatcjc
/4Gc8XZO65DoHXN2uVrOXsnp4HwsuzQkq4HxeN308BfVtLiLFIzHl6BHppvu
zFS1gnjrEXd2/aFdXzXSHg0QbChSvIFG4m+AkCkLr1Q3snq+PwO8OwY7Spcp
aQ89CDLmRfllK2m/PYiI14tfNilpHz3gZieLWw+qqN9e5Km+dRhZ2kR76UWU
V+M536+bqO9eNPhPM12LaKL9GDFvSbJbVnoz9W/E8f+2lJieNNOejDjycM7j
PYdbiIcJvl6XfQ/MbCMeJhhy054PlbcSDxNKvOLeq01pJx4mzDD/Jn/h2k48
+nA9Vj/Xf4uaePSh4lBO+f7ER4yvz9yHXIfvQzySOhkf17Mf1y+6LcjJ7iIe
/dCFzo2uFnYTj37MP3vNecYdDfEw48XMmgxVmZZ4mGE6sdXhcZaOeJiR//u6
lDcv64nHAOJb/JxPT+whHgNQ+gXJu4Z6iMcABr+8dW/7NiPxGITThXWFRRf7
iMcgJm/YtzP4yAD9fw3CTVg+7d+sAeJhwfmpyydXOFmIhwWixVd+kAQOEQ8L
It62nputshCPIWzauSesYNREPIZQFzxYP5KjJR5DCHIQhzxxryUeVhQrbuxb
E/M65bHi/bC502/7VRIfK7rnB3aI4zSUzwrDScvH61ONxMuKzuoJgmOf91Ne
K2JXtHVuvWckflZcDDjIRdToKf8wXtuccnfMR0M8h3F0Tm7S5Ptq6mMY/aYH
EzKFzcR3GDtGb6XmJyvY/7MfZw8=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], FontSize -> 18], 
         GeometricTransformation[
          Inset[
           Style["\[FilledSquare]", FontSize -> 8.96], {0., 
           0.}], CompressedData["
1:eJw1lHlQ1GUcxlHGA2c8EkrNUHQ8kDRtBExIHlIY8WDc3VDLdPIClJwRkhET
NEtRDEjK0tRELW8EGUdpFduXY4/fj3NZjpXlcA/uXfYYRStE2v355Tvz/vfO
8z7P8/nOO2P7Xkm0u5ubW7TzDHOe4c5z/pxrHkJb66V6qVKzeZtPlfT5Pkbx
SL+2tEVq9nBaqlkslSHcJksRpVSzq/HLxmj/LML671a9vjKzglnEUueNYuTM
6q+DfznzX+yaUtx94Rh9WFLGkr3yVhoOyhE637OswMiz0j5f5wsKTO2VpmR+
xTOnmFNRBfcHlu+DlvNM4pITc4jKv+8d+DfH3vjjcaF141ifETwzHnQJluGV
1z/p1j6O/FZgY3xuXl4wzxJc9uIr8ezr8xe/SOfIfxUk5WcCNwermJswakT3
Nx9q2aKiPGpkG8VGSzzHIgyuB2pg6vbxLsvlKF8Negb+aHvLnWdZJa4AGhz5
aWBOoIijvLXYMJEvyi/lmBBHW4vb8lGNg0c4yl+HPdLeG3s38Gy6y860ehzN
ft4wa5+KCXIl9ZggmaFdouRYjDAN+IFThCeoOepHi3tKyVw/Gc9cal55Wjys
GDzIFg719QTXY2+HBmzk2QuXXN8T/J6gHK5PGeqvER/dzN0RMZlnIYKgDvpu
z2lHxw31qcOIKN1nMRzHjrvspTbBy086bN1xjvkJ/TZjz3Vf7twYnlVVuKYZ
jm24FpDNMaG++BbMTG2SN6k4JsT1akXUrrP34pw8BHvSVrw7r/i32EIFE+Q2
P8WtXdkr9PuKiIceB9ZFpstqb1IePWY4lu70teYQHz1m56YqpNXFlE+PmP3P
V525oiReBryj7B+rSOMprwGfWwcS11wsJ34GhCYPHz+stILyGxG5IDbFNKWK
CXZOGfGeZHvmJUUVeyNnRNL+6MKtl6uZgHexCVs9ihr8o9VMwJdqwieNLGu8
Tk28TcgfZ0m7FVRD+9iG7Ly3NaNQQ/zbcN9Hnn9NXsMqhf7asCN58uQ7ihra
h3Z4xg78skWkof1tR+GOwzeUjzS0H+0Ir8otCO3XUL8dCL7ZH+YoqqV96YBl
ZXpWRHgd9d2BYyXsiVxSR/vTiduz1xy9FFJP/XdiyQdlLRML62mfOiHxWd7+
aVwD8ejC1azHo1/atMSjC+WZmohnMi3x6MLUStFEVWYj8ehCQvC63a8WNRKP
bkgTi/9as0lHPLqh9zw0J2BPExPqM3dDl3CjMe1BMxPiLutBKg9DRmUL8eiB
R4ChRL7wKfHowevBxEujD+iJhxnT5yfFzfzGQDzMWBtUnyVeayQeZqiTnkVF
BpuIhwV3xXvNP7q3Ew8LQnp/ftxqayceFhSt9smI+7KTePRCNOm09sTqbuLR
iwlXA8t8Osz0f/UiX+sRti3DQjysWBpTzeTeVuJhRdjUyJEj59mIhxV3/jvZ
czK/l3jYsN7XkZM70EU8bECi6fSHZwzEwwb7tztfPvcf+q/syI75eK7HZY3s
TR47ckZkhBSsKiE+dpws8Ny0IEpP+ezYYE+/cHZFJ/Gy43ClSHxsSQ/ltSN8
568nHk3qJH52vL87eXus0kT5HVjqPcV3cKWeeDqQ9K9oVniQjvpwICdHPmG8
rI74OjB7d3xVW5ia/Q+tlGX8
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], FontSize -> 18], 
         GeometricTransformation[
          Inset[
           Style["\[FilledDiamond]", FontSize -> 10.88], {0., 
           0.}], CompressedData["
1:eJw1lHtQVGUYxhEcU1BpkK2mjESNtHIUQQdUeLwwXBLlImhjWIigRqPgFJWo
JCIooZmZgpfxisRAeIdBQb51uexZZHFZVhaRy+5y2V122V0iKhOy3cPLO/P9
cWbOPN/zPL/3HPe4pMgEBzs7uwTrmWA99tZz7qxt7iNjqzR+RCxj82NOiIbn
VcIn2f3uToGM3XfLNESUV+FTSeX73+VKWX6yn6PymhAVwenvFMxuYMaIcusb
j9DxVllB/kePmbeXbaqxOP/x6SOR9Wyf640gdWoN+i7czCzTSFj18DzrDbV4
kOO7+ZMJEmYVsyqKUelw9EreEMcibXIRHCb9+es/ng85NuZPgplF1RNXpHBM
k2oTrEd6zdRB8zBHfhswuu1H77U6Mdtjs5cshSA773am9XnMfyO2W7akvTFH
zOz4kWE0+lKRk52Y8sjQE77fxZjMsWC17YImGEI83epLOMrXBMxyMh9Zw7Gf
RbYAcux4td5jaThHeZtxZFWu8FY1x/g4ymYsGA744MBsjvIrUMCinFbncOw9
mx23p1gmyWyZ+7WY8XKipwgMfnJMIOTYdn5asKsy8Oi3Mo76UeKgoxbrQzlm
U3O9ocS989vihAsl1FcrSmY8TD2o4dhfNrnhVuz4IS2nf/94f88wVWJ3J93a
pz8v2IaaYvOhU13jfbbBXe06a1Ixx7Js9jKfI7PQ3j4si2Mf8v2242ahTnzW
UcIaG2zTjkR5Q8GSixzj60vuwOSi+17tYo7xcV07kX9e7DtdIGa8vfJOiHaN
DOysqGW8XEwXPmt1dIlMFBIPFZY+iM6pai6kPCrcDVwUP89UTHxUWBkQWzm0
+xHlU8H/q1chZ67UES81Cp0alR1rJJRXjfzQgdgzno+JnxpJmpPH/xM1UH4N
4i6vOlxeKmW8nRMa7N6YcvV0bSMbk9PAI+NaRezlJ4zH69WNtQl1Ld4JMsbj
y+zGhsDC7H/vyIh3N0qVc2uSe8e/nx7YrSuXvYYm4t+DF753R85/08SkfH89
uBrvv6ioton2oRevN1+t3xIup/3txZcsMuZOmZz2oxd6ta9+1Us59duHaIG4
TJ/STPvSh8LtxVETZiio7z5MSd//sDpSQfujhTHf/pfJfQrqX4uMjaEe0yqe
0j5pcTZt064NiS3EQwe1Z6LPS7OSeOiwWqMQ5FYpiYcOm0Vdcw8rW4mHDkmu
Jv3oomfEQw9H095jitltxEOPmZ/XlRR88Zzx9Rn02LTc1SOrtJ3xcf36ERyW
W5ol7SAe/dDEzdxXs7CLePSjpfameur3KuJhQNjBS7fc96qJhwF+hp7U2ys0
xMOAKevmx4Qv7yYeRkQNxf92vbaHeBghD4lu7DT3Eg8jdDEhPks2aYnHAD4O
iEo69LaeeAygco9L3dqSfvp/DWBxp0P21mNG4mHCOecFk4XvmoiHCc7XQ0dX
XjQRDxP8vAQjJ+cMEA8zwnbuTrwxqiMeZpQ0/TTtgqOaeJgRbZ8bO+Q9/r+y
IPtcUMofv8urxvJYoL8lX5m2RER8LKjM9RFOd1ZRPgsc5BHRW5dqiZcFOx64
vewY1FFeC1xe5D0rf1NL/CzIO7Xi7yBRN+UfxMTNx8teBamI5yAChPcOhC5r
oz4GceB2hvF6mYL4DmK6tNH5sr+M/Q/172OR
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], FontSize -> 18], 
         GeometricTransformation[
          Inset[
           Style["\[FilledUpTriangle]", FontSize -> 10.24], {0., 
           0.}], CompressedData["
1:eJw1lHlQU1cYxbFoBFFsBYZSUWFQNlFZpDOKcqaAFaFiBSvaugCCo1NQUIcK
rtWizqjgUpyCtu4IVZnKogGtV0DIQxYTQEIiSBJICJDEoKWObdEmz49v5v73
5txzzu+7zzVhe3SSpYWFRZLpjDGdj0wnP888Ffh8ovP06xfEzGtdTvWw5wOE
OW9b1TX2KauYnjW4UvgQb7/Xq5tcmti11MUTpFcfIW63Ku2QQyPTrRSavqjC
74Vtr+66N7D5AeapQaxg1bKhsCdsj33xUmXmY1z6suDn/Hv1rGbY03RDLTZt
1XX8qOeYScykKILzvYrerNccizbLreRgPDmgWnuZYx/81UMe/9dFxU6OqTLN
gk9Q+5bdmiXgyG8jTjv8dmxspYilme2lNkFS5TNn3nYR+W9GpPVRayc3EbPg
R4x75VKd/+s6yiPGLPmk/fpUjoUrzRdIsFw20SkznqN8EnxaFlEe6MKxU9Xm
AC1YOGWm8uFkjvK2Iog98P+nimN8HGkros7ODslx4Ch/GwR3nM6EGEVshtnO
9Ge46xgVXpsgYrxc9TMsrinM9Svg2GZ+2pE7Z5FWuHa0Hykeb4xxXPIVx8xq
9sVSdK/42lUQM9pXBxYVe1wpS+HY32a54Q7UCWzcB/aO9idD3FKra5+UcSyY
F5TjgJPw18OPRvuUwzm/Qzj+JseOmO1lPcf6sp4xK45wzJvvtxPZ7h7Ztls4
1txonk6827n9ByeTPl9fahf2nU1eo3klYnxc+xfI23Rl+WQHEePtCV9gQnKS
1Gp/LePl1nUj7DPHu3/MfUQ8FPBNtXqvqSqkPAr4J0YkehpuEh8FZO15s1O+
raJ8CoRey1h4ZG0d8VJCoZHkKEPrKa8SC4RTLAv8GoifEivKMvZdz2uk/Cro
+p/0/nm7ifF2clSYttVu/unaZvZBTgVZQcI3pYeeMh5vQA/sfE80T/IVMx5f
Vg8MHolWJ66KiXcPrOWJs9LVo++nF6UHZBZJfhLi3wv/9UvEF3dJWBPfXy+G
rgjGWVZJaB/UsL0T8+6LaS20v2qsv5C+oSijhfZDjcDqCM9kfQv1q0GKknn5
h7fSvmiw1KZ89YaxbdS3BgePScefjW6j/elDUVSk1wRNG/XfhxG9R9P75Ge0
T32wOZ9wUB7YTjy0CPIqsPn3nJR4aBE6VZ45f4qUeGhhO1g4Z8G4DuKhRWzl
m/QyHxnx6EdpocRr2FFOPPoRi+CTlQHPGV/fYD9a1Mcsc/06GR938QAO13hn
1J7pIh4DyAlNHw6w6CYeA0j/732p9W4F8RjEC0H0tuOrlcRjED6VRedmeKqI
xyC27J1dEhnUQzx0yJ8RF5Kyo5d46FCxMWaruFtNPHSwc71sK4vqIx56VKSl
L7v9Rks89FgTkrrDcHWA/l96uLTnb3aO1xEPAwpcH099XaEnHgbcjytJc4sw
EA8DvB27Vh130xOPl+hM/mlL8YiWeLzEnp1PNzcYFMTjJb7zDj46TlxHPIxI
uRW7K6W85eGHPEb8ciNpww3fauJjhHFeeJCPrYLyGfGqpMhPNLWPeBlh524I
vNSqpbxGnLdWODZP6iN+RsTPDCusZD2Ufwj53r71uQEK4jmEHUdHlKc+llMf
Q8h2C0+cW9JGfIdgb5l2vztIzP4HyC1PNA==
          "]]}, {
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6], FontSize -> 18], 
         GeometricTransformation[
          Inset[
           Style["\[FilledDownTriangle]", FontSize -> 10.24], {0., 
           0.}], CompressedData["
1:eJw1lHlQU1cYxXFpxwVQEayoRRi1olYHAbXKxONabdU6wRVwxLTFDqVasBYU
UdQpDo4LWh0rYmtHUsdCZRMkKHoFhDy2kLCYsAghCUkMARIW7VTQJs+Pb+b+
9+bcc87vu8/r6x8Dw0Y5ODiE2c4I2xlpOzeS7VOAI0f3lV2/KWfz9iQVD3gX
4lJt7hvr6BpW4JHQKZQ8wfxjFyuHPKuZOFIwTpn6FA+0308/51bFzEKJ7Ysi
uIujXEIdKpm/n31KIPnndde69RXsmGvGhvbYZziwQjY6K7+clQx4224oRc3D
3TV/6zlmE7MpSrHet3LTgkaOBdrlhBwGdUtiG49z7L2/cnjF37q28xDHNLF2
wQpU9AfVzf6QI79V8DkRfGCHRMqi7PYiqzE1M/Wwl0hK/mXYlzv086CHlDnw
I8ex/EemZX1llEcOfZZ6pXkrxza22y9QYM31O8UnRBzlU+BGf17Aak+OXSq2
B6hFwcxzn/hM4ChvHSqihUHO+Rzj4yjrkCoIv5fsxFH+ejhsuR22xCRlM+12
PBrw5Lz75nsCKePlihvwoKw/s/x3ju3n5zkWXRHE3gka7keJ7Ynpezds5phd
zTVDicCtVV95bxvuS4WIli2rxaEce2WXG1Bh9Zanc81xw/01Yso13cnxuRxb
yQs2oeHTtSme8cN9NuF0x7tJjpEcO2O3l9AMna85eGoMx+bz/bZgjCXF+u47
jsmq7NOCPIWAS4nmGF9f5Av8ejA82NArZXxc11ZYIzTisW5SxtuTtGKMW0tu
UnQp4+X2tEGakS++sugp8VDjcY5wtnveXcqjRqjY9azEPY34qNHSefa/tG1F
lE+NvUf+vHEmqIx4tUN0UnHw1GfllLcdr27ed1k5pZL4tePg0W37fU9VUX4N
WOhDYcxf1Yy3k6TBUHrvDM8SGXsvp8G39ZLswtM1jMfrp4WocWrwvoVyxuNL
0KIwYihC8IeceGux88KcoZiO4fejw63i1NzgeQrir8N2n96w5MMKVs33p8Ob
rDq9S5GC9qEDSeGiI8KPa2l/O+AZx0Jyj9bSfnTg7u0L3+zqqqV+9Xgtc9o5
Y2Md7YseC+KCRmJkPfWtx6ERuv6kwHraHwPmWOIWjtLXU/8GTBmnKQr5oYH2
yQDxeUvY3MXPiYcRzu9yNv52VUk8jKh81aZydFESDyOWpp1R+3+gIh5GqCeM
q5jo0Ug8XiI2L1wZY24kHi8xqcctocSvmfH1db7EY9/4NdmLWxgfV2BC4kAO
53ThBfEw4VlIa/rbgVbiYULD6Njlv0SpiUcnxqskTqt824lHJxw3Td68wFtD
PDqhDOmbsSNASzzMKDQXmESHdMTDjDkr7uecaO0gHmas74su/fwLA/Howm3Z
YMoqi5F4dCFq/H63tlsm+n91Ye/xWaf8RWbi0Y1/x6raTAVdxKMbHz1aO+jz
ZTfx6EbEKBefs7O6iEcP3i6/HJExZCQePejz6q3e3aQmHj1YtM5omi4vIx4W
xHNXt6+5VvvkfR4LXjtn66s8iomPBdN0D7X+zmrKZ0GmrCQt3c1AvCxIhu/C
n2qMlNeCxF2CygBHA/GzYNmey3HNj7WU34ppI5yWXvRTE08rVFlZpTcnNlEf
VsRPm3zHNbOe+FrxqCJ7Q3OAnP0P7Ohiug==
          "]]}, {}}}, {}}, {
     DisplayFunction -> Identity, GridLines -> {None, {-0.06052805400769599}},
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0.084375, -1.0499009176012706`}, 
      PlotRange -> {{0.1, 
       1.1}, {-1.0332358940119506`, -4.431474118592637*^-6}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, 
      AxesOrigin -> {0.084375, -1.0499009176012706`}, 
      BaseStyle -> {FontFamily -> "Arial", FontSize -> 18}, 
      CoordinatesToolOptions -> {"DisplayFunction" -> ({
          Part[#, 1], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Part[#, 1], 
          Exp[
           Part[#, 2]]}& )}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"Transition Amplitude", None}, {
        "k2(\!\(\*SubscriptBox[\(\[Omega]\), \(m\)]\))", 
         "Fluction Wavelength (km)"}}, FrameTicks -> {{
         Charting`ScaledTicks[{Log, Exp}], None}, {Automatic, {{0.1, 
           ScientificForm[256627.2352624902, 2]}, {0.48, 
           ScientificForm[53464.007346352126`, 2]}, {0.86, 
           ScientificForm[29840.376193312815`, 2]}, {1.2400000000000002`, 
           ScientificForm[20695.74477923308, 2]}, {1.62, 
           ScientificForm[15841.18736188211, 2]}, {2., 
           ScientificForm[12831.36176312451, 2]}}}}, FrameTicksStyle -> 
      Larger, GridLines -> {None, {-0.06052805400769599}}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], 
      ImagePadding -> {{Automatic, Automatic}, {Automatic, 60}}, ImageSize -> 
      800, LabelStyle -> GrayLevel[0], Method -> {}, PlotLabel -> 
      "Transition Amplitude (k1=0.5)", 
      PlotRange -> {{0.1, 
       1.1}, {-1.0332358940119506`, -4.431474118592637*^-6}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontSize -> 18], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], FontSize -> 18], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], FontSize -> 18], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], FontSize -> 18], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], FontSize -> 18]}, {
       "[0,4.9e7]km", "[0,9.8e7]km", "[0,2.e8]km", "[0,9.8e8]km", 
        "[0,2.e9]km"}, 
       LegendMarkers -> {{"\[FilledCircle]", 8.96}, {
         "\[FilledSquare]", 8.96}, {"\[FilledDiamond]", 10.88}, {
         "\[FilledUpTriangle]", 10.24}, {"\[FilledDownTriangle]", 10.24}}, 
       Joined -> {True, True, True, True, True}, LabelStyle -> GrayLevel[0], 
       LegendLayout -> "Column"]], {Center, Bottom}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.672783608549617*^9, 3.672783875690632*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate the n list that is responsible", "Chapter",
 CellChangeTimes->{{3.672769436102635*^9, 3.6727694543348427`*^9}}],

Cell[CellGroupData[{

Cell["Dip arround 1.0", "Subchapter",
 CellChangeTimes->{{3.672769488876382*^9, 3.672769492916812*^9}}],

Cell["\<\
Questions:
1. Why is there a dip arround 1.0?\
\>", "Text",
 CellChangeTimes->{{3.6727694571891947`*^9, 3.6727694773248243`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Part", "[", 
     RowBox[{
      RowBox[{"qValueOrderdList", "[", 
       RowBox[{
        RowBox[{"listNGenerator", "[", 
         RowBox[{"2", ",", "6"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "k2"}], "}"}], ",", "twoaList", ",", 
        "twophiList", ",", "thetamVRes"}], "]"}], ",", 
      RowBox[{"1", ";;", "4"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k2", ",", "1", ",", "0.8", ",", 
      RowBox[{"-", "0.05"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6727721432519913`*^9, 3.672772208531617*^9}, {
  3.6727722426159363`*^9, 3.672772252736999*^9}, {3.672772321913809*^9, 
  3.6727723264795923`*^9}, {3.672772367240899*^9, 3.672772391181747*^9}, {
  3.67277248273188*^9, 3.672772485013247*^9}, {3.672775427295699*^9, 
  3.672775428274024*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6"}], ",", "4"}], "}"}], ",", "0.`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "3"}], "}"}], ",", "0.`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "0.`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "0.`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}], ",", "0.`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "5.268579984701645`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", "52.522839361140846`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", "157.56851808342253`"}], 
      "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}], ",", "0.`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "10.538582414428644`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", "52.53703260230005`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", "157.61109780690015`"}], 
      "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}], ",", "0.`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "15.810395288455142`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", "52.55381095549776`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", "157.66143286649327`"}], 
      "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6"}], ",", "5"}], "}"}], ",", "0.`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}], ",", "0.`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "21.084540139307165`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", "52.57384314814851`"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6727721494047003`*^9, 3.672772253194704*^9}, 
   3.672772310989403*^9, {3.672772385284768*^9, 3.6727723922181396`*^9}, {
   3.6727724782163982`*^9, 3.672772485481675*^9}, 3.672775428701956*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dipEffectiveNList0point8", "=", 
  RowBox[{"Flatten", "[", " ", 
   RowBox[{
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"qValueOrderdList", "[", 
         RowBox[{
          RowBox[{"listNGenerator", "[", 
           RowBox[{"2", ",", "6"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.95"}], "}"}], ",", "twoaList", ",", 
          "twophiList", ",", "thetamVRes"}], "]"}], ",", 
        RowBox[{"1", ";;", "4"}]}], "]"}], ",", "None", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6727726710525227`*^9, 3.6727727962819767`*^9}, 
   3.6727728360441523`*^9, {3.672774073361044*^9, 3.6727740817588863`*^9}, {
   3.672775226039589*^9, 3.6727752369522343`*^9}, {3.672775432461597*^9, 
   3.672775433370186*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.672772668411841*^9, 3.672772682416004*^9}, {
   3.6727727128039083`*^9, 3.672772725905284*^9}, {3.672772767714649*^9, 
   3.672772797056595*^9}, {3.672774073850985*^9, 3.672774082465081*^9}, {
   3.6727752306765327`*^9, 3.672775237473*^9}, {3.672775281558082*^9, 
   3.672775290622072*^9}, 3.672775434790812*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"widthNList", "[", 
  RowBox[{
   RowBox[{"dipEffectiveNList0point8", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "0.95"}], "}"}], ",", "twoaList", ",", "twophiList", 
   ",", "thetamVRes"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dipEffectiveNList0point8", "[", 
   RowBox[{"[", "1", "]"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"0.5", ",", "0.95"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.672775241044814*^9, 3.672775249679531*^9}, {
  3.67277531009368*^9, 3.672775313083043*^9}, {3.6727754376802053`*^9, 
  3.6727754679606667`*^9}}],

Cell[BoxData["0.0008805038492011333`"], "Output",
 CellChangeTimes->{
  3.672774083754806*^9, {3.672775245255082*^9, 3.672775250102096*^9}, {
   3.672775304784731*^9, 3.6727753133412724`*^9}, {3.6727754388963337`*^9, 
   3.672775468888517*^9}}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.672774083754806*^9, {3.672775245255082*^9, 3.672775250102096*^9}, {
   3.672775304784731*^9, 3.6727753133412724`*^9}, {3.6727754388963337`*^9, 
   3.6727754688957243`*^9}}]
}, Open  ]],

Cell["the corresponding wavelength is", "Text",
 CellChangeTimes->{{3.6727746081120253`*^9, 3.672774617763134*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeVInverse2km", "[", 
  RowBox[{"2", 
   RowBox[{"Pi", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"widthNList", "[", 
       RowBox[{
        RowBox[{"dipEffectiveNList0point8", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.95"}], "}"}], ",", "twoaList", ",", 
        "twophiList", ",", "thetamVRes"}], "]"}], "*", 
      RowBox[{"OmegaMatter", "[", 
       RowBox[{"thetamVRes", ",", "thetaVRes", ",", "omegaVRes"}], "]"}]}], 
     ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.672774619002054*^9, 3.672774629008066*^9}, {
  3.672775090671939*^9, 3.67277509085257*^9}, {3.672775262513085*^9, 
  3.672775276910616*^9}, {3.6727754764845047`*^9, 3.672775477392652*^9}}],

Cell[BoxData["2.9145498397914317`*^7"], "Output",
 CellChangeTimes->{
  3.67277463148717*^9, 3.672775091161727*^9, {3.6727752553771563`*^9, 
   3.6727752773621798`*^9}, 3.672775477811535*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"pltNList", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dipEffectiveNList0point8", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "0.95"}], "}"}], ",", "twoaList", ",", "twophiList", 
    ",", "thetamVRes", ",", "endpointNRes", ",", 
    RowBox[{"\"\<List\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"dipEffectiveNList0point8", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "Blue", ",", "None", ",",
     "None"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.672772825566012*^9, 3.672772886154696*^9}, {
   3.672772960034148*^9, 3.6727730553180113`*^9}, {3.672773238849854*^9, 
   3.6727732398887043`*^9}, {3.672773299212935*^9, 3.672773309443363*^9}, {
   3.6727735877626762`*^9, 3.672773588743602*^9}, {3.672775483320315*^9, 
   3.672775487392623*^9}, 3.672783083724197*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"pltNList", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dipEffectiveNList0point8", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "0.95"}], "}"}], ",", "twoaList", ",", "twophiList", 
    ",", "thetamVRes", ",", "endpointNRes", ",", 
    RowBox[{"\"\<List\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"dipEffectiveNList0point8", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", "Blue", ",", "None", ",",
     "None"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.6727732711079187`*^9, 3.672773992882131*^9, {3.672775505625413*^9, 
   3.6727755228562403`*^9}, 3.672783074800082*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"pltNList", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dipEffectiveNList0point8", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "0.95"}], "}"}], ",", "twoaList", ",", "twophiList", 
    ",", "thetamVRes", ",", "endpointNRes", ",", 
    RowBox[{"\"\<List\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"dipEffectiveNList0point8", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ",", "Blue", ",", "None", ",",
     "None"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{3.6727830683237047`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1254, 755},
WindowMargins->{{-1916, Automatic}, {Automatic, -280}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification->1.25,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 278, 5, 37, "Text"],
Cell[CellGroupData[{
Cell[861, 29, 89, 1, 114, "Title"],
Cell[953, 32, 196, 5, 57, "Input"],
Cell[1152, 39, 159, 2, 36, "Input"],
Cell[1314, 43, 155, 2, 36, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1506, 50, 123, 1, 114, "Title"],
Cell[CellGroupData[{
Cell[1654, 55, 95, 1, 81, "Chapter"],
Cell[CellGroupData[{
Cell[1774, 60, 322, 11, 57, "Input"],
Cell[2099, 73, 655, 9, 38, "Output"],
Cell[2757, 84, 635, 9, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3429, 98, 1218, 37, 133, "Input"],
Cell[4650, 137, 563, 8, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5250, 150, 327, 7, 57, "Input"],
Cell[5580, 159, 676, 10, 35, "Output"],
Cell[6259, 171, 686, 10, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6982, 186, 186, 6, 36, "Input"],
Cell[7171, 194, 490, 7, 35, "Output"]
}, Open  ]],
Cell[7676, 204, 1148, 33, 78, "Input"],
Cell[CellGroupData[{
Cell[8849, 241, 128, 1, 78, "Subchapter"],
Cell[CellGroupData[{
Cell[9002, 246, 1944, 52, 288, "Input"],
Cell[10949, 300, 584, 9, 35, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11594, 316, 98, 1, 81, "Chapter"],
Cell[11695, 319, 916, 21, 57, "Input"],
Cell[12614, 342, 835, 18, 36, "Input"],
Cell[CellGroupData[{
Cell[13474, 364, 151, 2, 35, "Input"],
Cell[13628, 368, 3061, 75, 41, "Output"]
}, Open  ]],
Cell[16704, 446, 920, 17, 57, "Input"],
Cell[17627, 465, 870, 16, 57, "Input"],
Cell[18500, 483, 894, 16, 57, "Input"],
Cell[CellGroupData[{
Cell[19419, 503, 768, 17, 78, "Input"],
Cell[20190, 522, 771, 15, 35, "Output"]
}, Open  ]],
Cell[20976, 540, 1709, 27, 57, "Input"],
Cell[22688, 569, 834, 15, 57, "Input"],
Cell[CellGroupData[{
Cell[23547, 588, 1037, 22, 78, "Input"],
Cell[24587, 612, 1111, 23, 35, "Output"]
}, Open  ]],
Cell[25713, 638, 868, 19, 57, "Input"],
Cell[26584, 659, 505, 15, 35, "Input"],
Cell[CellGroupData[{
Cell[27114, 678, 196, 4, 54, "Subsection"],
Cell[27313, 684, 146, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[27484, 689, 108, 1, 35, "Input"],
Cell[27595, 692, 500, 12, 35, "Output"]
}, Open  ]],
Cell[28110, 707, 157, 3, 37, "Text"],
Cell[28270, 712, 2387, 58, 183, "Input"],
Cell[30660, 772, 1351, 31, 120, "Input"],
Cell[32014, 805, 1366, 37, 120, "Input"],
Cell[33383, 844, 112, 1, 37, "Text"],
Cell[33498, 847, 1474, 37, 120, "Input"],
Cell[34975, 886, 467, 8, 36, "Input"],
Cell[35445, 896, 176, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[35646, 904, 44, 0, 35, "Input"],
Cell[35693, 906, 777, 19, 35, "Output"]
}, Open  ]],
Cell[36485, 928, 2710, 64, 288, "Input"],
Cell[39198, 994, 577, 12, 57, "Input"],
Cell[39778, 1008, 109, 1, 37, "Text"],
Cell[39890, 1011, 878, 22, 57, "Input"],
Cell[40771, 1035, 101, 1, 37, "Text"],
Cell[40875, 1038, 476, 11, 36, "Input"],
Cell[41354, 1051, 110, 1, 37, "Text"],
Cell[41467, 1054, 2170, 46, 204, "Input"],
Cell[CellGroupData[{
Cell[43662, 1104, 646, 13, 57, "Input"],
Cell[44311, 1119, 481, 10, 41, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44853, 1136, 109, 1, 81, "Chapter"],
Cell[44965, 1139, 175, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[45165, 1147, 780, 17, 57, "Input"],
Cell[45948, 1166, 614, 14, 52, "Output"],
Cell[46565, 1182, 454, 7, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47056, 1194, 703, 18, 99, "Input"],
Cell[47762, 1214, 952, 16, 57, "Output"]
}, Open  ]],
Cell[48729, 1233, 2433, 51, 309, "Input"],
Cell[51165, 1286, 140, 1, 37, "Text"],
Cell[51308, 1289, 3068, 79, 204, "Input"],
Cell[CellGroupData[{
Cell[54401, 1372, 700, 18, 78, "Input"],
Cell[55104, 1392, 180, 2, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55321, 1399, 4082, 97, 267, "Input"],
Cell[59406, 1498, 609, 9, 35, "Output"]
}, Open  ]],
Cell[60030, 1510, 101, 1, 37, "Text"],
Cell[60134, 1513, 1084, 25, 78, "Input"],
Cell[CellGroupData[{
Cell[61243, 1542, 2430, 61, 183, "Input"],
Cell[63676, 1605, 3565, 60, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67278, 1670, 759, 17, 57, "Input"],
Cell[68040, 1689, 279, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68356, 1698, 3500, 87, 267, "Input"],
Cell[71859, 1787, 15649, 357, 763, "Output"]
}, Open  ]],
Cell[87523, 2147, 128, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[87676, 2152, 609, 10, 36, "Input"],
Cell[88288, 2164, 121300, 2028, 658, "Output"]
}, Open  ]],
Cell[209603, 4195, 1490, 33, 57, "Input"],
Cell[211096, 4230, 1311, 26, 57, "Input"],
Cell[212410, 4258, 668, 16, 57, "Input"],
Cell[213081, 4276, 120, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[213226, 4281, 213, 4, 36, "Input"],
Cell[213442, 4287, 8571, 217, 372, "Output"]
}, Open  ]],
Cell[222028, 4507, 74, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[222127, 4512, 8282, 200, 834, "Input"],
Cell[230412, 4714, 80631, 1607, 797, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[311092, 6327, 127, 1, 81, "Chapter"],
Cell[CellGroupData[{
Cell[311244, 6332, 103, 1, 78, "Subchapter"],
Cell[311350, 6335, 139, 4, 61, "Text"],
Cell[CellGroupData[{
Cell[311514, 6343, 885, 21, 57, "Input"],
Cell[312402, 6366, 3110, 103, 124, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315549, 6474, 869, 20, 78, "Input"],
Cell[316421, 6496, 645, 16, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317103, 6517, 622, 15, 57, "Input"],
Cell[317728, 6534, 244, 4, 35, "Output"],
Cell[317975, 6540, 227, 4, 35, "Output"]
}, Open  ]],
Cell[318217, 6547, 115, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[318357, 6552, 766, 18, 99, "Input"],
Cell[319126, 6572, 191, 3, 37, "Output"]
}, Open  ]],
Cell[319332, 6578, 905, 19, 57, "Input"],
Cell[320240, 6599, 708, 17, 57, "Input"],
Cell[320951, 6618, 609, 15, 57, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
